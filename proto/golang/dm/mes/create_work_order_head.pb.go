// Code generated by protoc-gen-go. DO NOT EDIT.
// source: create_work_order_head.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddWorkOrderHeadRequest struct {
	FtyId                int32    `protobuf:"varint,1,opt,name=fty_id,json=ftyId,proto3" json:"fty_id,omitempty"`
	ProductCate          string   `protobuf:"bytes,2,opt,name=product_cate,json=productCate,proto3" json:"product_cate,omitempty"`
	User                 string   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddWorkOrderHeadRequest) Reset()         { *m = AddWorkOrderHeadRequest{} }
func (m *AddWorkOrderHeadRequest) String() string { return proto.CompactTextString(m) }
func (*AddWorkOrderHeadRequest) ProtoMessage()    {}
func (*AddWorkOrderHeadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4e6cabfabc5693, []int{0}
}

func (m *AddWorkOrderHeadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddWorkOrderHeadRequest.Unmarshal(m, b)
}
func (m *AddWorkOrderHeadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddWorkOrderHeadRequest.Marshal(b, m, deterministic)
}
func (m *AddWorkOrderHeadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddWorkOrderHeadRequest.Merge(m, src)
}
func (m *AddWorkOrderHeadRequest) XXX_Size() int {
	return xxx_messageInfo_AddWorkOrderHeadRequest.Size(m)
}
func (m *AddWorkOrderHeadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddWorkOrderHeadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddWorkOrderHeadRequest proto.InternalMessageInfo

func (m *AddWorkOrderHeadRequest) GetFtyId() int32 {
	if m != nil {
		return m.FtyId
	}
	return 0
}

func (m *AddWorkOrderHeadRequest) GetProductCate() string {
	if m != nil {
		return m.ProductCate
	}
	return ""
}

func (m *AddWorkOrderHeadRequest) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type AddWorkOrderHeadReply struct {
	Heads                []*LotHead `protobuf:"bytes,1,rep,name=heads,proto3" json:"heads,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AddWorkOrderHeadReply) Reset()         { *m = AddWorkOrderHeadReply{} }
func (m *AddWorkOrderHeadReply) String() string { return proto.CompactTextString(m) }
func (*AddWorkOrderHeadReply) ProtoMessage()    {}
func (*AddWorkOrderHeadReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4e6cabfabc5693, []int{1}
}

func (m *AddWorkOrderHeadReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddWorkOrderHeadReply.Unmarshal(m, b)
}
func (m *AddWorkOrderHeadReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddWorkOrderHeadReply.Marshal(b, m, deterministic)
}
func (m *AddWorkOrderHeadReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddWorkOrderHeadReply.Merge(m, src)
}
func (m *AddWorkOrderHeadReply) XXX_Size() int {
	return xxx_messageInfo_AddWorkOrderHeadReply.Size(m)
}
func (m *AddWorkOrderHeadReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddWorkOrderHeadReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddWorkOrderHeadReply proto.InternalMessageInfo

func (m *AddWorkOrderHeadReply) GetHeads() []*LotHead {
	if m != nil {
		return m.Heads
	}
	return nil
}

type LotHead struct {
	LotHead              string   `protobuf:"bytes,1,opt,name=lot_head,json=lotHead,proto3" json:"lot_head,omitempty"`
	SeqNo                string   `protobuf:"bytes,2,opt,name=seq_no,json=seqNo,proto3" json:"seq_no,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LotHead) Reset()         { *m = LotHead{} }
func (m *LotHead) String() string { return proto.CompactTextString(m) }
func (*LotHead) ProtoMessage()    {}
func (*LotHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_db4e6cabfabc5693, []int{2}
}

func (m *LotHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LotHead.Unmarshal(m, b)
}
func (m *LotHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LotHead.Marshal(b, m, deterministic)
}
func (m *LotHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LotHead.Merge(m, src)
}
func (m *LotHead) XXX_Size() int {
	return xxx_messageInfo_LotHead.Size(m)
}
func (m *LotHead) XXX_DiscardUnknown() {
	xxx_messageInfo_LotHead.DiscardUnknown(m)
}

var xxx_messageInfo_LotHead proto.InternalMessageInfo

func (m *LotHead) GetLotHead() string {
	if m != nil {
		return m.LotHead
	}
	return ""
}

func (m *LotHead) GetSeqNo() string {
	if m != nil {
		return m.SeqNo
	}
	return ""
}

func init() {
	proto.RegisterType((*AddWorkOrderHeadRequest)(nil), "proto.dm.mes.AddWorkOrderHeadRequest")
	proto.RegisterType((*AddWorkOrderHeadReply)(nil), "proto.dm.mes.AddWorkOrderHeadReply")
	proto.RegisterType((*LotHead)(nil), "proto.dm.mes.LotHead")
}

func init() { proto.RegisterFile("create_work_order_head.proto", fileDescriptor_db4e6cabfabc5693) }

var fileDescriptor_db4e6cabfabc5693 = []byte{
	// 272 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8f, 0x4f, 0x4b, 0xc3, 0x40,
	0x10, 0xc5, 0x89, 0x35, 0xad, 0xdd, 0x7a, 0x5a, 0x08, 0x46, 0xf0, 0x50, 0x7b, 0x0a, 0x08, 0xbb,
	0x50, 0x2f, 0xa2, 0x27, 0xff, 0x1c, 0x14, 0x44, 0x21, 0x17, 0xc1, 0xcb, 0xb2, 0xcd, 0x4e, 0x63,
	0x49, 0x36, 0xd3, 0xec, 0x4e, 0x2c, 0xf9, 0xf6, 0x92, 0x35, 0x07, 0xc1, 0xd3, 0xcc, 0xbc, 0xf7,
	0x98, 0xf9, 0x0d, 0xbb, 0x28, 0x1c, 0x68, 0x02, 0x75, 0x40, 0x57, 0x29, 0x74, 0x06, 0x9c, 0xfa,
	0x02, 0x6d, 0xc4, 0xde, 0x21, 0x21, 0x3f, 0x0d, 0x45, 0x18, 0x2b, 0x2c, 0xf8, 0x55, 0xc9, 0xce,
	0xee, 0x8d, 0xf9, 0x40, 0x57, 0xbd, 0x0f, 0xc1, 0x67, 0xd0, 0x26, 0x87, 0xb6, 0x03, 0x4f, 0x3c,
	0x61, 0xd3, 0x2d, 0xf5, 0x6a, 0x67, 0xd2, 0x68, 0x19, 0x65, 0x71, 0x1e, 0x6f, 0xa9, 0x7f, 0x31,
	0xfc, 0x92, 0x0d, 0x1b, 0x4c, 0x57, 0x90, 0x2a, 0x34, 0x41, 0x7a, 0xb4, 0x8c, 0xb2, 0x79, 0xbe,
	0x18, 0xb5, 0x47, 0x4d, 0xc0, 0x39, 0x3b, 0xee, 0x3c, 0xb8, 0x74, 0x12, 0xac, 0xd0, 0xaf, 0x9e,
	0x58, 0xf2, 0xff, 0xd0, 0xbe, 0xee, 0xf9, 0x15, 0x8b, 0x07, 0x3a, 0x9f, 0x46, 0xcb, 0x49, 0xb6,
	0x58, 0x27, 0xe2, 0x2f, 0x9f, 0x78, 0x45, 0x0a, 0xd1, 0xdf, 0xcc, 0xea, 0x8e, 0xcd, 0x46, 0x85,
	0x9f, 0xb3, 0x93, 0x1a, 0x29, 0x7c, 0x16, 0x00, 0xe7, 0xf9, 0xac, 0x1e, 0xad, 0x84, 0x4d, 0x3d,
	0xb4, 0xaa, 0xc1, 0x11, 0x2e, 0xf6, 0xd0, 0xbe, 0xe1, 0xc3, 0xed, 0xe7, 0x4d, 0xb9, 0xa3, 0x5a,
	0x6f, 0x44, 0x05, 0x8d, 0xd1, 0xa2, 0x40, 0x2b, 0xe8, 0x20, 0xc3, 0x20, 0x0b, 0xb4, 0x16, 0x1b,
	0x2f, 0xbf, 0xd7, 0x32, 0x00, 0xc8, 0x12, 0x6b, 0xdd, 0x94, 0xd2, 0x58, 0x69, 0xc1, 0x6f, 0xa6,
	0x41, 0xbc, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x2b, 0x1d, 0x33, 0xc9, 0x5c, 0x01, 0x00, 0x00,
}
