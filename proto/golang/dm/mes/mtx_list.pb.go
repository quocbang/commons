// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mtx_list.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MTxListRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	TxType               string   `protobuf:"bytes,2,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	ItemId               string   `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	MtrlLotId            string   `protobuf:"bytes,4,opt,name=mtrl_lot_id,json=mtrlLotId,proto3" json:"mtrl_lot_id,omitempty"`
	ProductType          string   `protobuf:"bytes,5,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	MtrlProductId        string   `protobuf:"bytes,6,opt,name=mtrl_product_id,json=mtrlProductId,proto3" json:"mtrl_product_id,omitempty"`
	MtrlLevel            string   `protobuf:"bytes,7,opt,name=mtrl_level,json=mtrlLevel,proto3" json:"mtrl_level,omitempty"`
	CrFtyId              int32    `protobuf:"varint,8,opt,name=cr_fty_id,json=crFtyId,proto3" json:"cr_fty_id,omitempty"`
	CrDeptId             string   `protobuf:"bytes,9,opt,name=cr_dept_id,json=crDeptId,proto3" json:"cr_dept_id,omitempty"`
	NxFtyId              int32    `protobuf:"varint,10,opt,name=nx_fty_id,json=nxFtyId,proto3" json:"nx_fty_id,omitempty"`
	NxDeptId             string   `protobuf:"bytes,11,opt,name=nx_dept_id,json=nxDeptId,proto3" json:"nx_dept_id,omitempty"`
	Codd                 string   `protobuf:"bytes,12,opt,name=codd,proto3" json:"codd,omitempty"`
	Qty                  float32  `protobuf:"fixed32,13,opt,name=qty,proto3" json:"qty,omitempty"`
	Unit                 string   `protobuf:"bytes,14,opt,name=unit,proto3" json:"unit,omitempty"`
	ConfirmBy            string   `protobuf:"bytes,15,opt,name=confirm_by,json=confirmBy,proto3" json:"confirm_by,omitempty"`
	UpdateBy             string   `protobuf:"bytes,16,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	Status               string   `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`
	Comments             string   `protobuf:"bytes,18,opt,name=comments,proto3" json:"comments,omitempty"`
	MtrlComments         string   `protobuf:"bytes,19,opt,name=mtrl_comments,json=mtrlComments,proto3" json:"mtrl_comments,omitempty"`
	InsertBy             string   `protobuf:"bytes,20,opt,name=insert_by,json=insertBy,proto3" json:"insert_by,omitempty"`
	OnlyToday            bool     `protobuf:"varint,21,opt,name=only_today,json=onlyToday,proto3" json:"only_today,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MTxListRequest) Reset()         { *m = MTxListRequest{} }
func (m *MTxListRequest) String() string { return proto.CompactTextString(m) }
func (*MTxListRequest) ProtoMessage()    {}
func (*MTxListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_6306b202aedb3f66, []int{0}
}

func (m *MTxListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MTxListRequest.Unmarshal(m, b)
}
func (m *MTxListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MTxListRequest.Marshal(b, m, deterministic)
}
func (m *MTxListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MTxListRequest.Merge(m, src)
}
func (m *MTxListRequest) XXX_Size() int {
	return xxx_messageInfo_MTxListRequest.Size(m)
}
func (m *MTxListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MTxListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MTxListRequest proto.InternalMessageInfo

func (m *MTxListRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *MTxListRequest) GetTxType() string {
	if m != nil {
		return m.TxType
	}
	return ""
}

func (m *MTxListRequest) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *MTxListRequest) GetMtrlLotId() string {
	if m != nil {
		return m.MtrlLotId
	}
	return ""
}

func (m *MTxListRequest) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *MTxListRequest) GetMtrlProductId() string {
	if m != nil {
		return m.MtrlProductId
	}
	return ""
}

func (m *MTxListRequest) GetMtrlLevel() string {
	if m != nil {
		return m.MtrlLevel
	}
	return ""
}

func (m *MTxListRequest) GetCrFtyId() int32 {
	if m != nil {
		return m.CrFtyId
	}
	return 0
}

func (m *MTxListRequest) GetCrDeptId() string {
	if m != nil {
		return m.CrDeptId
	}
	return ""
}

func (m *MTxListRequest) GetNxFtyId() int32 {
	if m != nil {
		return m.NxFtyId
	}
	return 0
}

func (m *MTxListRequest) GetNxDeptId() string {
	if m != nil {
		return m.NxDeptId
	}
	return ""
}

func (m *MTxListRequest) GetCodd() string {
	if m != nil {
		return m.Codd
	}
	return ""
}

func (m *MTxListRequest) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *MTxListRequest) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *MTxListRequest) GetConfirmBy() string {
	if m != nil {
		return m.ConfirmBy
	}
	return ""
}

func (m *MTxListRequest) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *MTxListRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MTxListRequest) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *MTxListRequest) GetMtrlComments() string {
	if m != nil {
		return m.MtrlComments
	}
	return ""
}

func (m *MTxListRequest) GetInsertBy() string {
	if m != nil {
		return m.InsertBy
	}
	return ""
}

func (m *MTxListRequest) GetOnlyToday() bool {
	if m != nil {
		return m.OnlyToday
	}
	return false
}

type MaterialTransaction struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	ItemId               string   `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	TxType               string   `protobuf:"bytes,3,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	ProductType          string   `protobuf:"bytes,5,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	Material_LotId       string   `protobuf:"bytes,6,opt,name=material_Lot_id,json=materialLotId,proto3" json:"material_Lot_id,omitempty"`
	MaterialProductId    string   `protobuf:"bytes,7,opt,name=material_product_id,json=materialProductId,proto3" json:"material_product_id,omitempty"`
	MaterialLevel        string   `protobuf:"bytes,8,opt,name=material_level,json=materialLevel,proto3" json:"material_level,omitempty"`
	CrFtyId              int32    `protobuf:"varint,9,opt,name=cr_fty_id,json=crFtyId,proto3" json:"cr_fty_id,omitempty"`
	CrDeptId             string   `protobuf:"bytes,10,opt,name=cr_dept_id,json=crDeptId,proto3" json:"cr_dept_id,omitempty"`
	NxFtyId              int32    `protobuf:"varint,11,opt,name=nx_fty_id,json=nxFtyId,proto3" json:"nx_fty_id,omitempty"`
	NxDeptId             string   `protobuf:"bytes,12,opt,name=nx_dept_id,json=nxDeptId,proto3" json:"nx_dept_id,omitempty"`
	Codd                 string   `protobuf:"bytes,13,opt,name=codd,proto3" json:"codd,omitempty"`
	Qty                  float32  `protobuf:"fixed32,14,opt,name=qty,proto3" json:"qty,omitempty"`
	Unit                 string   `protobuf:"bytes,15,opt,name=unit,proto3" json:"unit,omitempty"`
	ConfirmAt            string   `protobuf:"bytes,16,opt,name=confirm_at,json=confirmAt,proto3" json:"confirm_at,omitempty"`
	ConfirmBy            string   `protobuf:"bytes,17,opt,name=confirm_by,json=confirmBy,proto3" json:"confirm_by,omitempty"`
	Status               string   `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`
	Comments             string   `protobuf:"bytes,19,opt,name=comments,proto3" json:"comments,omitempty"`
	MtrlComments         string   `protobuf:"bytes,20,opt,name=mtrl_comments,json=mtrlComments,proto3" json:"mtrl_comments,omitempty"`
	UpdateAt             string   `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	UpdateBy             string   `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	InsertAt             string   `protobuf:"bytes,23,opt,name=insert_at,json=insertAt,proto3" json:"insert_at,omitempty"`
	InsertBy             string   `protobuf:"bytes,24,opt,name=insert_by,json=insertBy,proto3" json:"insert_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaterialTransaction) Reset()         { *m = MaterialTransaction{} }
func (m *MaterialTransaction) String() string { return proto.CompactTextString(m) }
func (*MaterialTransaction) ProtoMessage()    {}
func (*MaterialTransaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_6306b202aedb3f66, []int{1}
}

func (m *MaterialTransaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaterialTransaction.Unmarshal(m, b)
}
func (m *MaterialTransaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaterialTransaction.Marshal(b, m, deterministic)
}
func (m *MaterialTransaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaterialTransaction.Merge(m, src)
}
func (m *MaterialTransaction) XXX_Size() int {
	return xxx_messageInfo_MaterialTransaction.Size(m)
}
func (m *MaterialTransaction) XXX_DiscardUnknown() {
	xxx_messageInfo_MaterialTransaction.DiscardUnknown(m)
}

var xxx_messageInfo_MaterialTransaction proto.InternalMessageInfo

func (m *MaterialTransaction) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *MaterialTransaction) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *MaterialTransaction) GetTxType() string {
	if m != nil {
		return m.TxType
	}
	return ""
}

func (m *MaterialTransaction) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *MaterialTransaction) GetMaterial_LotId() string {
	if m != nil {
		return m.Material_LotId
	}
	return ""
}

func (m *MaterialTransaction) GetMaterialProductId() string {
	if m != nil {
		return m.MaterialProductId
	}
	return ""
}

func (m *MaterialTransaction) GetMaterialLevel() string {
	if m != nil {
		return m.MaterialLevel
	}
	return ""
}

func (m *MaterialTransaction) GetCrFtyId() int32 {
	if m != nil {
		return m.CrFtyId
	}
	return 0
}

func (m *MaterialTransaction) GetCrDeptId() string {
	if m != nil {
		return m.CrDeptId
	}
	return ""
}

func (m *MaterialTransaction) GetNxFtyId() int32 {
	if m != nil {
		return m.NxFtyId
	}
	return 0
}

func (m *MaterialTransaction) GetNxDeptId() string {
	if m != nil {
		return m.NxDeptId
	}
	return ""
}

func (m *MaterialTransaction) GetCodd() string {
	if m != nil {
		return m.Codd
	}
	return ""
}

func (m *MaterialTransaction) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *MaterialTransaction) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *MaterialTransaction) GetConfirmAt() string {
	if m != nil {
		return m.ConfirmAt
	}
	return ""
}

func (m *MaterialTransaction) GetConfirmBy() string {
	if m != nil {
		return m.ConfirmBy
	}
	return ""
}

func (m *MaterialTransaction) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MaterialTransaction) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *MaterialTransaction) GetMtrlComments() string {
	if m != nil {
		return m.MtrlComments
	}
	return ""
}

func (m *MaterialTransaction) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

func (m *MaterialTransaction) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *MaterialTransaction) GetInsertAt() string {
	if m != nil {
		return m.InsertAt
	}
	return ""
}

func (m *MaterialTransaction) GetInsertBy() string {
	if m != nil {
		return m.InsertBy
	}
	return ""
}

func init() {
	proto.RegisterType((*MTxListRequest)(nil), "proto.dm.mes.MTxListRequest")
	proto.RegisterType((*MaterialTransaction)(nil), "proto.dm.mes.MaterialTransaction")
}

func init() { proto.RegisterFile("mtx_list.proto", fileDescriptor_6306b202aedb3f66) }

var fileDescriptor_6306b202aedb3f66 = []byte{
	// 613 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0xd5, 0xad, 0xed, 0x9a, 0xd3, 0xae, 0xdb, 0xdc, 0xb1, 0x59, 0x1b, 0xa0, 0x32, 0x04,
	0xea, 0x55, 0x22, 0xc1, 0x0d, 0xe2, 0x6e, 0x05, 0x21, 0x55, 0xda, 0x24, 0x54, 0xf5, 0x8a, 0x9b,
	0xc8, 0x8b, 0xbd, 0x29, 0x22, 0xb1, 0xb3, 0xe4, 0x74, 0x24, 0x4f, 0xc6, 0xeb, 0xf0, 0x28, 0xc8,
	0x76, 0x92, 0xfe, 0x5b, 0x0b, 0x57, 0xb5, 0xbf, 0xf3, 0x9d, 0xcf, 0xc7, 0xe9, 0x2f, 0x81, 0x7e,
	0x8c, 0xb9, 0x1f, 0x85, 0x19, 0xba, 0x49, 0xaa, 0x50, 0x91, 0x9e, 0xf9, 0x71, 0x79, 0xec, 0xc6,
	0x22, 0xbb, 0xfa, 0xd3, 0x84, 0xfe, 0xed, 0x2c, 0xbf, 0x09, 0x33, 0x9c, 0x8a, 0xc7, 0xb9, 0xc8,
	0x90, 0x0c, 0xa0, 0x85, 0xb9, 0x1f, 0x72, 0xda, 0x18, 0x36, 0x46, 0xce, 0xb4, 0x89, 0xf9, 0x84,
	0x93, 0x73, 0x38, 0xc0, 0xdc, 0xc7, 0x22, 0x11, 0x74, 0xcf, 0xc8, 0x6d, 0xcc, 0x67, 0x45, 0x22,
	0x74, 0x21, 0x44, 0x11, 0x6b, 0xff, 0xbe, 0x2d, 0xe8, 0xed, 0x84, 0x93, 0xd7, 0xd0, 0x8d, 0x31,
	0x8d, 0xfc, 0x48, 0xa1, 0x2e, 0x36, 0x4d, 0xd1, 0xd1, 0xd2, 0x8d, 0xc2, 0x09, 0x27, 0x6f, 0x40,
	0x4f, 0xc2, 0xe7, 0x01, 0xda, 0xd8, 0x96, 0x31, 0x74, 0x4b, 0xcd, 0x64, 0xbf, 0x87, 0x23, 0x13,
	0x51, 0xf9, 0x42, 0x4e, 0xdb, 0xc6, 0x75, 0xa8, 0xe5, 0xef, 0x56, 0x9d, 0x70, 0xf2, 0x0a, 0xc0,
	0x1e, 0x25, 0x9e, 0x44, 0x44, 0x0f, 0x96, 0x4e, 0xd2, 0x02, 0xb9, 0x00, 0x27, 0x48, 0xfd, 0x7b,
	0x2c, 0x74, 0x40, 0x67, 0xd8, 0x18, 0xb5, 0xa6, 0x07, 0x41, 0xfa, 0x0d, 0x8b, 0x09, 0x27, 0x2f,
	0x01, 0x82, 0xd4, 0xe7, 0x22, 0x31, 0xe9, 0x8e, 0x69, 0xed, 0x04, 0xe9, 0x57, 0x91, 0xe8, 0xe0,
	0x0b, 0x70, 0x64, 0x5e, 0x75, 0x82, 0xed, 0x94, 0x79, 0xdd, 0x29, 0xf3, 0xba, 0xb3, 0x6b, 0x3b,
	0x65, 0x5e, 0x76, 0x12, 0x68, 0x06, 0x8a, 0x73, 0xda, 0xb3, 0xcf, 0x50, 0xaf, 0xc9, 0x31, 0xec,
	0x3f, 0x62, 0x41, 0x0f, 0x87, 0x8d, 0xd1, 0xde, 0x54, 0x2f, 0xb5, 0x6b, 0x2e, 0x43, 0xa4, 0x7d,
	0xeb, 0xd2, 0x6b, 0x7d, 0x99, 0x40, 0xc9, 0xfb, 0x30, 0x8d, 0xfd, 0xbb, 0x82, 0x1e, 0xd9, 0xcb,
	0x94, 0xca, 0xb8, 0x20, 0x97, 0xe0, 0xcc, 0x13, 0xce, 0x50, 0xe8, 0xea, 0xb1, 0x3d, 0xd5, 0x0a,
	0xe3, 0x82, 0x9c, 0x41, 0x3b, 0x43, 0x86, 0xf3, 0x8c, 0x9e, 0xd8, 0xff, 0xc2, 0xee, 0xc8, 0x05,
	0x74, 0x02, 0x15, 0xc7, 0x42, 0x62, 0x46, 0x49, 0x79, 0xc7, 0x72, 0x4f, 0xde, 0x82, 0x79, 0x9a,
	0x7e, 0x6d, 0x18, 0x18, 0x43, 0x4f, 0x8b, 0x5f, 0x2a, 0xd3, 0x25, 0x38, 0xa1, 0xcc, 0x44, 0x8a,
	0xfa, 0xd4, 0x53, 0x9b, 0x60, 0x85, 0x71, 0xa1, 0x27, 0x56, 0x32, 0x2a, 0x7c, 0x54, 0x9c, 0x15,
	0xf4, 0xc5, 0xb0, 0x31, 0xea, 0x4c, 0x1d, 0xad, 0xcc, 0xb4, 0x70, 0xf5, 0xbb, 0x05, 0x83, 0x5b,
	0x86, 0x22, 0x0d, 0x59, 0x34, 0x4b, 0x99, 0xcc, 0x58, 0x80, 0xa1, 0x92, 0x5b, 0x39, 0xab, 0x70,
	0xda, 0x5b, 0xc1, 0x69, 0x09, 0xc0, 0xfd, 0x15, 0x00, 0xff, 0x93, 0xa3, 0x72, 0x00, 0xff, 0x46,
	0xad, 0x70, 0x54, 0xca, 0x16, 0x49, 0x17, 0x06, 0xb5, 0x6f, 0x89, 0x39, 0x0b, 0xd4, 0x49, 0x55,
	0x5a, 0x70, 0xf7, 0x0e, 0xfa, 0xb5, 0xdf, 0xb2, 0xd7, 0x59, 0x8b, 0xdd, 0xe4, 0xcf, 0xd9, 0xc5,
	0x1f, 0xec, 0xe2, 0xaf, 0xbb, 0x8b, 0xbf, 0xde, 0x16, 0xfe, 0x0e, 0x37, 0xf9, 0xeb, 0x6f, 0xf2,
	0x77, 0xf4, 0x3c, 0x7f, 0x0c, 0x4b, 0xc2, 0x2a, 0xfe, 0xae, 0xd7, 0xf1, 0x3c, 0x59, 0xc7, 0x73,
	0x41, 0x20, 0xd9, 0x4a, 0xe0, 0xe0, 0x5f, 0x04, 0x9e, 0x3e, 0x4f, 0x60, 0xc9, 0x3d, 0x43, 0xc3,
	0x58, 0xcd, 0xfd, 0x35, 0xae, 0xbe, 0x14, 0x67, 0x6b, 0x2f, 0xc5, 0x82, 0x5d, 0x86, 0xf4, 0x7c,
	0x99, 0x5d, 0xdb, 0xb9, 0x00, 0x9b, 0xae, 0x82, 0x3d, 0xfe, 0xfc, 0xe3, 0xd3, 0x43, 0x88, 0x11,
	0xbb, 0x73, 0x7f, 0x0a, 0xc9, 0x99, 0x1b, 0xa8, 0xd8, 0xc5, 0x5f, 0x9e, 0xd9, 0x78, 0x7a, 0x5a,
	0x25, 0x33, 0xef, 0xe9, 0x83, 0x67, 0xbe, 0xa8, 0xde, 0x83, 0x8a, 0x98, 0x7c, 0xf0, 0x78, 0xec,
	0xc5, 0x22, 0xbb, 0x6b, 0x1b, 0xf1, 0xe3, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x88, 0x90, 0xa5,
	0xe8, 0x7f, 0x05, 0x00, 0x00,
}
