// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mtrl_tx_list.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MtrlTxListRequest struct {
	TxId                 string   `protobuf:"bytes,1,opt,name=tx_id,json=txId,proto3" json:"tx_id,omitempty"`
	TxType               string   `protobuf:"bytes,2,opt,name=tx_type,json=txType,proto3" json:"tx_type,omitempty"`
	MtrlLotId            string   `protobuf:"bytes,3,opt,name=mtrl_lot_id,json=mtrlLotId,proto3" json:"mtrl_lot_id,omitempty"`
	ProductType          string   `protobuf:"bytes,4,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty"`
	MtrlProductId        string   `protobuf:"bytes,5,opt,name=mtrl_product_id,json=mtrlProductId,proto3" json:"mtrl_product_id,omitempty"`
	MtrlLevel            string   `protobuf:"bytes,6,opt,name=mtrl_level,json=mtrlLevel,proto3" json:"mtrl_level,omitempty"`
	CrFtyId              int32    `protobuf:"varint,7,opt,name=cr_fty_id,json=crFtyId,proto3" json:"cr_fty_id,omitempty"`
	CrDeptId             string   `protobuf:"bytes,8,opt,name=cr_dept_id,json=crDeptId,proto3" json:"cr_dept_id,omitempty"`
	NxFtyId              int32    `protobuf:"varint,9,opt,name=nx_fty_id,json=nxFtyId,proto3" json:"nx_fty_id,omitempty"`
	NxDeptId             string   `protobuf:"bytes,10,opt,name=nx_dept_id,json=nxDeptId,proto3" json:"nx_dept_id,omitempty"`
	Codd                 string   `protobuf:"bytes,11,opt,name=codd,proto3" json:"codd,omitempty"`
	Qty                  float32  `protobuf:"fixed32,12,opt,name=qty,proto3" json:"qty,omitempty"`
	Unit                 string   `protobuf:"bytes,13,opt,name=unit,proto3" json:"unit,omitempty"`
	ConfirmBy            string   `protobuf:"bytes,14,opt,name=confirm_by,json=confirmBy,proto3" json:"confirm_by,omitempty"`
	Status               string   `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	Comments             string   `protobuf:"bytes,16,opt,name=comments,proto3" json:"comments,omitempty"`
	InsertBy             string   `protobuf:"bytes,17,opt,name=insert_by,json=insertBy,proto3" json:"insert_by,omitempty"`
	OnlyToday            bool     `protobuf:"varint,18,opt,name=only_today,json=onlyToday,proto3" json:"only_today,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MtrlTxListRequest) Reset()         { *m = MtrlTxListRequest{} }
func (m *MtrlTxListRequest) String() string { return proto.CompactTextString(m) }
func (*MtrlTxListRequest) ProtoMessage()    {}
func (*MtrlTxListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e8750135d61078c, []int{0}
}

func (m *MtrlTxListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MtrlTxListRequest.Unmarshal(m, b)
}
func (m *MtrlTxListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MtrlTxListRequest.Marshal(b, m, deterministic)
}
func (m *MtrlTxListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MtrlTxListRequest.Merge(m, src)
}
func (m *MtrlTxListRequest) XXX_Size() int {
	return xxx_messageInfo_MtrlTxListRequest.Size(m)
}
func (m *MtrlTxListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MtrlTxListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MtrlTxListRequest proto.InternalMessageInfo

func (m *MtrlTxListRequest) GetTxId() string {
	if m != nil {
		return m.TxId
	}
	return ""
}

func (m *MtrlTxListRequest) GetTxType() string {
	if m != nil {
		return m.TxType
	}
	return ""
}

func (m *MtrlTxListRequest) GetMtrlLotId() string {
	if m != nil {
		return m.MtrlLotId
	}
	return ""
}

func (m *MtrlTxListRequest) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *MtrlTxListRequest) GetMtrlProductId() string {
	if m != nil {
		return m.MtrlProductId
	}
	return ""
}

func (m *MtrlTxListRequest) GetMtrlLevel() string {
	if m != nil {
		return m.MtrlLevel
	}
	return ""
}

func (m *MtrlTxListRequest) GetCrFtyId() int32 {
	if m != nil {
		return m.CrFtyId
	}
	return 0
}

func (m *MtrlTxListRequest) GetCrDeptId() string {
	if m != nil {
		return m.CrDeptId
	}
	return ""
}

func (m *MtrlTxListRequest) GetNxFtyId() int32 {
	if m != nil {
		return m.NxFtyId
	}
	return 0
}

func (m *MtrlTxListRequest) GetNxDeptId() string {
	if m != nil {
		return m.NxDeptId
	}
	return ""
}

func (m *MtrlTxListRequest) GetCodd() string {
	if m != nil {
		return m.Codd
	}
	return ""
}

func (m *MtrlTxListRequest) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *MtrlTxListRequest) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *MtrlTxListRequest) GetConfirmBy() string {
	if m != nil {
		return m.ConfirmBy
	}
	return ""
}

func (m *MtrlTxListRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *MtrlTxListRequest) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *MtrlTxListRequest) GetInsertBy() string {
	if m != nil {
		return m.InsertBy
	}
	return ""
}

func (m *MtrlTxListRequest) GetOnlyToday() bool {
	if m != nil {
		return m.OnlyToday
	}
	return false
}

type MaterialTransactions struct {
	Transactions         []*MaterialTransaction `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *MaterialTransactions) Reset()         { *m = MaterialTransactions{} }
func (m *MaterialTransactions) String() string { return proto.CompactTextString(m) }
func (*MaterialTransactions) ProtoMessage()    {}
func (*MaterialTransactions) Descriptor() ([]byte, []int) {
	return fileDescriptor_2e8750135d61078c, []int{1}
}

func (m *MaterialTransactions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaterialTransactions.Unmarshal(m, b)
}
func (m *MaterialTransactions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaterialTransactions.Marshal(b, m, deterministic)
}
func (m *MaterialTransactions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaterialTransactions.Merge(m, src)
}
func (m *MaterialTransactions) XXX_Size() int {
	return xxx_messageInfo_MaterialTransactions.Size(m)
}
func (m *MaterialTransactions) XXX_DiscardUnknown() {
	xxx_messageInfo_MaterialTransactions.DiscardUnknown(m)
}

var xxx_messageInfo_MaterialTransactions proto.InternalMessageInfo

func (m *MaterialTransactions) GetTransactions() []*MaterialTransaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func init() {
	proto.RegisterType((*MtrlTxListRequest)(nil), "proto.dm.mes.MtrlTxListRequest")
	proto.RegisterType((*MaterialTransactions)(nil), "proto.dm.mes.MaterialTransactions")
}

func init() { proto.RegisterFile("mtrl_tx_list.proto", fileDescriptor_2e8750135d61078c) }

var fileDescriptor_2e8750135d61078c = []byte{
	// 467 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0x5f, 0x6b, 0xdb, 0x3c,
	0x14, 0xc6, 0x71, 0xf3, 0xd7, 0x27, 0xe9, 0xdb, 0x56, 0xef, 0xd8, 0x44, 0xba, 0x8d, 0xb4, 0x17,
	0x23, 0x57, 0x36, 0x74, 0x37, 0x63, 0x97, 0x61, 0x1b, 0x04, 0x5a, 0x18, 0x26, 0x57, 0x83, 0x61,
	0x1c, 0x4b, 0x0d, 0x66, 0x96, 0xe4, 0x4a, 0x27, 0x9d, 0xf4, 0x0d, 0xf6, 0xb1, 0x87, 0x24, 0xb7,
	0xa4, 0xb0, 0x2b, 0xeb, 0x3c, 0x7e, 0x7e, 0xcf, 0xd1, 0x11, 0x07, 0x88, 0x40, 0xdd, 0x96, 0x68,
	0xcb, 0xb6, 0x31, 0x98, 0x75, 0x5a, 0xa1, 0x22, 0xf3, 0xf0, 0xc9, 0x98, 0xc8, 0x04, 0x37, 0x8b,
	0xcb, 0x50, 0xe5, 0x4c, 0xe4, 0x82, 0x9b, 0x5c, 0xbc, 0xb0, 0x5e, 0xff, 0x19, 0xc2, 0xc5, 0x1d,
	0xea, 0x76, 0x6b, 0x6f, 0x1b, 0x83, 0x05, 0x7f, 0x38, 0x70, 0x83, 0xe4, 0x7f, 0x18, 0xa1, 0x2d,
	0x1b, 0x46, 0x93, 0x65, 0xb2, 0x4a, 0x8b, 0x21, 0xda, 0x0d, 0x23, 0x6f, 0x60, 0x82, 0xb6, 0x44,
	0xd7, 0x71, 0x7a, 0x12, 0xe4, 0x31, 0xda, 0xad, 0xeb, 0x38, 0x79, 0x0f, 0xb3, 0x70, 0x89, 0x56,
	0xa1, 0x67, 0x06, 0xe1, 0x67, 0xea, 0xa5, 0x5b, 0x85, 0x1b, 0x46, 0xae, 0xc0, 0x5f, 0x88, 0x1d,
	0x6a, 0x8c, 0xf4, 0x30, 0x18, 0x66, 0xbd, 0x16, 0x22, 0x3e, 0xc0, 0x59, 0x88, 0x78, 0xf2, 0x35,
	0x8c, 0x8e, 0x82, 0xeb, 0xd4, 0xcb, 0xdf, 0xa3, 0xba, 0x61, 0xe4, 0x1d, 0x40, 0x6c, 0xc5, 0x1f,
	0x79, 0x4b, 0xc7, 0x47, 0x9d, 0xbc, 0x40, 0x16, 0x90, 0xd6, 0xba, 0xbc, 0x47, 0xe7, 0x03, 0x26,
	0xcb, 0x64, 0x35, 0x2a, 0x26, 0xb5, 0xfe, 0x86, 0x6e, 0xc3, 0xc8, 0x5b, 0x80, 0x5a, 0x97, 0x8c,
	0x77, 0x21, 0x7d, 0x1a, 0xd0, 0x69, 0xad, 0xbf, 0xf0, 0xce, 0x07, 0x2f, 0x20, 0x95, 0xf6, 0x89,
	0x4c, 0x23, 0x29, 0xed, 0x33, 0x29, 0xed, 0x33, 0x09, 0x91, 0x94, 0xb6, 0x27, 0x09, 0x0c, 0x6b,
	0xc5, 0x18, 0x9d, 0xc5, 0xa7, 0xf2, 0x67, 0x72, 0x0e, 0x83, 0x07, 0x74, 0x74, 0xbe, 0x4c, 0x56,
	0x27, 0x85, 0x3f, 0x7a, 0xd7, 0x41, 0x36, 0x48, 0x4f, 0xa3, 0xcb, 0x9f, 0xfd, 0x30, 0xb5, 0x92,
	0xf7, 0x8d, 0x16, 0xe5, 0xce, 0xd1, 0xff, 0xe2, 0x30, 0xbd, 0xb2, 0x76, 0xe4, 0x35, 0x8c, 0x0d,
	0x56, 0x78, 0x30, 0xf4, 0x2c, 0x3e, 0x77, 0xac, 0xc8, 0x02, 0xa6, 0xb5, 0x12, 0x82, 0x4b, 0x34,
	0xf4, 0xbc, 0x1f, 0xa3, 0xaf, 0xc9, 0x25, 0xa4, 0x8d, 0x34, 0x5c, 0xa3, 0x4f, 0xbc, 0x88, 0x3f,
	0xa3, 0xb0, 0x76, 0xbe, 0x9f, 0x92, 0xad, 0x2b, 0x51, 0xb1, 0xca, 0x51, 0xb2, 0x4c, 0x56, 0xd3,
	0x22, 0xf5, 0xca, 0xd6, 0x0b, 0xd7, 0x3f, 0xe1, 0xd5, 0x5d, 0x85, 0x5c, 0x37, 0x55, 0xbb, 0xd5,
	0x95, 0x34, 0x55, 0x8d, 0x8d, 0x92, 0x86, 0x7c, 0x85, 0x39, 0x1e, 0xd5, 0x34, 0x59, 0x0e, 0x56,
	0xb3, 0x9b, 0xab, 0xec, 0x78, 0xc9, 0xb2, 0x7f, 0x90, 0xc5, 0x0b, 0x6c, 0xfd, 0xf9, 0xc7, 0xa7,
	0x7d, 0x83, 0x6d, 0xb5, 0xcb, 0x7e, 0x71, 0xc9, 0xaa, 0xac, 0x56, 0x22, 0xc3, 0xdf, 0x79, 0x28,
	0x72, 0x3f, 0x80, 0x92, 0x26, 0x7f, 0xbc, 0xc9, 0xe3, 0xb6, 0xee, 0x55, 0x5b, 0xc9, 0x7d, 0xbf,
	0xb4, 0xbb, 0x71, 0x10, 0x3f, 0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x06, 0x7e, 0x93, 0x26, 0xed,
	0x02, 0x00, 0x00,
}
