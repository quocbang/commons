// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query_meqpt.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetMeqptRequest struct {
	EqptId               string   `protobuf:"bytes,1,opt,name=eqpt_id,json=eqptId,proto3" json:"eqpt_id,omitempty"`
	OwnedFtyId           int32    `protobuf:"varint,2,opt,name=owned_fty_id,json=ownedFtyId,proto3" json:"owned_fty_id,omitempty"`
	OwnedDeptId          string   `protobuf:"bytes,3,opt,name=owned_dept_id,json=ownedDeptId,proto3" json:"owned_dept_id,omitempty"`
	BayId                string   `protobuf:"bytes,4,opt,name=bay_id,json=bayId,proto3" json:"bay_id,omitempty"`
	EqptDsc              string   `protobuf:"bytes,5,opt,name=eqpt_dsc,json=eqptDsc,proto3" json:"eqpt_dsc,omitempty"`
	Volume               string   `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	ProdTypes            string   `protobuf:"bytes,7,opt,name=prod_types,json=prodTypes,proto3" json:"prod_types,omitempty"`
	UpdateBy             string   `protobuf:"bytes,8,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMeqptRequest) Reset()         { *m = GetMeqptRequest{} }
func (m *GetMeqptRequest) String() string { return proto.CompactTextString(m) }
func (*GetMeqptRequest) ProtoMessage()    {}
func (*GetMeqptRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d60ebce291b2d06, []int{0}
}

func (m *GetMeqptRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeqptRequest.Unmarshal(m, b)
}
func (m *GetMeqptRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeqptRequest.Marshal(b, m, deterministic)
}
func (m *GetMeqptRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeqptRequest.Merge(m, src)
}
func (m *GetMeqptRequest) XXX_Size() int {
	return xxx_messageInfo_GetMeqptRequest.Size(m)
}
func (m *GetMeqptRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeqptRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeqptRequest proto.InternalMessageInfo

func (m *GetMeqptRequest) GetEqptId() string {
	if m != nil {
		return m.EqptId
	}
	return ""
}

func (m *GetMeqptRequest) GetOwnedFtyId() int32 {
	if m != nil {
		return m.OwnedFtyId
	}
	return 0
}

func (m *GetMeqptRequest) GetOwnedDeptId() string {
	if m != nil {
		return m.OwnedDeptId
	}
	return ""
}

func (m *GetMeqptRequest) GetBayId() string {
	if m != nil {
		return m.BayId
	}
	return ""
}

func (m *GetMeqptRequest) GetEqptDsc() string {
	if m != nil {
		return m.EqptDsc
	}
	return ""
}

func (m *GetMeqptRequest) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *GetMeqptRequest) GetProdTypes() string {
	if m != nil {
		return m.ProdTypes
	}
	return ""
}

func (m *GetMeqptRequest) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

type GetMeqptReply struct {
	Info                 []*GetMeqptReply_Meqptlst `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *GetMeqptReply) Reset()         { *m = GetMeqptReply{} }
func (m *GetMeqptReply) String() string { return proto.CompactTextString(m) }
func (*GetMeqptReply) ProtoMessage()    {}
func (*GetMeqptReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d60ebce291b2d06, []int{1}
}

func (m *GetMeqptReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeqptReply.Unmarshal(m, b)
}
func (m *GetMeqptReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeqptReply.Marshal(b, m, deterministic)
}
func (m *GetMeqptReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeqptReply.Merge(m, src)
}
func (m *GetMeqptReply) XXX_Size() int {
	return xxx_messageInfo_GetMeqptReply.Size(m)
}
func (m *GetMeqptReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeqptReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeqptReply proto.InternalMessageInfo

func (m *GetMeqptReply) GetInfo() []*GetMeqptReply_Meqptlst {
	if m != nil {
		return m.Info
	}
	return nil
}

type GetMeqptReply_Meqptlst struct {
	EqptId               string   `protobuf:"bytes,1,opt,name=eqpt_id,json=eqptId,proto3" json:"eqpt_id,omitempty"`
	OwnedFtyId           int32    `protobuf:"varint,2,opt,name=owned_fty_id,json=ownedFtyId,proto3" json:"owned_fty_id,omitempty"`
	OwnedDeptId          string   `protobuf:"bytes,3,opt,name=owned_dept_id,json=ownedDeptId,proto3" json:"owned_dept_id,omitempty"`
	BayId                string   `protobuf:"bytes,4,opt,name=bay_id,json=bayId,proto3" json:"bay_id,omitempty"`
	EqptDsc              string   `protobuf:"bytes,5,opt,name=eqpt_dsc,json=eqptDsc,proto3" json:"eqpt_dsc,omitempty"`
	Volume               string   `protobuf:"bytes,6,opt,name=volume,proto3" json:"volume,omitempty"`
	ProdTypes            string   `protobuf:"bytes,7,opt,name=prod_types,json=prodTypes,proto3" json:"prod_types,omitempty"`
	UpdateAt             string   `protobuf:"bytes,8,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	UpdateBy             string   `protobuf:"bytes,9,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetMeqptReply_Meqptlst) Reset()         { *m = GetMeqptReply_Meqptlst{} }
func (m *GetMeqptReply_Meqptlst) String() string { return proto.CompactTextString(m) }
func (*GetMeqptReply_Meqptlst) ProtoMessage()    {}
func (*GetMeqptReply_Meqptlst) Descriptor() ([]byte, []int) {
	return fileDescriptor_2d60ebce291b2d06, []int{1, 0}
}

func (m *GetMeqptReply_Meqptlst) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetMeqptReply_Meqptlst.Unmarshal(m, b)
}
func (m *GetMeqptReply_Meqptlst) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetMeqptReply_Meqptlst.Marshal(b, m, deterministic)
}
func (m *GetMeqptReply_Meqptlst) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetMeqptReply_Meqptlst.Merge(m, src)
}
func (m *GetMeqptReply_Meqptlst) XXX_Size() int {
	return xxx_messageInfo_GetMeqptReply_Meqptlst.Size(m)
}
func (m *GetMeqptReply_Meqptlst) XXX_DiscardUnknown() {
	xxx_messageInfo_GetMeqptReply_Meqptlst.DiscardUnknown(m)
}

var xxx_messageInfo_GetMeqptReply_Meqptlst proto.InternalMessageInfo

func (m *GetMeqptReply_Meqptlst) GetEqptId() string {
	if m != nil {
		return m.EqptId
	}
	return ""
}

func (m *GetMeqptReply_Meqptlst) GetOwnedFtyId() int32 {
	if m != nil {
		return m.OwnedFtyId
	}
	return 0
}

func (m *GetMeqptReply_Meqptlst) GetOwnedDeptId() string {
	if m != nil {
		return m.OwnedDeptId
	}
	return ""
}

func (m *GetMeqptReply_Meqptlst) GetBayId() string {
	if m != nil {
		return m.BayId
	}
	return ""
}

func (m *GetMeqptReply_Meqptlst) GetEqptDsc() string {
	if m != nil {
		return m.EqptDsc
	}
	return ""
}

func (m *GetMeqptReply_Meqptlst) GetVolume() string {
	if m != nil {
		return m.Volume
	}
	return ""
}

func (m *GetMeqptReply_Meqptlst) GetProdTypes() string {
	if m != nil {
		return m.ProdTypes
	}
	return ""
}

func (m *GetMeqptReply_Meqptlst) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

func (m *GetMeqptReply_Meqptlst) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func init() {
	proto.RegisterType((*GetMeqptRequest)(nil), "proto.dm.mes.GetMeqptRequest")
	proto.RegisterType((*GetMeqptReply)(nil), "proto.dm.mes.GetMeqptReply")
	proto.RegisterType((*GetMeqptReply_Meqptlst)(nil), "proto.dm.mes.GetMeqptReply.Meqptlst")
}

func init() { proto.RegisterFile("query_meqpt.proto", fileDescriptor_2d60ebce291b2d06) }

var fileDescriptor_2d60ebce291b2d06 = []byte{
	// 340 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x90, 0xcf, 0x6a, 0xe3, 0x30,
	0x10, 0xc6, 0x71, 0xfe, 0x38, 0xf6, 0x24, 0x61, 0x59, 0xc1, 0xee, 0x7a, 0x5b, 0x0a, 0x26, 0xf4,
	0x90, 0x93, 0x0c, 0xe9, 0x25, 0xf4, 0xd6, 0x10, 0x5a, 0x72, 0xe8, 0xc5, 0xf4, 0xd4, 0x8b, 0xb1,
	0xad, 0x49, 0x08, 0xb5, 0x2c, 0x27, 0x92, 0x13, 0xfc, 0x0e, 0x7d, 0xc0, 0x3e, 0x49, 0xcf, 0x45,
	0x63, 0x4a, 0xeb, 0x57, 0xe8, 0x49, 0xfa, 0x7e, 0xdf, 0xcc, 0x68, 0xf4, 0xc1, 0xef, 0x43, 0x8d,
	0xc7, 0x26, 0x91, 0x78, 0xa8, 0x0c, 0xaf, 0x8e, 0xca, 0x28, 0x36, 0xa1, 0x83, 0x0b, 0xc9, 0x25,
	0xea, 0xd9, 0xbb, 0x03, 0xbf, 0x1e, 0xd0, 0x3c, 0xda, 0x82, 0x18, 0x0f, 0x35, 0x6a, 0xc3, 0xfe,
	0xc1, 0xc8, 0xca, 0x64, 0x2f, 0x02, 0x27, 0x74, 0xe6, 0x7e, 0xec, 0x5a, 0xb9, 0x11, 0x2c, 0x84,
	0x89, 0x3a, 0x97, 0x28, 0x92, 0xad, 0x69, 0xac, 0xdb, 0x0b, 0x9d, 0xf9, 0x30, 0x06, 0x62, 0xf7,
	0xa6, 0xd9, 0x08, 0x36, 0x83, 0x69, 0x5b, 0x21, 0xb0, 0x1d, 0xd0, 0xa7, 0x01, 0x63, 0x82, 0x6b,
	0xa4, 0x29, 0x7f, 0xc0, 0xcd, 0x52, 0xea, 0x1f, 0x90, 0x39, 0xcc, 0x52, 0xdb, 0xfa, 0x1f, 0x3c,
	0x7a, 0x55, 0xe8, 0x3c, 0x18, 0x92, 0x41, 0x5b, 0xac, 0x75, 0xce, 0xfe, 0x82, 0x7b, 0x52, 0x45,
	0x2d, 0x31, 0x70, 0xdb, 0x7d, 0x5a, 0xc5, 0xae, 0x00, 0xaa, 0xa3, 0x12, 0x89, 0x69, 0x2a, 0xd4,
	0xc1, 0x88, 0x3c, 0xdf, 0x92, 0x27, 0x0b, 0xd8, 0x25, 0xf8, 0x75, 0x25, 0x52, 0x83, 0x49, 0xd6,
	0x04, 0x1e, 0xb9, 0x5e, 0x0b, 0x56, 0xcd, 0xec, 0xad, 0x07, 0xd3, 0xaf, 0x8f, 0x57, 0x45, 0xc3,
	0x96, 0x30, 0xd8, 0x97, 0x5b, 0x15, 0x38, 0x61, 0x7f, 0x3e, 0x5e, 0x5c, 0xf3, 0xef, 0x39, 0xf1,
	0x4e, 0x29, 0xa7, 0x6b, 0xa1, 0x4d, 0x4c, 0x1d, 0x17, 0xaf, 0x3d, 0xf0, 0x3e, 0xd1, 0x0f, 0x4c,
	0x2f, 0x35, 0xdd, 0xf4, 0xee, 0x4c, 0x37, 0x5a, 0xbf, 0x1b, 0xed, 0xea, 0xf6, 0x79, 0xb9, 0xdb,
	0x9b, 0x22, 0xcd, 0xf8, 0x0b, 0x96, 0x22, 0xe5, 0xb9, 0x92, 0xdc, 0x9c, 0x23, 0x12, 0x51, 0xae,
	0xa4, 0x54, 0xa5, 0x8e, 0x4e, 0x8b, 0x88, 0x02, 0x8e, 0x76, 0xaa, 0x48, 0xcb, 0x5d, 0x24, 0x64,
	0x24, 0x51, 0x67, 0x2e, 0xc1, 0x9b, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0e, 0xb7, 0x56, 0x9e,
	0xb9, 0x02, 0x00, 0x00,
}
