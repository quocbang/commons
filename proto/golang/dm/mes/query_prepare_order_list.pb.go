// Code generated by protoc-gen-go. DO NOT EDIT.
// source: query_prepare_order_list.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetPrepareOrderRequest struct {
	//備料類別
	PrepType string `protobuf:"bytes,1,opt,name=prep_type,json=prepType,proto3" json:"prep_type,omitempty"`
	//機台號
	EqptId string `protobuf:"bytes,2,opt,name=eqpt_id,json=eqptId,proto3" json:"eqpt_id,omitempty"`
	//工單號
	LotId string `protobuf:"bytes,3,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//備料名稱
	ProcessName string `protobuf:"bytes,4,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	//起始日期
	StartDate string `protobuf:"bytes,5,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	//結束日期
	EndDate              string   `protobuf:"bytes,6,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPrepareOrderRequest) Reset()         { *m = GetPrepareOrderRequest{} }
func (m *GetPrepareOrderRequest) String() string { return proto.CompactTextString(m) }
func (*GetPrepareOrderRequest) ProtoMessage()    {}
func (*GetPrepareOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4185724c0abe7a6, []int{0}
}

func (m *GetPrepareOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPrepareOrderRequest.Unmarshal(m, b)
}
func (m *GetPrepareOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPrepareOrderRequest.Marshal(b, m, deterministic)
}
func (m *GetPrepareOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrepareOrderRequest.Merge(m, src)
}
func (m *GetPrepareOrderRequest) XXX_Size() int {
	return xxx_messageInfo_GetPrepareOrderRequest.Size(m)
}
func (m *GetPrepareOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrepareOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrepareOrderRequest proto.InternalMessageInfo

func (m *GetPrepareOrderRequest) GetPrepType() string {
	if m != nil {
		return m.PrepType
	}
	return ""
}

func (m *GetPrepareOrderRequest) GetEqptId() string {
	if m != nil {
		return m.EqptId
	}
	return ""
}

func (m *GetPrepareOrderRequest) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *GetPrepareOrderRequest) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *GetPrepareOrderRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *GetPrepareOrderRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

type GetPrepareOrderReply struct {
	PrepareOrders        []*PrepareList `protobuf:"bytes,1,rep,name=prepare_orders,json=prepareOrders,proto3" json:"prepare_orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetPrepareOrderReply) Reset()         { *m = GetPrepareOrderReply{} }
func (m *GetPrepareOrderReply) String() string { return proto.CompactTextString(m) }
func (*GetPrepareOrderReply) ProtoMessage()    {}
func (*GetPrepareOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4185724c0abe7a6, []int{1}
}

func (m *GetPrepareOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPrepareOrderReply.Unmarshal(m, b)
}
func (m *GetPrepareOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPrepareOrderReply.Marshal(b, m, deterministic)
}
func (m *GetPrepareOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPrepareOrderReply.Merge(m, src)
}
func (m *GetPrepareOrderReply) XXX_Size() int {
	return xxx_messageInfo_GetPrepareOrderReply.Size(m)
}
func (m *GetPrepareOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPrepareOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetPrepareOrderReply proto.InternalMessageInfo

func (m *GetPrepareOrderReply) GetPrepareOrders() []*PrepareList {
	if m != nil {
		return m.PrepareOrders
	}
	return nil
}

type PrepareList struct {
	//廠別
	FtyId int32 `protobuf:"varint,1,opt,name=fty_id,json=ftyId,proto3" json:"fty_id,omitempty"`
	//工單號
	LotId string `protobuf:"bytes,2,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//中間製品識別碼
	ProductId string `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	//等級
	MtrlLevel string `protobuf:"bytes,4,opt,name=mtrl_level,json=mtrlLevel,proto3" json:"mtrl_level,omitempty"`
	//製程類別 R「暫定」、N「正式」、P「試產」、T「試做」
	StageStatus int32 `protobuf:"varint,5,opt,name=stage_status,json=stageStatus,proto3" json:"stage_status,omitempty"`
	//中間製品生產版本
	MajorVersion string `protobuf:"bytes,6,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	//備料成品代號
	CrProcessName string `protobuf:"bytes,7,opt,name=cr_process_name,json=crProcessName,proto3" json:"cr_process_name,omitempty"`
	//備料成品代號
	NxProcessName string `protobuf:"bytes,8,opt,name=nx_process_name,json=nxProcessName,proto3" json:"nx_process_name,omitempty"`
	//排程機台
	ResvEqptId string `protobuf:"bytes,9,opt,name=resv_eqpt_id,json=resvEqptId,proto3" json:"resv_eqpt_id,omitempty"`
	//排程日期
	ResvDate string `protobuf:"bytes,10,opt,name=resv_date,json=resvDate,proto3" json:"resv_date,omitempty"`
	//排程班別
	ResvShift string `protobuf:"bytes,11,opt,name=resv_shift,json=resvShift,proto3" json:"resv_shift,omitempty"`
	//排程序號
	ShiftSeq string `protobuf:"bytes,12,opt,name=shift_seq,json=shiftSeq,proto3" json:"shift_seq,omitempty"`
	//備料狀態
	PrepStat string `protobuf:"bytes,13,opt,name=prep_stat,json=prepStat,proto3" json:"prep_stat,omitempty"`
	//備料日期
	PrepDate string `protobuf:"bytes,14,opt,name=prep_date,json=prepDate,proto3" json:"prep_date,omitempty"`
	//備料序號
	PrepSeqNo string `protobuf:"bytes,15,opt,name=prep_seq_no,json=prepSeqNo,proto3" json:"prep_seq_no,omitempty"`
	//須備料數量
	PlanOptQty float32 `protobuf:"fixed32,16,opt,name=plan_opt_qty,json=planOptQty,proto3" json:"plan_opt_qty,omitempty"`
	//已備料數量
	CompQty float32 `protobuf:"fixed32,17,opt,name=comp_qty,json=compQty,proto3" json:"comp_qty,omitempty"`
	//須備料首數
	PlanShtCnt int32 `protobuf:"varint,18,opt,name=plan_sht_cnt,json=planShtCnt,proto3" json:"plan_sht_cnt,omitempty"`
	//已備料首數
	CompShtCnt int32 `protobuf:"varint,19,opt,name=comp_sht_cnt,json=compShtCnt,proto3" json:"comp_sht_cnt,omitempty"`
	//修改日期
	UpdateAt string `protobuf:"bytes,20,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	//修改者
	UpdateBy string `protobuf:"bytes,21,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	//建立日期
	InsertAt string `protobuf:"bytes,22,opt,name=insert_at,json=insertAt,proto3" json:"insert_at,omitempty"`
	//建立者
	InsertBy string `protobuf:"bytes,23,opt,name=insert_by,json=insertBy,proto3" json:"insert_by,omitempty"`
	//備料類型
	PrepareType          string   `protobuf:"bytes,24,opt,name=prepare_type,json=prepareType,proto3" json:"prepare_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PrepareList) Reset()         { *m = PrepareList{} }
func (m *PrepareList) String() string { return proto.CompactTextString(m) }
func (*PrepareList) ProtoMessage()    {}
func (*PrepareList) Descriptor() ([]byte, []int) {
	return fileDescriptor_e4185724c0abe7a6, []int{2}
}

func (m *PrepareList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PrepareList.Unmarshal(m, b)
}
func (m *PrepareList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PrepareList.Marshal(b, m, deterministic)
}
func (m *PrepareList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PrepareList.Merge(m, src)
}
func (m *PrepareList) XXX_Size() int {
	return xxx_messageInfo_PrepareList.Size(m)
}
func (m *PrepareList) XXX_DiscardUnknown() {
	xxx_messageInfo_PrepareList.DiscardUnknown(m)
}

var xxx_messageInfo_PrepareList proto.InternalMessageInfo

func (m *PrepareList) GetFtyId() int32 {
	if m != nil {
		return m.FtyId
	}
	return 0
}

func (m *PrepareList) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *PrepareList) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *PrepareList) GetMtrlLevel() string {
	if m != nil {
		return m.MtrlLevel
	}
	return ""
}

func (m *PrepareList) GetStageStatus() int32 {
	if m != nil {
		return m.StageStatus
	}
	return 0
}

func (m *PrepareList) GetMajorVersion() string {
	if m != nil {
		return m.MajorVersion
	}
	return ""
}

func (m *PrepareList) GetCrProcessName() string {
	if m != nil {
		return m.CrProcessName
	}
	return ""
}

func (m *PrepareList) GetNxProcessName() string {
	if m != nil {
		return m.NxProcessName
	}
	return ""
}

func (m *PrepareList) GetResvEqptId() string {
	if m != nil {
		return m.ResvEqptId
	}
	return ""
}

func (m *PrepareList) GetResvDate() string {
	if m != nil {
		return m.ResvDate
	}
	return ""
}

func (m *PrepareList) GetResvShift() string {
	if m != nil {
		return m.ResvShift
	}
	return ""
}

func (m *PrepareList) GetShiftSeq() string {
	if m != nil {
		return m.ShiftSeq
	}
	return ""
}

func (m *PrepareList) GetPrepStat() string {
	if m != nil {
		return m.PrepStat
	}
	return ""
}

func (m *PrepareList) GetPrepDate() string {
	if m != nil {
		return m.PrepDate
	}
	return ""
}

func (m *PrepareList) GetPrepSeqNo() string {
	if m != nil {
		return m.PrepSeqNo
	}
	return ""
}

func (m *PrepareList) GetPlanOptQty() float32 {
	if m != nil {
		return m.PlanOptQty
	}
	return 0
}

func (m *PrepareList) GetCompQty() float32 {
	if m != nil {
		return m.CompQty
	}
	return 0
}

func (m *PrepareList) GetPlanShtCnt() int32 {
	if m != nil {
		return m.PlanShtCnt
	}
	return 0
}

func (m *PrepareList) GetCompShtCnt() int32 {
	if m != nil {
		return m.CompShtCnt
	}
	return 0
}

func (m *PrepareList) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

func (m *PrepareList) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *PrepareList) GetInsertAt() string {
	if m != nil {
		return m.InsertAt
	}
	return ""
}

func (m *PrepareList) GetInsertBy() string {
	if m != nil {
		return m.InsertBy
	}
	return ""
}

func (m *PrepareList) GetPrepareType() string {
	if m != nil {
		return m.PrepareType
	}
	return ""
}

func init() {
	proto.RegisterType((*GetPrepareOrderRequest)(nil), "proto.dm.mes.GetPrepareOrderRequest")
	proto.RegisterType((*GetPrepareOrderReply)(nil), "proto.dm.mes.GetPrepareOrderReply")
	proto.RegisterType((*PrepareList)(nil), "proto.dm.mes.PrepareList")
}

func init() { proto.RegisterFile("query_prepare_order_list.proto", fileDescriptor_e4185724c0abe7a6) }

var fileDescriptor_e4185724c0abe7a6 = []byte{
	// 628 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x93, 0x5f, 0x6f, 0xd3, 0x4a,
	0x10, 0xc5, 0x95, 0xf6, 0x26, 0xa9, 0x37, 0x49, 0x7b, 0xaf, 0x6f, 0xff, 0x6c, 0x55, 0xb5, 0x0a,
	0x45, 0xaa, 0xfa, 0xe4, 0x48, 0xe5, 0x05, 0xf1, 0x04, 0x05, 0x84, 0x90, 0xaa, 0xb6, 0x24, 0x08,
	0x21, 0x5e, 0x56, 0x8e, 0x3d, 0x4d, 0x03, 0xb6, 0x77, 0xbd, 0x3b, 0x09, 0xf5, 0xd7, 0xe3, 0x83,
	0x21, 0x34, 0xb3, 0x4e, 0xeb, 0x88, 0xa7, 0x68, 0x7f, 0xe7, 0x4c, 0xd6, 0x73, 0x76, 0x46, 0x9c,
	0x94, 0x0b, 0xb0, 0x95, 0x32, 0x16, 0x4c, 0x6c, 0x41, 0x69, 0x9b, 0x82, 0x55, 0xd9, 0xdc, 0x61,
	0x64, 0xac, 0x46, 0x1d, 0xf6, 0xf9, 0x27, 0x4a, 0xf3, 0x28, 0x07, 0x77, 0xfa, 0xab, 0x25, 0xf6,
	0x3f, 0x00, 0xde, 0x7a, 0xf7, 0x0d, 0x99, 0xc7, 0x50, 0x2e, 0xc0, 0x61, 0x78, 0x24, 0x02, 0xfa,
	0x13, 0x85, 0x95, 0x01, 0xd9, 0x1a, 0xb6, 0xce, 0x83, 0xf1, 0x16, 0x81, 0xcf, 0x95, 0x81, 0xf0,
	0x40, 0x74, 0xa1, 0x34, 0xa8, 0xe6, 0xa9, 0xdc, 0x60, 0xa9, 0x43, 0xc7, 0x8f, 0x69, 0xb8, 0x27,
	0x3a, 0x99, 0x66, 0xbe, 0xc9, 0xbc, 0x9d, 0x69, 0xc2, 0xcf, 0x04, 0xdd, 0x9b, 0x80, 0x73, 0xaa,
	0x88, 0x73, 0x90, 0xff, 0xb0, 0xd8, 0xab, 0xd9, 0x75, 0x9c, 0x43, 0x78, 0x2c, 0x84, 0xc3, 0xd8,
	0xa2, 0x4a, 0x63, 0x04, 0xd9, 0x66, 0x43, 0xc0, 0xe4, 0x5d, 0x8c, 0x10, 0x1e, 0x8a, 0x2d, 0x28,
	0x52, 0x2f, 0x76, 0x58, 0xec, 0x42, 0x91, 0x92, 0x74, 0xfa, 0x55, 0xec, 0xfe, 0xd5, 0x83, 0xc9,
	0xaa, 0xf0, 0xb5, 0xd8, 0x5e, 0x8b, 0xc1, 0xc9, 0xd6, 0x70, 0xf3, 0xbc, 0x77, 0x71, 0x18, 0x35,
	0x33, 0x88, 0xea, 0xc2, 0xab, 0xb9, 0xc3, 0xf1, 0xc0, 0x34, 0xfe, 0xc5, 0x9d, 0xfe, 0x6e, 0x8b,
	0x5e, 0x43, 0xa6, 0xee, 0xee, 0xb0, 0xa2, 0xee, 0x28, 0x90, 0xf6, 0xb8, 0x7d, 0x87, 0xd5, 0x5a,
	0xd3, 0x1b, 0xcd, 0xa6, 0x8f, 0x85, 0x30, 0x56, 0xa7, 0x8b, 0xa4, 0x91, 0x47, 0x50, 0x13, 0x2f,
	0xe7, 0x68, 0x33, 0x95, 0xc1, 0x12, 0xb2, 0x3a, 0x91, 0x80, 0xc8, 0x15, 0x01, 0x8a, 0xcc, 0x61,
	0x3c, 0x03, 0xe5, 0x30, 0xc6, 0x85, 0xe3, 0x44, 0xda, 0xe3, 0x1e, 0xb3, 0x09, 0xa3, 0xf0, 0xb9,
	0x18, 0xe4, 0xf1, 0x77, 0x6d, 0xd5, 0x12, 0xac, 0x9b, 0xeb, 0xa2, 0x0e, 0xa6, 0xcf, 0xf0, 0x8b,
	0x67, 0xe1, 0x99, 0xd8, 0x49, 0xac, 0x5a, 0x4b, 0xbf, 0xcb, 0xb6, 0x41, 0x62, 0x6f, 0x1b, 0xf9,
	0x9f, 0x89, 0x9d, 0xe2, 0x61, 0xdd, 0xb7, 0xe5, 0x7d, 0xc5, 0x43, 0xd3, 0x37, 0x14, 0x7d, 0x0b,
	0x6e, 0xa9, 0x56, 0xef, 0x1f, 0xb0, 0x49, 0x10, 0x7b, 0xef, 0x67, 0xe0, 0x48, 0x04, 0xec, 0xe0,
	0xb7, 0x12, 0x7e, 0x72, 0x08, 0xf0, 0x3b, 0x1e, 0x0b, 0xb6, 0x2a, 0x77, 0x3f, 0xbf, 0x43, 0xd9,
	0xf3, 0x5d, 0x13, 0x99, 0x10, 0xa0, 0x5a, 0x56, 0x94, 0x83, 0x52, 0xf6, 0x7d, 0x2d, 0x83, 0x09,
	0x94, 0x8f, 0x23, 0x49, 0x89, 0xc8, 0xc1, 0xd3, 0x48, 0x52, 0x1c, 0x8f, 0x22, 0xdf, 0xba, 0xfd,
	0x24, 0xf2, 0xad, 0x27, 0xa2, 0xe7, 0x2b, 0xa1, 0x54, 0x85, 0x96, 0x3b, 0xab, 0xb7, 0x00, 0x33,
	0x81, 0xf2, 0x5a, 0x53, 0x53, 0x26, 0x8b, 0x0b, 0xa5, 0x0d, 0xaa, 0x12, 0x2b, 0xf9, 0xef, 0xb0,
	0x75, 0xbe, 0x31, 0x16, 0xc4, 0x6e, 0x0c, 0x7e, 0xc2, 0x8a, 0xe6, 0x2f, 0xd1, 0xb9, 0x61, 0xf5,
	0x3f, 0x56, 0xbb, 0x74, 0x26, 0x69, 0x55, 0xec, 0xee, 0x51, 0x25, 0x05, 0xca, 0x90, 0x5f, 0x8a,
	0x8b, 0x27, 0xf7, 0xf8, 0xb6, 0x40, 0x72, 0x70, 0xf1, 0xca, 0xf1, 0xbf, 0x77, 0x10, 0xab, 0x1d,
	0x47, 0x22, 0x58, 0x18, 0xfa, 0x74, 0x15, 0xa3, 0xdc, 0xf5, 0x5f, 0xef, 0xc1, 0x9b, 0xa6, 0x38,
	0xad, 0xe4, 0x5e, 0x53, 0xbc, 0xac, 0x48, 0x9c, 0x17, 0x0e, 0x2c, 0x52, 0xe5, 0xbe, 0x17, 0x3d,
	0xf0, 0x95, 0xb5, 0x38, 0xad, 0xe4, 0x41, 0x53, 0xbc, 0xac, 0xfc, 0x52, 0xfa, 0xfd, 0xe0, 0x25,
	0x97, 0xab, 0xa5, 0x64, 0x46, 0x7b, 0x7e, 0xf9, 0xea, 0xdb, 0xcb, 0xd9, 0x1c, 0xb3, 0x78, 0x1a,
	0xfd, 0x80, 0x22, 0x8d, 0xa3, 0x44, 0xe7, 0x11, 0xfe, 0x1c, 0xf1, 0x61, 0x94, 0xe8, 0x3c, 0xd7,
	0x85, 0x1b, 0x2d, 0x2f, 0x46, 0xbc, 0x50, 0xa3, 0x99, 0xce, 0xe2, 0x62, 0x36, 0x4a, 0xf3, 0x51,
	0x0e, 0x6e, 0xda, 0x61, 0xf8, 0xe2, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x03, 0xa0, 0x15, 0xa9,
	0x92, 0x04, 0x00, 0x00,
}
