// Code generated by protoc-gen-go. DO NOT EDIT.
// source: entry_type.proto

package accounting

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 結帳碼(Monthly payment posting code description)
type EntryType int32

const (
	EntryType_ENTRY_TYPE_UNSPECIFIED EntryType = 0
	//單純過帳-空白
	EntryType_SIMPLE_POSTING EntryType = 1
	//帳務月結-N
	EntryType_ACCOUNT_MONTHLY EntryType = 2
	//成本月結-Y
	EntryType_COST_MONTH EntryType = 3
	//重分類月結-Z
	EntryType_RECLASSIFICATION EntryType = 4
	//稅務月結(含未實現銷貨毛利)(including unrealized sales gross profit)-X
	EntryType_TAX_MONTH EntryType = 5
	//會計師查帳調整分錄月結(AJE)-R
	EntryType_AJE EntryType = 6
	//會計師查帳調整分錄月結(RJE)-E
	EntryType_RJE EntryType = 7
	//IFRS認列差異-I
	EntryType_IFRS_RECOGNIZES_DIFFERENCES EntryType = 8
	//IFRS表達差異-F
	EntryType_IFRS_EXPRESSION_DIFFERENCE EntryType = 9
	//期未年度結帳-W
	EntryType_ANNUAL_CHECKOUT EntryType = 10
	//IFRS的成本月結-V
	EntryType_IFRS_COST_MONTHLY EntryType = 11
	//當地期末年度結帳-U
	EntryType_LOCAL_FINAL_YEAR_CLOSING EntryType = 12
)

var EntryType_name = map[int32]string{
	0:  "ENTRY_TYPE_UNSPECIFIED",
	1:  "SIMPLE_POSTING",
	2:  "ACCOUNT_MONTHLY",
	3:  "COST_MONTH",
	4:  "RECLASSIFICATION",
	5:  "TAX_MONTH",
	6:  "AJE",
	7:  "RJE",
	8:  "IFRS_RECOGNIZES_DIFFERENCES",
	9:  "IFRS_EXPRESSION_DIFFERENCE",
	10: "ANNUAL_CHECKOUT",
	11: "IFRS_COST_MONTHLY",
	12: "LOCAL_FINAL_YEAR_CLOSING",
}

var EntryType_value = map[string]int32{
	"ENTRY_TYPE_UNSPECIFIED":      0,
	"SIMPLE_POSTING":              1,
	"ACCOUNT_MONTHLY":             2,
	"COST_MONTH":                  3,
	"RECLASSIFICATION":            4,
	"TAX_MONTH":                   5,
	"AJE":                         6,
	"RJE":                         7,
	"IFRS_RECOGNIZES_DIFFERENCES": 8,
	"IFRS_EXPRESSION_DIFFERENCE":  9,
	"ANNUAL_CHECKOUT":             10,
	"IFRS_COST_MONTHLY":           11,
	"LOCAL_FINAL_YEAR_CLOSING":    12,
}

func (x EntryType) String() string {
	return proto.EnumName(EntryType_name, int32(x))
}

func (EntryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_93b4f885409754bd, []int{0}
}

func init() {
	proto.RegisterEnum("proto.dm.accounting.EntryType", EntryType_name, EntryType_value)
}

func init() { proto.RegisterFile("entry_type.proto", fileDescriptor_93b4f885409754bd) }

var fileDescriptor_93b4f885409754bd = []byte{
	// 338 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xdf, 0x6e, 0xda, 0x30,
	0x14, 0xc6, 0x37, 0xd8, 0x60, 0x78, 0x1b, 0xf3, 0xcc, 0x56, 0x55, 0xb4, 0x6a, 0xef, 0x7b, 0x91,
	0x48, 0xed, 0x03, 0x54, 0xae, 0x39, 0x01, 0x53, 0x63, 0x47, 0xb6, 0x23, 0x11, 0x6e, 0xac, 0x10,
	0xa2, 0x08, 0x95, 0x24, 0x88, 0xa6, 0xad, 0x78, 0x9d, 0x3e, 0x69, 0x45, 0x84, 0x44, 0xaf, 0xce,
	0xbf, 0xdf, 0x91, 0xbe, 0xef, 0x43, 0x38, 0x2b, 0xeb, 0xdd, 0xde, 0xd5, 0xfb, 0x6d, 0xe6, 0x6d,
	0x77, 0x55, 0x5d, 0x91, 0x41, 0x53, 0xbc, 0x55, 0xe1, 0x25, 0x69, 0x5a, 0xbd, 0x94, 0xf5, 0xba,
	0xcc, 0x6f, 0xde, 0x5b, 0xa8, 0x07, 0x07, 0xd2, 0xee, 0xb7, 0x19, 0x19, 0xa2, 0x33, 0x90, 0x56,
	0xc7, 0xce, 0xc6, 0x21, 0xb8, 0x48, 0x9a, 0x10, 0x18, 0x0f, 0x38, 0x8c, 0xf0, 0x17, 0x42, 0x50,
	0xdf, 0xf0, 0x59, 0x28, 0xc0, 0x85, 0xca, 0x58, 0x2e, 0xc7, 0xf8, 0x2b, 0x19, 0xa0, 0x3f, 0x94,
	0x31, 0x15, 0x49, 0xeb, 0x66, 0x4a, 0xda, 0x89, 0x88, 0x71, 0x8b, 0xf4, 0x11, 0x62, 0xca, 0x1c,
	0x37, 0xb8, 0x4d, 0xfe, 0x21, 0xac, 0x81, 0x09, 0x6a, 0x0c, 0x0f, 0x38, 0xa3, 0x96, 0x2b, 0x89,
	0xbf, 0x91, 0xdf, 0xa8, 0x67, 0xe9, 0xfc, 0x08, 0x7d, 0x27, 0x5d, 0xd4, 0xa6, 0x53, 0xc0, 0x9d,
	0x43, 0xa3, 0xa7, 0x80, 0xbb, 0xe4, 0x1a, 0x5d, 0xf0, 0x40, 0x1b, 0xa7, 0x81, 0xa9, 0xb1, 0xe4,
	0x0b, 0x30, 0x6e, 0xc4, 0x83, 0x00, 0x34, 0x48, 0x06, 0x06, 0xff, 0x20, 0x57, 0x68, 0xd8, 0x00,
	0x30, 0x0f, 0x35, 0x18, 0xc3, 0x95, 0xfc, 0x04, 0xe0, 0x5e, 0x23, 0x4e, 0xca, 0x88, 0x0a, 0xc7,
	0x26, 0xc0, 0x1e, 0x55, 0x64, 0x31, 0x22, 0xff, 0xd1, 0xdf, 0xe6, 0xe9, 0xa4, 0x50, 0xc4, 0xf8,
	0x27, 0xb9, 0x44, 0xe7, 0x42, 0x31, 0x2a, 0x5c, 0xc0, 0x25, 0x15, 0x2e, 0x06, 0xaa, 0x1d, 0x13,
	0xca, 0x1c, 0x6c, 0xfe, 0x7a, 0xa0, 0x8b, 0xfb, 0x7c, 0x5d, 0x6f, 0x92, 0xa5, 0xf7, 0x94, 0x95,
	0xab, 0xc4, 0x4b, 0xab, 0xc2, 0xab, 0xdf, 0xfc, 0x66, 0xf0, 0xd3, 0xaa, 0x28, 0xaa, 0xf2, 0xd9,
	0x7f, 0xbd, 0xf5, 0x9b, 0x80, 0xfd, 0xbc, 0xda, 0x24, 0x65, 0xee, 0xaf, 0x0a, 0xff, 0x94, 0xf3,
	0xb2, 0xd3, 0xdc, 0xee, 0x3e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe6, 0x7c, 0x3e, 0x49, 0x97, 0x01,
	0x00, 0x00,
}
