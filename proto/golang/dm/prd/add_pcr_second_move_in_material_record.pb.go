// Code generated by protoc-gen-go. DO NOT EDIT.
// source: add_pcr_second_move_in_material_record.proto

package prd

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddPcrSecondMoveInMaterialRecordRequest struct {
	Subno                string   `protobuf:"bytes,1,opt,name=subno,proto3" json:"subno,omitempty"`
	Factory              string   `protobuf:"bytes,2,opt,name=factory,proto3" json:"factory,omitempty"`
	Pday                 string   `protobuf:"bytes,3,opt,name=pday,proto3" json:"pday,omitempty"`
	Class                string   `protobuf:"bytes,4,opt,name=class,proto3" json:"class,omitempty"`
	Empno                string   `protobuf:"bytes,5,opt,name=empno,proto3" json:"empno,omitempty"`
	Stype                string   `protobuf:"bytes,6,opt,name=stype,proto3" json:"stype,omitempty"`
	Ptype                string   `protobuf:"bytes,7,opt,name=ptype,proto3" json:"ptype,omitempty"`
	Machnd               string   `protobuf:"bytes,8,opt,name=machnd,proto3" json:"machnd,omitempty"`
	Barcode              string   `protobuf:"bytes,9,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Belt1Slip            string   `protobuf:"bytes,10,opt,name=belt1slip,proto3" json:"belt1slip,omitempty"`
	Belt1Pn              string   `protobuf:"bytes,11,opt,name=belt1pn,proto3" json:"belt1pn,omitempty"`
	Belt2Slip            string   `protobuf:"bytes,12,opt,name=belt2slip,proto3" json:"belt2slip,omitempty"`
	Belt2Pn              string   `protobuf:"bytes,13,opt,name=belt2pn,proto3" json:"belt2pn,omitempty"`
	Belt3Slip            string   `protobuf:"bytes,14,opt,name=belt3slip,proto3" json:"belt3slip,omitempty"`
	Belt3Pn              string   `protobuf:"bytes,15,opt,name=belt3pn,proto3" json:"belt3pn,omitempty"`
	Neb1Slip             string   `protobuf:"bytes,16,opt,name=neb1slip,proto3" json:"neb1slip,omitempty"`
	Neb1Pn               string   `protobuf:"bytes,17,opt,name=neb1pn,proto3" json:"neb1pn,omitempty"`
	Neb2Slip             string   `protobuf:"bytes,18,opt,name=neb2slip,proto3" json:"neb2slip,omitempty"`
	Neb2Pn               string   `protobuf:"bytes,19,opt,name=neb2pn,proto3" json:"neb2pn,omitempty"`
	Threadslip           string   `protobuf:"bytes,20,opt,name=threadslip,proto3" json:"threadslip,omitempty"`
	Threadpn             string   `protobuf:"bytes,21,opt,name=threadpn,proto3" json:"threadpn,omitempty"`
	Stacode              string   `protobuf:"bytes,22,opt,name=stacode,proto3" json:"stacode,omitempty"`
	Indat                string   `protobuf:"bytes,23,opt,name=indat,proto3" json:"indat,omitempty"`
	Intime               string   `protobuf:"bytes,24,opt,name=intime,proto3" json:"intime,omitempty"`
	Usrno                string   `protobuf:"bytes,25,opt,name=usrno,proto3" json:"usrno,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) Reset() {
	*m = AddPcrSecondMoveInMaterialRecordRequest{}
}
func (m *AddPcrSecondMoveInMaterialRecordRequest) String() string { return proto.CompactTextString(m) }
func (*AddPcrSecondMoveInMaterialRecordRequest) ProtoMessage()    {}
func (*AddPcrSecondMoveInMaterialRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b2808bc5f22ea547, []int{0}
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPcrSecondMoveInMaterialRecordRequest.Unmarshal(m, b)
}
func (m *AddPcrSecondMoveInMaterialRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPcrSecondMoveInMaterialRecordRequest.Marshal(b, m, deterministic)
}
func (m *AddPcrSecondMoveInMaterialRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPcrSecondMoveInMaterialRecordRequest.Merge(m, src)
}
func (m *AddPcrSecondMoveInMaterialRecordRequest) XXX_Size() int {
	return xxx_messageInfo_AddPcrSecondMoveInMaterialRecordRequest.Size(m)
}
func (m *AddPcrSecondMoveInMaterialRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPcrSecondMoveInMaterialRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPcrSecondMoveInMaterialRecordRequest proto.InternalMessageInfo

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetSubno() string {
	if m != nil {
		return m.Subno
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetFactory() string {
	if m != nil {
		return m.Factory
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetPday() string {
	if m != nil {
		return m.Pday
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetEmpno() string {
	if m != nil {
		return m.Empno
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetStype() string {
	if m != nil {
		return m.Stype
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetPtype() string {
	if m != nil {
		return m.Ptype
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetMachnd() string {
	if m != nil {
		return m.Machnd
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetBarcode() string {
	if m != nil {
		return m.Barcode
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetBelt1Slip() string {
	if m != nil {
		return m.Belt1Slip
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetBelt1Pn() string {
	if m != nil {
		return m.Belt1Pn
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetBelt2Slip() string {
	if m != nil {
		return m.Belt2Slip
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetBelt2Pn() string {
	if m != nil {
		return m.Belt2Pn
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetBelt3Slip() string {
	if m != nil {
		return m.Belt3Slip
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetBelt3Pn() string {
	if m != nil {
		return m.Belt3Pn
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetNeb1Slip() string {
	if m != nil {
		return m.Neb1Slip
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetNeb1Pn() string {
	if m != nil {
		return m.Neb1Pn
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetNeb2Slip() string {
	if m != nil {
		return m.Neb2Slip
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetNeb2Pn() string {
	if m != nil {
		return m.Neb2Pn
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetThreadslip() string {
	if m != nil {
		return m.Threadslip
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetThreadpn() string {
	if m != nil {
		return m.Threadpn
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetStacode() string {
	if m != nil {
		return m.Stacode
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetIndat() string {
	if m != nil {
		return m.Indat
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetIntime() string {
	if m != nil {
		return m.Intime
	}
	return ""
}

func (m *AddPcrSecondMoveInMaterialRecordRequest) GetUsrno() string {
	if m != nil {
		return m.Usrno
	}
	return ""
}

func init() {
	proto.RegisterType((*AddPcrSecondMoveInMaterialRecordRequest)(nil), "proto.dm.prd.AddPcrSecondMoveInMaterialRecordRequest")
}

func init() {
	proto.RegisterFile("add_pcr_second_move_in_material_record.proto", fileDescriptor_b2808bc5f22ea547)
}

var fileDescriptor_b2808bc5f22ea547 = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x92, 0x4f, 0x8f, 0xd3, 0x3c,
	0x10, 0xc6, 0xb5, 0xef, 0xbb, 0xed, 0x6e, 0xcd, 0xf2, 0xcf, 0x2c, 0xcb, 0x80, 0x10, 0x42, 0x5c,
	0xe0, 0x80, 0x12, 0x91, 0x5c, 0x10, 0x37, 0xb8, 0x71, 0x58, 0x09, 0x95, 0x1b, 0x97, 0xc8, 0xb1,
	0x4d, 0x37, 0x22, 0x1e, 0x1b, 0xdb, 0x2d, 0xea, 0xc7, 0xe1, 0x9b, 0x22, 0xcf, 0xa4, 0x4d, 0x4f,
	0xcd, 0xef, 0x71, 0x7e, 0xe3, 0xc7, 0x75, 0xc4, 0x7b, 0x65, 0x4c, 0x17, 0x74, 0xec, 0x92, 0xd5,
	0x1e, 0x4d, 0xe7, 0xfc, 0xce, 0x76, 0x03, 0x76, 0x4e, 0x65, 0x1b, 0x07, 0x35, 0x76, 0xd1, 0x6a,
	0x1f, 0x4d, 0x15, 0xa2, 0xcf, 0x5e, 0x5e, 0xd1, 0x4f, 0x65, 0x5c, 0x15, 0xa2, 0x79, 0xf3, 0x77,
	0x21, 0xde, 0x7e, 0x36, 0xe6, 0x9b, 0x8e, 0xdf, 0x49, 0xbe, 0xf5, 0x3b, 0xfb, 0x15, 0x6f, 0x27,
	0x73, 0x4d, 0xe2, 0xda, 0xfe, 0xde, 0xda, 0x94, 0xe5, 0xb5, 0x58, 0xa4, 0x6d, 0x8f, 0x1e, 0xce,
	0x5e, 0x9f, 0xbd, 0x5b, 0xad, 0x19, 0x24, 0x88, 0x8b, 0x9f, 0x4a, 0x67, 0x1f, 0xf7, 0xf0, 0x1f,
	0xe5, 0x07, 0x94, 0x52, 0x9c, 0x07, 0xa3, 0xf6, 0xf0, 0x3f, 0xc5, 0xf4, 0x5c, 0x66, 0xe8, 0x51,
	0xa5, 0x04, 0xe7, 0x3c, 0x83, 0xa0, 0xa4, 0xd6, 0x05, 0xf4, 0xb0, 0xe0, 0x94, 0x80, 0xf6, 0xcb,
	0xfb, 0x60, 0x61, 0x39, 0xed, 0x57, 0xa0, 0xa4, 0x81, 0xd2, 0x0b, 0x4e, 0x09, 0xe4, 0x8d, 0x58,
	0x3a, 0xa5, 0xef, 0xd0, 0xc0, 0x25, 0xc5, 0x13, 0x95, 0x76, 0xbd, 0x8a, 0xda, 0x1b, 0x0b, 0x2b,
	0x6e, 0x37, 0xa1, 0x7c, 0x29, 0x56, 0xbd, 0x1d, 0xf3, 0x87, 0x34, 0x0e, 0x01, 0x04, 0xad, 0xcd,
	0x01, 0x79, 0x05, 0x02, 0xc2, 0xbd, 0xc9, 0x63, 0x3c, 0x78, 0x0d, 0x79, 0x57, 0xb3, 0xd7, 0x9c,
	0x7a, 0x4d, 0x40, 0xb8, 0x3f, 0x7b, 0xcd, 0xec, 0xb5, 0xe4, 0x3d, 0x98, 0xbd, 0xf6, 0xd4, 0x6b,
	0x03, 0xc2, 0xc3, 0xd9, 0x6b, 0x03, 0xca, 0x17, 0xe2, 0x12, 0x6d, 0xcf, 0x35, 0x1f, 0xd1, 0xd2,
	0x91, 0xcb, 0xa9, 0xcb, 0x73, 0x40, 0x78, 0xcc, 0xa7, 0x66, 0x9a, 0x1c, 0xae, 0x28, 0x8f, 0x4e,
	0x73, 0xe2, 0x94, 0x82, 0x4f, 0x8e, 0x4e, 0xe9, 0xf7, 0x4a, 0x88, 0x7c, 0x17, 0xad, 0x32, 0x64,
	0x5d, 0xd3, 0xda, 0x49, 0x52, 0x66, 0x32, 0x05, 0x84, 0xa7, 0x3c, 0xf3, 0xc0, 0xa5, 0x7d, 0xca,
	0x8a, 0xfe, 0xe5, 0x1b, 0x6e, 0x3f, 0x61, 0xb9, 0xad, 0x01, 0x8d, 0xca, 0xf0, 0x8c, 0x6f, 0x8b,
	0xa0, 0x74, 0x18, 0x30, 0x0f, 0xce, 0x02, 0x70, 0x07, 0xa6, 0xf2, 0xf6, 0x36, 0x45, 0xf4, 0xf0,
	0x9c, 0xdf, 0x26, 0xf8, 0xf2, 0xe9, 0xc7, 0xc7, 0xcd, 0x90, 0x47, 0xd5, 0x57, 0xbf, 0x2c, 0x1a,
	0x55, 0x69, 0xef, 0xaa, 0xfc, 0xa7, 0x26, 0xa8, 0xb5, 0x77, 0xce, 0x63, 0xaa, 0x77, 0x4d, 0x4d,
	0x1f, 0x76, 0xbd, 0xf1, 0xa3, 0xc2, 0x4d, 0x6d, 0x5c, 0x1d, 0xa2, 0xe9, 0x97, 0x14, 0xb6, 0xff,
	0x02, 0x00, 0x00, 0xff, 0xff, 0xd5, 0x3c, 0x51, 0xac, 0x24, 0x03, 0x00, 0x00,
}
