// Code generated by protoc-gen-go. DO NOT EDIT.
// source: add_pcr_first_move_in_material_record.proto

package prd

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type AddPcrFirstMoveInMaterialRecordRequest struct {
	Subno                string   `protobuf:"bytes,1,opt,name=subno,proto3" json:"subno,omitempty"`
	Factory              string   `protobuf:"bytes,2,opt,name=factory,proto3" json:"factory,omitempty"`
	Pday                 string   `protobuf:"bytes,3,opt,name=pday,proto3" json:"pday,omitempty"`
	Class                string   `protobuf:"bytes,4,opt,name=class,proto3" json:"class,omitempty"`
	Empno                string   `protobuf:"bytes,5,opt,name=empno,proto3" json:"empno,omitempty"`
	Stype                string   `protobuf:"bytes,6,opt,name=stype,proto3" json:"stype,omitempty"`
	Ptype                string   `protobuf:"bytes,7,opt,name=ptype,proto3" json:"ptype,omitempty"`
	Machnd               string   `protobuf:"bytes,8,opt,name=machnd,proto3" json:"machnd,omitempty"`
	Barcode              string   `protobuf:"bytes,9,opt,name=barcode,proto3" json:"barcode,omitempty"`
	Inlslip              string   `protobuf:"bytes,10,opt,name=inlslip,proto3" json:"inlslip,omitempty"`
	Inlpn                string   `protobuf:"bytes,11,opt,name=inlpn,proto3" json:"inlpn,omitempty"`
	Chfslip              string   `protobuf:"bytes,12,opt,name=chfslip,proto3" json:"chfslip,omitempty"`
	Chfpn                string   `protobuf:"bytes,13,opt,name=chfpn,proto3" json:"chfpn,omitempty"`
	Cord1Slip            string   `protobuf:"bytes,14,opt,name=cord1slip,proto3" json:"cord1slip,omitempty"`
	Cord1Pn              string   `protobuf:"bytes,15,opt,name=cord1pn,proto3" json:"cord1pn,omitempty"`
	Cord2Slip            string   `protobuf:"bytes,16,opt,name=cord2slip,proto3" json:"cord2slip,omitempty"`
	Cord2Pn              string   `protobuf:"bytes,17,opt,name=cord2pn,proto3" json:"cord2pn,omitempty"`
	Cord3Slip            string   `protobuf:"bytes,18,opt,name=cord3slip,proto3" json:"cord3slip,omitempty"`
	Cord3Pn              string   `protobuf:"bytes,19,opt,name=cord3pn,proto3" json:"cord3pn,omitempty"`
	Side1Slip            string   `protobuf:"bytes,20,opt,name=side1slip,proto3" json:"side1slip,omitempty"`
	Side1Pn              string   `protobuf:"bytes,21,opt,name=side1pn,proto3" json:"side1pn,omitempty"`
	Side2Slip            string   `protobuf:"bytes,22,opt,name=side2slip,proto3" json:"side2slip,omitempty"`
	Side2Pn              string   `protobuf:"bytes,23,opt,name=side2pn,proto3" json:"side2pn,omitempty"`
	Steelslip            string   `protobuf:"bytes,24,opt,name=steelslip,proto3" json:"steelslip,omitempty"`
	Steelpn              string   `protobuf:"bytes,25,opt,name=steelpn,proto3" json:"steelpn,omitempty"`
	Stacode              string   `protobuf:"bytes,26,opt,name=stacode,proto3" json:"stacode,omitempty"`
	Indat                string   `protobuf:"bytes,27,opt,name=indat,proto3" json:"indat,omitempty"`
	Intime               string   `protobuf:"bytes,28,opt,name=intime,proto3" json:"intime,omitempty"`
	Usrno                string   `protobuf:"bytes,29,opt,name=usrno,proto3" json:"usrno,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) Reset() {
	*m = AddPcrFirstMoveInMaterialRecordRequest{}
}
func (m *AddPcrFirstMoveInMaterialRecordRequest) String() string { return proto.CompactTextString(m) }
func (*AddPcrFirstMoveInMaterialRecordRequest) ProtoMessage()    {}
func (*AddPcrFirstMoveInMaterialRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1d8c5e6405e12fe7, []int{0}
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPcrFirstMoveInMaterialRecordRequest.Unmarshal(m, b)
}
func (m *AddPcrFirstMoveInMaterialRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPcrFirstMoveInMaterialRecordRequest.Marshal(b, m, deterministic)
}
func (m *AddPcrFirstMoveInMaterialRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPcrFirstMoveInMaterialRecordRequest.Merge(m, src)
}
func (m *AddPcrFirstMoveInMaterialRecordRequest) XXX_Size() int {
	return xxx_messageInfo_AddPcrFirstMoveInMaterialRecordRequest.Size(m)
}
func (m *AddPcrFirstMoveInMaterialRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPcrFirstMoveInMaterialRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPcrFirstMoveInMaterialRecordRequest proto.InternalMessageInfo

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetSubno() string {
	if m != nil {
		return m.Subno
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetFactory() string {
	if m != nil {
		return m.Factory
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetPday() string {
	if m != nil {
		return m.Pday
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetClass() string {
	if m != nil {
		return m.Class
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetEmpno() string {
	if m != nil {
		return m.Empno
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetStype() string {
	if m != nil {
		return m.Stype
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetPtype() string {
	if m != nil {
		return m.Ptype
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetMachnd() string {
	if m != nil {
		return m.Machnd
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetBarcode() string {
	if m != nil {
		return m.Barcode
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetInlslip() string {
	if m != nil {
		return m.Inlslip
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetInlpn() string {
	if m != nil {
		return m.Inlpn
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetChfslip() string {
	if m != nil {
		return m.Chfslip
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetChfpn() string {
	if m != nil {
		return m.Chfpn
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetCord1Slip() string {
	if m != nil {
		return m.Cord1Slip
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetCord1Pn() string {
	if m != nil {
		return m.Cord1Pn
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetCord2Slip() string {
	if m != nil {
		return m.Cord2Slip
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetCord2Pn() string {
	if m != nil {
		return m.Cord2Pn
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetCord3Slip() string {
	if m != nil {
		return m.Cord3Slip
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetCord3Pn() string {
	if m != nil {
		return m.Cord3Pn
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetSide1Slip() string {
	if m != nil {
		return m.Side1Slip
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetSide1Pn() string {
	if m != nil {
		return m.Side1Pn
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetSide2Slip() string {
	if m != nil {
		return m.Side2Slip
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetSide2Pn() string {
	if m != nil {
		return m.Side2Pn
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetSteelslip() string {
	if m != nil {
		return m.Steelslip
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetSteelpn() string {
	if m != nil {
		return m.Steelpn
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetStacode() string {
	if m != nil {
		return m.Stacode
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetIndat() string {
	if m != nil {
		return m.Indat
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetIntime() string {
	if m != nil {
		return m.Intime
	}
	return ""
}

func (m *AddPcrFirstMoveInMaterialRecordRequest) GetUsrno() string {
	if m != nil {
		return m.Usrno
	}
	return ""
}

func init() {
	proto.RegisterType((*AddPcrFirstMoveInMaterialRecordRequest)(nil), "proto.dm.prd.AddPcrFirstMoveInMaterialRecordRequest")
}

func init() {
	proto.RegisterFile("add_pcr_first_move_in_material_record.proto", fileDescriptor_1d8c5e6405e12fe7)
}

var fileDescriptor_1d8c5e6405e12fe7 = []byte{
	// 456 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x93, 0x4f, 0x8f, 0xd3, 0x30,
	0x10, 0x47, 0xb5, 0xb0, 0xdb, 0x65, 0xc3, 0xf2, 0x2f, 0x2c, 0xcb, 0x00, 0x8b, 0x84, 0x38, 0x20,
	0x24, 0xa4, 0x44, 0x24, 0x17, 0xc4, 0x0d, 0x0e, 0x48, 0x1c, 0x56, 0x42, 0x3d, 0x72, 0x89, 0x5c,
	0xdb, 0x6d, 0x2d, 0xe2, 0xb1, 0xb1, 0xdd, 0xa2, 0xde, 0xf9, 0xe0, 0xc8, 0x33, 0x0e, 0xe9, 0xa9,
	0x7d, 0xbf, 0x99, 0x67, 0x4f, 0x62, 0xa7, 0xfa, 0x20, 0x94, 0x1a, 0xbc, 0x0c, 0xc3, 0xda, 0x84,
	0x98, 0x06, 0xeb, 0xf6, 0x7a, 0x30, 0x38, 0x58, 0x91, 0x74, 0x30, 0x62, 0x1c, 0x82, 0x96, 0x2e,
	0xa8, 0xc6, 0x07, 0x97, 0x5c, 0x7d, 0x49, 0x3f, 0x8d, 0xb2, 0x8d, 0x0f, 0xea, 0xed, 0xdf, 0x45,
	0xf5, 0xee, 0x8b, 0x52, 0x3f, 0x64, 0xf8, 0x96, 0xdd, 0x5b, 0xb7, 0xd7, 0xdf, 0xf1, 0xb6, 0x88,
	0x4b, 0xf2, 0x96, 0xfa, 0xf7, 0x4e, 0xc7, 0x54, 0x5f, 0x55, 0x67, 0x71, 0xb7, 0x42, 0x07, 0x27,
	0x6f, 0x4e, 0xde, 0x5f, 0x2c, 0x19, 0x6a, 0xa8, 0xce, 0xd7, 0x42, 0x26, 0x17, 0x0e, 0x70, 0x87,
	0xf2, 0x09, 0xeb, 0xba, 0x3a, 0xf5, 0x4a, 0x1c, 0xe0, 0x2e, 0xc5, 0xf4, 0x3f, 0xaf, 0x21, 0x47,
	0x11, 0x23, 0x9c, 0xf2, 0x1a, 0x04, 0x39, 0xd5, 0xd6, 0xa3, 0x83, 0x33, 0x4e, 0x09, 0x68, 0xbf,
	0x74, 0xf0, 0x1a, 0x16, 0x65, 0xbf, 0x0c, 0x39, 0xf5, 0x94, 0x9e, 0x73, 0x4a, 0x50, 0x5f, 0x57,
	0x0b, 0x2b, 0xe4, 0x16, 0x15, 0xdc, 0xa3, 0xb8, 0x50, 0x9e, 0x6e, 0x25, 0x82, 0x74, 0x4a, 0xc3,
	0x05, 0x4f, 0x57, 0x30, 0x57, 0x0c, 0x8e, 0x71, 0x34, 0x1e, 0x2a, 0xae, 0x14, 0xcc, 0x3b, 0x18,
	0x1c, 0x3d, 0xc2, 0x7d, 0xde, 0x81, 0x20, 0xf7, 0xcb, 0xed, 0x9a, 0xfa, 0x2f, 0xb9, 0xbf, 0x20,
	0x3d, 0xd3, 0x76, 0xed, 0x11, 0x1e, 0x94, 0x67, 0xca, 0x50, 0xdf, 0x54, 0x17, 0xf9, 0xe5, 0x7d,
	0x24, 0xe3, 0x21, 0x55, 0xe6, 0x80, 0x56, 0xcb, 0xe0, 0x11, 0x1e, 0x95, 0xd5, 0x18, 0x27, 0xaf,
	0x23, 0xef, 0xf1, 0xec, 0x75, 0xc7, 0x5e, 0xe7, 0x11, 0x9e, 0xcc, 0x5e, 0x37, 0x7b, 0x3d, 0x79,
	0xf5, 0xec, 0xf5, 0xc7, 0x5e, 0xef, 0x11, 0x9e, 0xce, 0x5e, 0xcf, 0x5e, 0x34, 0x4a, 0xf3, 0x9c,
	0x57, 0xec, 0xfd, 0x0f, 0xb2, 0x47, 0xe0, 0x11, 0x9e, 0xb1, 0x57, 0x70, 0xf2, 0x78, 0xce, 0xeb,
	0xd9, 0xeb, 0x8e, 0xbd, 0x3c, 0xe7, 0xf3, 0xd9, 0x2b, 0x73, 0xc6, 0xa4, 0x35, 0xbf, 0x79, 0x28,
	0xde, 0x14, 0x90, 0x97, 0xc1, 0x23, 0xbc, 0x28, 0x1e, 0x23, 0x57, 0x04, 0x9d, 0xe4, 0xcb, 0xa9,
	0x42, 0xc8, 0xe7, 0xa5, 0x44, 0x82, 0x57, 0xd3, 0x79, 0x29, 0x91, 0xf2, 0x8d, 0x30, 0x98, 0x8c,
	0xd5, 0x70, 0xc3, 0x37, 0x82, 0x29, 0x77, 0xef, 0x62, 0x40, 0x07, 0xaf, 0xb9, 0x9b, 0xe0, 0xeb,
	0xe7, 0x9f, 0x9f, 0x36, 0x26, 0x8d, 0x62, 0xd5, 0xfc, 0xd2, 0xa8, 0x44, 0x23, 0x9d, 0x6d, 0xd2,
	0x9f, 0x96, 0xa0, 0x95, 0xce, 0x5a, 0x87, 0xb1, 0xdd, 0x77, 0x2d, 0x7d, 0x3b, 0xed, 0xc6, 0x8d,
	0x02, 0x37, 0xad, 0xb2, 0xad, 0x0f, 0x6a, 0xb5, 0xa0, 0xb0, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff,
	0xb4, 0x95, 0xaf, 0xfc, 0x86, 0x03, 0x00, 0x00,
}
