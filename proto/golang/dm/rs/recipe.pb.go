// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: recipe.proto

package rs

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	container "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/dm/rs/container"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Param_Type int32

const (
	Param_PARAM_TYPE_UNSPECIFIED Param_Type = 0
	Param_VALUE                  Param_Type = 1
	Param_MAX                    Param_Type = 2
	Param_MIN                    Param_Type = 3
	Param_RANGE                  Param_Type = 4
	Param_ENUM                   Param_Type = 5
	Param_OTHERS                 Param_Type = 6
)

var Param_Type_name = map[int32]string{
	0: "PARAM_TYPE_UNSPECIFIED",
	1: "VALUE",
	2: "MAX",
	3: "MIN",
	4: "RANGE",
	5: "ENUM",
	6: "OTHERS",
}

var Param_Type_value = map[string]int32{
	"PARAM_TYPE_UNSPECIFIED": 0,
	"VALUE":                  1,
	"MAX":                    2,
	"MIN":                    3,
	"RANGE":                  4,
	"ENUM":                   5,
	"OTHERS":                 6,
}

func (x Param_Type) String() string {
	return proto.EnumName(Param_Type_name, int32(x))
}

func (Param_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{0, 0}
}

type Version_FlowStatus int32

const (
	Version_FLOW_STATUS_UNSPECIFIED Version_FlowStatus = 0
	Version_EXECUTORY               Version_FlowStatus = 1
	Version_EFFECTIVE               Version_FlowStatus = 2
	Version_INCHANGE                Version_FlowStatus = 3
	Version_VOID                    Version_FlowStatus = 4
	Version_INVALID                 Version_FlowStatus = 5
)

var Version_FlowStatus_name = map[int32]string{
	0: "FLOW_STATUS_UNSPECIFIED",
	1: "EXECUTORY",
	2: "EFFECTIVE",
	3: "INCHANGE",
	4: "VOID",
	5: "INVALID",
}

var Version_FlowStatus_value = map[string]int32{
	"FLOW_STATUS_UNSPECIFIED": 0,
	"EXECUTORY":               1,
	"EFFECTIVE":               2,
	"INCHANGE":                3,
	"VOID":                    4,
	"INVALID":                 5,
}

func (x Version_FlowStatus) String() string {
	return proto.EnumName(Version_FlowStatus_name, int32(x))
}

func (Version_FlowStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{4, 0}
}

type ArouteActive_Mode int32

const (
	ArouteActive_MODE_UNSPECIFIED ArouteActive_Mode = 0
	ArouteActive_MONTHLY          ArouteActive_Mode = 1
	ArouteActive_ACTIVELY         ArouteActive_Mode = 2
)

var ArouteActive_Mode_name = map[int32]string{
	0: "MODE_UNSPECIFIED",
	1: "MONTHLY",
	2: "ACTIVELY",
}

var ArouteActive_Mode_value = map[string]int32{
	"MODE_UNSPECIFIED": 0,
	"MONTHLY":          1,
	"ACTIVELY":         2,
}

func (x ArouteActive_Mode) String() string {
	return proto.EnumName(ArouteActive_Mode_name, int32(x))
}

func (ArouteActive_Mode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{9, 0}
}

// 數值參數。
type Param struct {
	Type        Param_Type        `protobuf:"varint,1,opt,name=type,proto3,enum=proto.dm.rs.Param_Type" json:"type,omitempty" bson:"type"`
	Unit        string            `protobuf:"bytes,2,opt,name=unit,proto3" json:"unit,omitempty" bson:"unit"`
	Central     *Param_Constraint `protobuf:"bytes,3,opt,name=central,proto3" json:"central,omitempty" bson:"central"`
	Min         *Param_Constraint `protobuf:"bytes,4,opt,name=min,proto3" json:"min,omitempty" bson:"min"`
	Max         *Param_Constraint `protobuf:"bytes,5,opt,name=max,proto3" json:"max,omitempty" bson:"max"`
	ErrorMargin *Param_Constraint `protobuf:"bytes,6,opt,name=error_margin,json=errorMargin,proto3" json:"error_margin,omitempty" bson:"errorMargin"`
	Enum        *Param_Enum       `protobuf:"bytes,7,opt,name=enum,proto3" json:"enum,omitempty" bson:"enum"`
	Others      string            `protobuf:"bytes,8,opt,name=others,proto3" json:"others,omitempty" bson:"others"`
}

func (m *Param) Reset()         { *m = Param{} }
func (m *Param) String() string { return proto.CompactTextString(m) }
func (*Param) ProtoMessage()    {}
func (*Param) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{0}
}
func (m *Param) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Param.Unmarshal(m, b)
}
func (m *Param) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Param.Marshal(b, m, deterministic)
}
func (m *Param) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Param.Merge(m, src)
}
func (m *Param) XXX_Size() int {
	return xxx_messageInfo_Param.Size(m)
}
func (m *Param) XXX_DiscardUnknown() {
	xxx_messageInfo_Param.DiscardUnknown(m)
}

var xxx_messageInfo_Param proto.InternalMessageInfo

func (m *Param) GetType() Param_Type {
	if m != nil {
		return m.Type
	}
	return Param_PARAM_TYPE_UNSPECIFIED
}

func (m *Param) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *Param) GetCentral() *Param_Constraint {
	if m != nil {
		return m.Central
	}
	return nil
}

func (m *Param) GetMin() *Param_Constraint {
	if m != nil {
		return m.Min
	}
	return nil
}

func (m *Param) GetMax() *Param_Constraint {
	if m != nil {
		return m.Max
	}
	return nil
}

func (m *Param) GetErrorMargin() *Param_Constraint {
	if m != nil {
		return m.ErrorMargin
	}
	return nil
}

func (m *Param) GetEnum() *Param_Enum {
	if m != nil {
		return m.Enum
	}
	return nil
}

func (m *Param) GetOthers() string {
	if m != nil {
		return m.Others
	}
	return ""
}

type Param_Constraint struct {
	Value float32 `protobuf:"fixed32,1,opt,name=value,proto3" json:"value,omitempty" bson:"value"`
}

func (m *Param_Constraint) Reset()         { *m = Param_Constraint{} }
func (m *Param_Constraint) String() string { return proto.CompactTextString(m) }
func (*Param_Constraint) ProtoMessage()    {}
func (*Param_Constraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{0, 0}
}
func (m *Param_Constraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Param_Constraint.Unmarshal(m, b)
}
func (m *Param_Constraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Param_Constraint.Marshal(b, m, deterministic)
}
func (m *Param_Constraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Param_Constraint.Merge(m, src)
}
func (m *Param_Constraint) XXX_Size() int {
	return xxx_messageInfo_Param_Constraint.Size(m)
}
func (m *Param_Constraint) XXX_DiscardUnknown() {
	xxx_messageInfo_Param_Constraint.DiscardUnknown(m)
}

var xxx_messageInfo_Param_Constraint proto.InternalMessageInfo

func (m *Param_Constraint) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type Param_Enum struct {
	Value int32 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty" bson:"value"`
}

func (m *Param_Enum) Reset()         { *m = Param_Enum{} }
func (m *Param_Enum) String() string { return proto.CompactTextString(m) }
func (*Param_Enum) ProtoMessage()    {}
func (*Param_Enum) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{0, 1}
}
func (m *Param_Enum) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Param_Enum.Unmarshal(m, b)
}
func (m *Param_Enum) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Param_Enum.Marshal(b, m, deterministic)
}
func (m *Param_Enum) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Param_Enum.Merge(m, src)
}
func (m *Param_Enum) XXX_Size() int {
	return xxx_messageInfo_Param_Enum.Size(m)
}
func (m *Param_Enum) XXX_DiscardUnknown() {
	xxx_messageInfo_Param_Enum.DiscardUnknown(m)
}

var xxx_messageInfo_Param_Enum proto.InternalMessageInfo

func (m *Param_Enum) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

// 原材料。  //TODO 20190320 成型材料上下貼、環帶/簾布貼覆的順序
type Material struct {
	// Every Process's Output Could Be Next Porcess's Material
	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty" bson:"type"`
	Level string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty" bson:"level"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	// 掛載桶槽類型 CC、BCC、TOP、BOTTOM、P1、P2 ...etc
	ContainerType container.Type `protobuf:"varint,4,opt,name=container_type,json=containerType,proto3,enum=proto.dm.rs.container.Type" json:"container_type,omitempty" bson:"containerType"`
	Param         *Param         `protobuf:"bytes,5,opt,name=param,proto3" json:"param,omitempty" bson:"param"`
	ReqRecipeId   string         `protobuf:"bytes,6,opt,name=req_recipe_id,json=reqRecipeId,proto3" json:"req_recipe_id,omitempty" bson:"reqRecipeID"`
}

func (m *Material) Reset()         { *m = Material{} }
func (m *Material) String() string { return proto.CompactTextString(m) }
func (*Material) ProtoMessage()    {}
func (*Material) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{1}
}
func (m *Material) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Material.Unmarshal(m, b)
}
func (m *Material) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Material.Marshal(b, m, deterministic)
}
func (m *Material) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Material.Merge(m, src)
}
func (m *Material) XXX_Size() int {
	return xxx_messageInfo_Material.Size(m)
}
func (m *Material) XXX_DiscardUnknown() {
	xxx_messageInfo_Material.DiscardUnknown(m)
}

var xxx_messageInfo_Material proto.InternalMessageInfo

func (m *Material) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Material) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Material) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Material) GetContainerType() container.Type {
	if m != nil {
		return m.ContainerType
	}
	return container.Type_CONTAINER_TYPE_UNSPECIFIED
}

func (m *Material) GetParam() *Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *Material) GetReqRecipeId() string {
	if m != nil {
		return m.ReqRecipeId
	}
	return ""
}

// 工器具、載具。
type Tool struct {
	Role ToolRole `protobuf:"varint,1,opt,name=role,proto3,enum=proto.dm.rs.ToolRole" json:"role,omitempty" bson:"role"`
	Id   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	// 工具不須檢核時為false
	CheckFlag bool `protobuf:"varint,3,opt,name=check_flag,json=checkFlag,proto3" json:"check_flag,omitempty" bson:"check_flag"`
}

func (m *Tool) Reset()         { *m = Tool{} }
func (m *Tool) String() string { return proto.CompactTextString(m) }
func (*Tool) ProtoMessage()    {}
func (*Tool) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{2}
}
func (m *Tool) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Tool.Unmarshal(m, b)
}
func (m *Tool) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Tool.Marshal(b, m, deterministic)
}
func (m *Tool) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Tool.Merge(m, src)
}
func (m *Tool) XXX_Size() int {
	return xxx_messageInfo_Tool.Size(m)
}
func (m *Tool) XXX_DiscardUnknown() {
	xxx_messageInfo_Tool.DiscardUnknown(m)
}

var xxx_messageInfo_Tool proto.InternalMessageInfo

func (m *Tool) GetRole() ToolRole {
	if m != nil {
		return m.Role
	}
	return ToolRole_TOOL_ROLE_UNSPECIFIED
}

func (m *Tool) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Tool) GetCheckFlag() bool {
	if m != nil {
		return m.CheckFlag
	}
	return false
}

// 物性、量測或控制訊號可為數值參數+敘述，或其一。
type Property struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Param       *Param `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty" bson:"param"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty" bson:"description"`
}

func (m *Property) Reset()         { *m = Property{} }
func (m *Property) String() string { return proto.CompactTextString(m) }
func (*Property) ProtoMessage()    {}
func (*Property) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{3}
}
func (m *Property) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Property.Unmarshal(m, b)
}
func (m *Property) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Property.Marshal(b, m, deterministic)
}
func (m *Property) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Property.Merge(m, src)
}
func (m *Property) XXX_Size() int {
	return xxx_messageInfo_Property.Size(m)
}
func (m *Property) XXX_DiscardUnknown() {
	xxx_messageInfo_Property.DiscardUnknown(m)
}

var xxx_messageInfo_Property proto.InternalMessageInfo

func (m *Property) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Property) GetParam() *Param {
	if m != nil {
		return m.Param
	}
	return nil
}

func (m *Property) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// 配合配方版本。
type Version struct {
	StageStatus StageStatus          `protobuf:"varint,1,opt,name=stage_status,json=stageStatus,proto3,enum=proto.dm.rs.StageStatus" json:"stage_status,omitempty" bson:"stageStatus"`
	FlowStatus  Version_FlowStatus   `protobuf:"varint,2,opt,name=flow_status,json=flowStatus,proto3,enum=proto.dm.rs.Version_FlowStatus" json:"flow_status,omitempty" bson:"flowStatus"`
	Major       string               `protobuf:"bytes,3,opt,name=major,proto3" json:"major,omitempty" bson:"major"`
	Minor       string               `protobuf:"bytes,4,opt,name=minor,proto3" json:"minor,omitempty" bson:"minor"`
	SubmittedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=submitted_at,json=submittedAt,proto3" json:"submitted_at,omitempty" bson:"submittedAt"`
	UpdatedBy   string               `protobuf:"bytes,6,opt,name=updated_by,json=updatedBy,proto3" json:"updated_by,omitempty" bson:"updatedBy"`
	UpdatedAt   *timestamp.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty" bson:"updatedAt"`
	ReleasedAt  *timestamp.Timestamp `protobuf:"bytes,8,opt,name=released_at,json=releasedAt,proto3" json:"released_at,omitempty" bson:"releasedAt"`
	ReleaseBy   string               `protobuf:"bytes,9,opt,name=release_by,json=releaseBy,proto3" json:"release_by,omitempty" bson:"releaseBy"`
	Note        []string             `protobuf:"bytes,10,rep,name=note,proto3" json:"note,omitempty" bson:"note"`
}

func (m *Version) Reset()         { *m = Version{} }
func (m *Version) String() string { return proto.CompactTextString(m) }
func (*Version) ProtoMessage()    {}
func (*Version) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{4}
}
func (m *Version) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Version.Unmarshal(m, b)
}
func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
}
func (m *Version) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Version.Merge(m, src)
}
func (m *Version) XXX_Size() int {
	return xxx_messageInfo_Version.Size(m)
}
func (m *Version) XXX_DiscardUnknown() {
	xxx_messageInfo_Version.DiscardUnknown(m)
}

var xxx_messageInfo_Version proto.InternalMessageInfo

func (m *Version) GetStageStatus() StageStatus {
	if m != nil {
		return m.StageStatus
	}
	return StageStatus_STAGE_STATUS_UNSPECIFIED
}

func (m *Version) GetFlowStatus() Version_FlowStatus {
	if m != nil {
		return m.FlowStatus
	}
	return Version_FLOW_STATUS_UNSPECIFIED
}

func (m *Version) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *Version) GetMinor() string {
	if m != nil {
		return m.Minor
	}
	return ""
}

func (m *Version) GetSubmittedAt() *timestamp.Timestamp {
	if m != nil {
		return m.SubmittedAt
	}
	return nil
}

func (m *Version) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *Version) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Version) GetReleasedAt() *timestamp.Timestamp {
	if m != nil {
		return m.ReleasedAt
	}
	return nil
}

func (m *Version) GetReleaseBy() string {
	if m != nil {
		return m.ReleaseBy
	}
	return ""
}

func (m *Version) GetNote() []string {
	if m != nil {
		return m.Note
	}
	return nil
}

// 單一工序的定義。
type Process struct {
	Name    string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	Type    ProcessType       `protobuf:"varint,2,opt,name=type,proto3,enum=proto.dm.rs.ProcessType" json:"type,omitempty" bson:"type"`
	Configs []*Process_Config `protobuf:"bytes,3,rep,name=configs,proto3" json:"configs,omitempty" bson:"configs"`
}

func (m *Process) Reset()         { *m = Process{} }
func (m *Process) String() string { return proto.CompactTextString(m) }
func (*Process) ProtoMessage()    {}
func (*Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{5}
}
func (m *Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Process.Unmarshal(m, b)
}
func (m *Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Process.Marshal(b, m, deterministic)
}
func (m *Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Process.Merge(m, src)
}
func (m *Process) XXX_Size() int {
	return xxx_messageInfo_Process.Size(m)
}
func (m *Process) XXX_DiscardUnknown() {
	xxx_messageInfo_Process.DiscardUnknown(m)
}

var xxx_messageInfo_Process proto.InternalMessageInfo

func (m *Process) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Process) GetType() ProcessType {
	if m != nil {
		return m.Type
	}
	return ProcessType_PROCESS_TYPE_UNSPECIFIED
}

func (m *Process) GetConfigs() []*Process_Config {
	if m != nil {
		return m.Configs
	}
	return nil
}

type Process_Config struct {
	// 符合的機台及工具。
	Stations []string               `protobuf:"bytes,1,rep,name=stations,proto3" json:"stations,omitempty" bson:"stations"`
	Tools    []*Tool                `protobuf:"bytes,2,rep,name=tools,proto3" json:"tools,omitempty" bson:"tools"`
	Steps    []*Process_Config_Step `protobuf:"bytes,4,rep,name=steps,proto3" json:"steps,omitempty" bson:"steps"`
}

func (m *Process_Config) Reset()         { *m = Process_Config{} }
func (m *Process_Config) String() string { return proto.CompactTextString(m) }
func (*Process_Config) ProtoMessage()    {}
func (*Process_Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{5, 0}
}
func (m *Process_Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Process_Config.Unmarshal(m, b)
}
func (m *Process_Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Process_Config.Marshal(b, m, deterministic)
}
func (m *Process_Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Process_Config.Merge(m, src)
}
func (m *Process_Config) XXX_Size() int {
	return xxx_messageInfo_Process_Config.Size(m)
}
func (m *Process_Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Process_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Process_Config proto.InternalMessageInfo

func (m *Process_Config) GetStations() []string {
	if m != nil {
		return m.Stations
	}
	return nil
}

func (m *Process_Config) GetTools() []*Tool {
	if m != nil {
		return m.Tools
	}
	return nil
}

func (m *Process_Config) GetSteps() []*Process_Config_Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

// 分階段的材料、控制、f量測設定。
type Process_Config_Step struct {
	Materials    []*Material `protobuf:"bytes,1,rep,name=materials,proto3" json:"materials,omitempty" bson:"materials"`
	Controls     []*Property `protobuf:"bytes,2,rep,name=controls,proto3" json:"controls,omitempty" bson:"controls"`
	Measurements []*Property `protobuf:"bytes,3,rep,name=measurements,proto3" json:"measurements,omitempty" bson:"measurements"`
}

func (m *Process_Config_Step) Reset()         { *m = Process_Config_Step{} }
func (m *Process_Config_Step) String() string { return proto.CompactTextString(m) }
func (*Process_Config_Step) ProtoMessage()    {}
func (*Process_Config_Step) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{5, 0, 0}
}
func (m *Process_Config_Step) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Process_Config_Step.Unmarshal(m, b)
}
func (m *Process_Config_Step) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Process_Config_Step.Marshal(b, m, deterministic)
}
func (m *Process_Config_Step) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Process_Config_Step.Merge(m, src)
}
func (m *Process_Config_Step) XXX_Size() int {
	return xxx_messageInfo_Process_Config_Step.Size(m)
}
func (m *Process_Config_Step) XXX_DiscardUnknown() {
	xxx_messageInfo_Process_Config_Step.DiscardUnknown(m)
}

var xxx_messageInfo_Process_Config_Step proto.InternalMessageInfo

func (m *Process_Config_Step) GetMaterials() []*Material {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *Process_Config_Step) GetControls() []*Property {
	if m != nil {
		return m.Controls
	}
	return nil
}

func (m *Process_Config_Step) GetMeasurements() []*Property {
	if m != nil {
		return m.Measurements
	}
	return nil
}

// 配合表: 多個單一工序及異常處理流程。
type Recipe struct {
	Id          string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	ProductType string      `protobuf:"bytes,2,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty" bson:"productType"`
	ProductId   string      `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty" bson:"productID"`
	Factory     []FactoryID `protobuf:"varint,4,rep,packed,name=factory,proto3,enum=proto.dm.rs.FactoryID" json:"factory,omitempty" bson:"factory"`
	Version     *Version    `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty" bson:"version"`
	// 來源配方。
	ParentSpecId string `protobuf:"bytes,6,opt,name=parent_spec_id,json=parentSpecId,proto3" json:"parent_spec_id,omitempty" bson:"parentSpecID"`
	// 配合的工序。e.g., 素煉、加促、…
	Processes     []*Process             `protobuf:"bytes,7,rep,name=processes,proto3" json:"processes,omitempty" bson:"processes"`
	OptionalFlows []*Recipe_OptionalFlow `protobuf:"bytes,8,rep,name=optional_flows,json=optionalFlows,proto3" json:"optional_flows,omitempty" bson:"optionalFlows"`
}

func (m *Recipe) Reset()         { *m = Recipe{} }
func (m *Recipe) String() string { return proto.CompactTextString(m) }
func (*Recipe) ProtoMessage()    {}
func (*Recipe) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{6}
}
func (m *Recipe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recipe.Unmarshal(m, b)
}
func (m *Recipe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recipe.Marshal(b, m, deterministic)
}
func (m *Recipe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recipe.Merge(m, src)
}
func (m *Recipe) XXX_Size() int {
	return xxx_messageInfo_Recipe.Size(m)
}
func (m *Recipe) XXX_DiscardUnknown() {
	xxx_messageInfo_Recipe.DiscardUnknown(m)
}

var xxx_messageInfo_Recipe proto.InternalMessageInfo

func (m *Recipe) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Recipe) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *Recipe) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Recipe) GetFactory() []FactoryID {
	if m != nil {
		return m.Factory
	}
	return nil
}

func (m *Recipe) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Recipe) GetParentSpecId() string {
	if m != nil {
		return m.ParentSpecId
	}
	return ""
}

func (m *Recipe) GetProcesses() []*Process {
	if m != nil {
		return m.Processes
	}
	return nil
}

func (m *Recipe) GetOptionalFlows() []*Recipe_OptionalFlow {
	if m != nil {
		return m.OptionalFlows
	}
	return nil
}

// 部份檢驗或異常處理流程。
type Recipe_OptionalFlow struct {
	Name             string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty" bson:"name"`
	AfterProcessName string      `protobuf:"bytes,2,opt,name=after_process_name,json=afterProcessName,proto3" json:"after_process_name,omitempty" bson:"afterProcessName"`
	AfterProcessType ProcessType `protobuf:"varint,3,opt,name=after_process_type,json=afterProcessType,proto3,enum=proto.dm.rs.ProcessType" json:"after_process_type,omitempty" bson:"afterProcessType"`
	MaxRepetitions   int32       `protobuf:"varint,4,opt,name=max_repetitions,json=maxRepetitions,proto3" json:"max_repetitions,omitempty" bson:"maxRepetitions"`
	Processes        []*Process  `protobuf:"bytes,5,rep,name=processes,proto3" json:"processes,omitempty" bson:"processes"`
}

func (m *Recipe_OptionalFlow) Reset()         { *m = Recipe_OptionalFlow{} }
func (m *Recipe_OptionalFlow) String() string { return proto.CompactTextString(m) }
func (*Recipe_OptionalFlow) ProtoMessage()    {}
func (*Recipe_OptionalFlow) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{6, 0}
}
func (m *Recipe_OptionalFlow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Recipe_OptionalFlow.Unmarshal(m, b)
}
func (m *Recipe_OptionalFlow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Recipe_OptionalFlow.Marshal(b, m, deterministic)
}
func (m *Recipe_OptionalFlow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Recipe_OptionalFlow.Merge(m, src)
}
func (m *Recipe_OptionalFlow) XXX_Size() int {
	return xxx_messageInfo_Recipe_OptionalFlow.Size(m)
}
func (m *Recipe_OptionalFlow) XXX_DiscardUnknown() {
	xxx_messageInfo_Recipe_OptionalFlow.DiscardUnknown(m)
}

var xxx_messageInfo_Recipe_OptionalFlow proto.InternalMessageInfo

func (m *Recipe_OptionalFlow) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Recipe_OptionalFlow) GetAfterProcessName() string {
	if m != nil {
		return m.AfterProcessName
	}
	return ""
}

func (m *Recipe_OptionalFlow) GetAfterProcessType() ProcessType {
	if m != nil {
		return m.AfterProcessType
	}
	return ProcessType_PROCESS_TYPE_UNSPECIFIED
}

func (m *Recipe_OptionalFlow) GetMaxRepetitions() int32 {
	if m != nil {
		return m.MaxRepetitions
	}
	return 0
}

func (m *Recipe_OptionalFlow) GetProcesses() []*Process {
	if m != nil {
		return m.Processes
	}
	return nil
}

// 配方表。
type Spec struct {
	Id           string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	ProductType  string      `protobuf:"bytes,2,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty" bson:"productType"`
	ProductId    string      `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty" bson:"productID"`
	Factory      []FactoryID `protobuf:"varint,4,rep,packed,name=factory,proto3,enum=proto.dm.rs.FactoryID" json:"factory,omitempty" bson:"factory"`
	Version      *Version    `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty" bson:"version"`
	ParentSpecId string      `protobuf:"bytes,6,opt,name=parent_spec_id,json=parentSpecId,proto3" json:"parent_spec_id,omitempty" bson:"parentSpecID"`
	Materials    []*Material `protobuf:"bytes,7,rep,name=materials,proto3" json:"materials,omitempty" bson:"materials"`
	Tools        []*Tool     `protobuf:"bytes,8,rep,name=tools,proto3" json:"tools,omitempty" bson:"tools"`
	Properties   []*Property `protobuf:"bytes,9,rep,name=properties,proto3" json:"properties,omitempty" bson:"properties"`
}

func (m *Spec) Reset()         { *m = Spec{} }
func (m *Spec) String() string { return proto.CompactTextString(m) }
func (*Spec) ProtoMessage()    {}
func (*Spec) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{7}
}
func (m *Spec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spec.Unmarshal(m, b)
}
func (m *Spec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spec.Marshal(b, m, deterministic)
}
func (m *Spec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spec.Merge(m, src)
}
func (m *Spec) XXX_Size() int {
	return xxx_messageInfo_Spec.Size(m)
}
func (m *Spec) XXX_DiscardUnknown() {
	xxx_messageInfo_Spec.DiscardUnknown(m)
}

var xxx_messageInfo_Spec proto.InternalMessageInfo

func (m *Spec) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Spec) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *Spec) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *Spec) GetFactory() []FactoryID {
	if m != nil {
		return m.Factory
	}
	return nil
}

func (m *Spec) GetVersion() *Version {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Spec) GetParentSpecId() string {
	if m != nil {
		return m.ParentSpecId
	}
	return ""
}

func (m *Spec) GetMaterials() []*Material {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *Spec) GetTools() []*Tool {
	if m != nil {
		return m.Tools
	}
	return nil
}

func (m *Spec) GetProperties() []*Property {
	if m != nil {
		return m.Properties
	}
	return nil
}

//微調配方表
type TrimSpec struct {
	Factory        []FactoryID `protobuf:"varint,1,rep,packed,name=factory,proto3,enum=proto.dm.rs.FactoryID" json:"factory,omitempty" bson:"factory"`
	Id             string      `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	ProductId      string      `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty" bson:"productID"`
	ProductType    string      `protobuf:"bytes,4,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty" bson:"productType"`
	RefSpecVersion *Version    `protobuf:"bytes,5,opt,name=ref_spec_version,json=refSpecVersion,proto3" json:"ref_spec_version,omitempty" bson:"refSpecVersion"`
	Materials      []*Material `protobuf:"bytes,6,rep,name=materials,proto3" json:"materials,omitempty" bson:"materials"`
}

func (m *TrimSpec) Reset()         { *m = TrimSpec{} }
func (m *TrimSpec) String() string { return proto.CompactTextString(m) }
func (*TrimSpec) ProtoMessage()    {}
func (*TrimSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{8}
}
func (m *TrimSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrimSpec.Unmarshal(m, b)
}
func (m *TrimSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrimSpec.Marshal(b, m, deterministic)
}
func (m *TrimSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrimSpec.Merge(m, src)
}
func (m *TrimSpec) XXX_Size() int {
	return xxx_messageInfo_TrimSpec.Size(m)
}
func (m *TrimSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_TrimSpec.DiscardUnknown(m)
}

var xxx_messageInfo_TrimSpec proto.InternalMessageInfo

func (m *TrimSpec) GetFactory() []FactoryID {
	if m != nil {
		return m.Factory
	}
	return nil
}

func (m *TrimSpec) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TrimSpec) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *TrimSpec) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *TrimSpec) GetRefSpecVersion() *Version {
	if m != nil {
		return m.RefSpecVersion
	}
	return nil
}

func (m *TrimSpec) GetMaterials() []*Material {
	if m != nil {
		return m.Materials
	}
	return nil
}

//最新發行版本
type ArouteActive struct {
	Factory     []FactoryID          `protobuf:"varint,1,rep,packed,name=factory,proto3,enum=proto.dm.rs.FactoryID" json:"factory,omitempty" bson:"factory"`
	Id          string               `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty" bson:"id"`
	Mode        ArouteActive_Mode    `protobuf:"varint,3,opt,name=mode,proto3,enum=proto.dm.rs.ArouteActive_Mode" json:"mode,omitempty" bson:"mode"`
	ProductType string               `protobuf:"bytes,4,opt,name=product_type,json=productType,proto3" json:"product_type,omitempty" bson:"productType"`
	ProcessName string               `protobuf:"bytes,5,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty" bson:"processName"`
	StageStatus StageStatus          `protobuf:"varint,6,opt,name=stage_status,json=stageStatus,proto3,enum=proto.dm.rs.StageStatus" json:"stage_status,omitempty" bson:"stageStatus"`
	UpdateAt    *timestamp.Timestamp `protobuf:"bytes,7,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty" bson:"updateAt"`
	UpdateBy    string               `protobuf:"bytes,8,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty" bson:"updateBy"`
}

func (m *ArouteActive) Reset()         { *m = ArouteActive{} }
func (m *ArouteActive) String() string { return proto.CompactTextString(m) }
func (*ArouteActive) ProtoMessage()    {}
func (*ArouteActive) Descriptor() ([]byte, []int) {
	return fileDescriptor_952719e3f4c063a9, []int{9}
}
func (m *ArouteActive) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArouteActive.Unmarshal(m, b)
}
func (m *ArouteActive) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArouteActive.Marshal(b, m, deterministic)
}
func (m *ArouteActive) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArouteActive.Merge(m, src)
}
func (m *ArouteActive) XXX_Size() int {
	return xxx_messageInfo_ArouteActive.Size(m)
}
func (m *ArouteActive) XXX_DiscardUnknown() {
	xxx_messageInfo_ArouteActive.DiscardUnknown(m)
}

var xxx_messageInfo_ArouteActive proto.InternalMessageInfo

func (m *ArouteActive) GetFactory() []FactoryID {
	if m != nil {
		return m.Factory
	}
	return nil
}

func (m *ArouteActive) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ArouteActive) GetMode() ArouteActive_Mode {
	if m != nil {
		return m.Mode
	}
	return ArouteActive_MODE_UNSPECIFIED
}

func (m *ArouteActive) GetProductType() string {
	if m != nil {
		return m.ProductType
	}
	return ""
}

func (m *ArouteActive) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *ArouteActive) GetStageStatus() StageStatus {
	if m != nil {
		return m.StageStatus
	}
	return StageStatus_STAGE_STATUS_UNSPECIFIED
}

func (m *ArouteActive) GetUpdateAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdateAt
	}
	return nil
}

func (m *ArouteActive) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func init() {
	proto.RegisterEnum("proto.dm.rs.Param_Type", Param_Type_name, Param_Type_value)
	proto.RegisterEnum("proto.dm.rs.Version_FlowStatus", Version_FlowStatus_name, Version_FlowStatus_value)
	proto.RegisterEnum("proto.dm.rs.ArouteActive_Mode", ArouteActive_Mode_name, ArouteActive_Mode_value)
	proto.RegisterType((*Param)(nil), "proto.dm.rs.Param")
	proto.RegisterType((*Param_Constraint)(nil), "proto.dm.rs.Param.Constraint")
	proto.RegisterType((*Param_Enum)(nil), "proto.dm.rs.Param.Enum")
	proto.RegisterType((*Material)(nil), "proto.dm.rs.Material")
	proto.RegisterType((*Tool)(nil), "proto.dm.rs.Tool")
	proto.RegisterType((*Property)(nil), "proto.dm.rs.Property")
	proto.RegisterType((*Version)(nil), "proto.dm.rs.Version")
	proto.RegisterType((*Process)(nil), "proto.dm.rs.Process")
	proto.RegisterType((*Process_Config)(nil), "proto.dm.rs.Process.Config")
	proto.RegisterType((*Process_Config_Step)(nil), "proto.dm.rs.Process.Config.Step")
	proto.RegisterType((*Recipe)(nil), "proto.dm.rs.Recipe")
	proto.RegisterType((*Recipe_OptionalFlow)(nil), "proto.dm.rs.Recipe.OptionalFlow")
	proto.RegisterType((*Spec)(nil), "proto.dm.rs.Spec")
	proto.RegisterType((*TrimSpec)(nil), "proto.dm.rs.TrimSpec")
	proto.RegisterType((*ArouteActive)(nil), "proto.dm.rs.ArouteActive")
}

func init() { proto.RegisterFile("recipe.proto", fileDescriptor_952719e3f4c063a9) }

var fileDescriptor_952719e3f4c063a9 = []byte{
	// 1842 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x4f, 0x6f, 0x23, 0x49,
	0x15, 0x1f, 0xdb, 0xed, 0x7f, 0xcf, 0x8e, 0xa7, 0xa7, 0x36, 0x33, 0x31, 0x1e, 0x2d, 0x1d, 0x35,
	0x62, 0x35, 0x5c, 0x6c, 0x94, 0x45, 0x5a, 0x26, 0xda, 0x15, 0x72, 0x12, 0x87, 0x58, 0xe4, 0x9f,
	0x2a, 0x4e, 0x76, 0x06, 0x21, 0x99, 0x8e, 0x5d, 0xf6, 0x36, 0xdb, 0xdd, 0xe5, 0xed, 0x2e, 0x67,
	0x26, 0x5f, 0x02, 0x21, 0x71, 0xe1, 0xc2, 0x81, 0x95, 0xf8, 0x04, 0x7c, 0x01, 0xce, 0x7b, 0xe2,
	0x13, 0x58, 0x7c, 0x02, 0x0e, 0xbe, 0x72, 0x00, 0xd5, 0x9f, 0x6e, 0x57, 0x77, 0x32, 0x99, 0xcc,
	0x0c, 0x70, 0xe2, 0xe4, 0x7a, 0xf5, 0xde, 0xef, 0xf5, 0xab, 0xf7, 0xb7, 0xca, 0x50, 0x0f, 0xc9,
	0xc8, 0x9d, 0x91, 0xf6, 0x2c, 0xa4, 0x8c, 0xa2, 0x9a, 0xf8, 0x69, 0x8f, 0xfd, 0x76, 0x18, 0xb5,
	0x36, 0x04, 0xd1, 0x19, 0xfb, 0x9d, 0x30, 0xea, 0x90, 0x60, 0xee, 0x47, 0x52, 0xaa, 0xf5, 0x43,
	0x9d, 0x31, 0xa2, 0x01, 0x73, 0xdc, 0x80, 0x84, 0x42, 0x64, 0xc8, 0xae, 0x63, 0x65, 0xad, 0xf5,
	0x29, 0x9d, 0x52, 0x29, 0xca, 0x57, 0x6a, 0xd7, 0x9a, 0x52, 0x3a, 0xf5, 0x48, 0x47, 0x50, 0x97,
	0xf3, 0x49, 0x87, 0xb9, 0x3e, 0x89, 0x98, 0xe3, 0xcf, 0xa4, 0x80, 0xfd, 0x8f, 0x22, 0x14, 0x4f,
	0x9d, 0xd0, 0xf1, 0xd1, 0xe7, 0x60, 0x70, 0x75, 0xcd, 0xdc, 0x66, 0xee, 0x59, 0x63, 0x6b, 0xa3,
	0xad, 0x19, 0xd7, 0x16, 0x12, 0xed, 0xc1, 0xf5, 0x8c, 0xec, 0x3c, 0x5c, 0x2e, 0xac, 0xda, 0x65,
	0x44, 0x83, 0x6d, 0x9b, 0x8b, 0xdb, 0x58, 0xa0, 0xd0, 0x0f, 0xc0, 0x98, 0x07, 0x2e, 0x6b, 0xe6,
	0x37, 0x73, 0xcf, 0xaa, 0xba, 0x10, 0xdf, 0xb5, 0xb1, 0x60, 0xa2, 0x5f, 0x40, 0x79, 0x44, 0x02,
	0x16, 0x3a, 0x5e, 0xb3, 0xb0, 0x99, 0x7b, 0x56, 0xdb, 0xfa, 0xf8, 0x96, 0xaf, 0xec, 0xd2, 0x20,
	0x62, 0xa1, 0xe3, 0x06, 0x6c, 0x07, 0x2d, 0x17, 0x56, 0x43, 0xaa, 0x51, 0x38, 0x1b, 0xc7, 0x1a,
	0xd0, 0xcf, 0xa0, 0xe0, 0xbb, 0x41, 0xd3, 0xb8, 0x8f, 0xa2, 0xc6, 0x72, 0x61, 0x81, 0x54, 0xe4,
	0xbb, 0x81, 0x8d, 0x39, 0x52, 0x28, 0x70, 0x5e, 0x37, 0x8b, 0xef, 0xaa, 0xc0, 0x79, 0xcd, 0x15,
	0x38, 0xaf, 0xd1, 0x0b, 0xa8, 0x93, 0x30, 0xa4, 0xe1, 0xd0, 0x77, 0xc2, 0xa9, 0x1b, 0x34, 0x4b,
	0xf7, 0xd1, 0xf4, 0x64, 0xb9, 0xb0, 0x90, 0xd4, 0x24, 0xc0, 0x47, 0x02, 0x6b, 0xe3, 0x9a, 0x46,
	0xf1, 0x58, 0xf0, 0xf8, 0x36, 0xcb, 0x42, 0xe3, 0x6d, 0xb1, 0xe8, 0x05, 0x73, 0x5f, 0x77, 0x33,
	0x17, 0xb7, 0xb1, 0x40, 0xa1, 0x1f, 0x41, 0x89, 0xb2, 0xaf, 0x48, 0x18, 0x35, 0x2b, 0x22, 0x1a,
	0x8f, 0x96, 0x0b, 0x6b, 0x4d, 0x8a, 0xc9, 0x7d, 0x1b, 0x2b, 0x81, 0xd6, 0x0e, 0xc0, 0xca, 0x36,
	0xf4, 0x09, 0x14, 0xaf, 0x1c, 0x6f, 0x2e, 0x73, 0x20, 0xbf, 0x63, 0x2e, 0x17, 0x56, 0x5d, 0xe2,
	0xc4, 0xb6, 0x8d, 0x25, 0x7b, 0xbb, 0xfe, 0xb7, 0x3f, 0x59, 0x0f, 0x7e, 0xf7, 0xad, 0xf5, 0xe0,
	0x0f, 0xdf, 0x5a, 0x0f, 0x5a, 0x9f, 0x83, 0xc1, 0xad, 0x49, 0xa3, 0x8b, 0xf7, 0x44, 0xdb, 0xbf,
	0x06, 0x83, 0xe7, 0x15, 0x6a, 0xc1, 0x93, 0xd3, 0x2e, 0xee, 0x1e, 0x0d, 0x07, 0x2f, 0x4f, 0x7b,
	0xc3, 0xf3, 0xe3, 0xb3, 0xd3, 0xde, 0x6e, 0x7f, 0xbf, 0xdf, 0xdb, 0x33, 0x1f, 0xa0, 0x2a, 0x14,
	0x2f, 0xba, 0x87, 0xe7, 0x3d, 0x33, 0x87, 0xca, 0x50, 0x38, 0xea, 0xbe, 0x30, 0xf3, 0x62, 0xd1,
	0x3f, 0x36, 0x0b, 0x9c, 0x89, 0xbb, 0xc7, 0x3f, 0xef, 0x99, 0x06, 0xaa, 0x80, 0xd1, 0x3b, 0x3e,
	0x3f, 0x32, 0x8b, 0x08, 0xa0, 0x74, 0x32, 0x38, 0xe8, 0xe1, 0x33, 0xb3, 0x94, 0xf9, 0xde, 0xdf,
	0xf3, 0x50, 0x39, 0x72, 0x18, 0x09, 0x5d, 0xc7, 0xe3, 0x59, 0x9b, 0xe4, 0x7c, 0xf5, 0x4d, 0xa9,
	0xfd, 0x09, 0x14, 0x3d, 0x72, 0x45, 0x3c, 0x95, 0xdb, 0xda, 0xb9, 0xc4, 0xb6, 0x8d, 0x25, 0x9b,
	0x2b, 0x0b, 0x1c, 0x9f, 0x88, 0xd4, 0x4e, 0x29, 0xe3, 0xbb, 0x36, 0x16, 0x4c, 0xf4, 0x2b, 0x68,
	0x24, 0x35, 0x2c, 0xca, 0x57, 0x24, 0x70, 0x63, 0xeb, 0x69, 0x2a, 0xc6, 0x89, 0x88, 0xac, 0xb9,
	0xe6, 0x72, 0x61, 0xad, 0xab, 0x3a, 0x88, 0x39, 0x03, 0x61, 0xe1, 0x5a, 0x8a, 0x46, 0xdb, 0x50,
	0x9c, 0xf1, 0xf4, 0x50, 0x49, 0x8d, 0x6e, 0x26, 0x8e, 0x6e, 0xbe, 0x10, 0xb5, 0xb1, 0x84, 0xa0,
	0x6d, 0x58, 0x0b, 0xc9, 0x37, 0x43, 0xd9, 0xa1, 0x86, 0xee, 0x58, 0xa4, 0x73, 0x55, 0xcf, 0xd7,
	0x90, 0x7c, 0x83, 0x05, 0xb7, 0xbf, 0x67, 0xe3, 0xda, 0x8a, 0x1a, 0x67, 0x5c, 0xfc, 0xe7, 0x1c,
	0x18, 0x03, 0x4a, 0x3d, 0xb4, 0x0d, 0x46, 0x48, 0xbd, 0xb8, 0xa5, 0x3c, 0x4e, 0x59, 0xc3, 0x05,
	0x30, 0xf5, 0x52, 0x0d, 0x85, 0x0b, 0xdb, 0x58, 0x60, 0xd0, 0xc7, 0x90, 0x77, 0xc7, 0xca, 0xe5,
	0x6b, 0xcb, 0x85, 0x55, 0x95, 0x22, 0xee, 0xd8, 0xc6, 0x79, 0x77, 0x8c, 0x7e, 0x02, 0x30, 0xfa,
	0x8a, 0x8c, 0xbe, 0x1e, 0x4e, 0x3c, 0x67, 0x2a, 0x5c, 0x5e, 0xd9, 0x79, 0xbc, 0x5c, 0x58, 0x8f,
	0x94, 0x9b, 0x12, 0x9e, 0x8d, 0xab, 0x82, 0xd8, 0xf7, 0x9c, 0x69, 0xc6, 0xce, 0xbf, 0xe4, 0xa0,
	0x72, 0x1a, 0xd2, 0x19, 0x09, 0xd9, 0x75, 0x12, 0xbd, 0xdc, 0x5d, 0xd1, 0x4b, 0xfc, 0x9b, 0x7f,
	0x77, 0xff, 0xfe, 0x14, 0x6a, 0x63, 0x12, 0x8d, 0x42, 0x77, 0xc6, 0x5c, 0x1a, 0xa8, 0x2c, 0xd1,
	0xbc, 0xab, 0x31, 0x6d, 0xac, 0x8b, 0x66, 0xac, 0xfe, 0x6d, 0x09, 0xca, 0x17, 0x24, 0x8c, 0x5c,
	0x1a, 0xa0, 0x33, 0xa8, 0x47, 0xcc, 0x99, 0x92, 0x61, 0xc4, 0x1c, 0x36, 0x8f, 0x94, 0xa3, 0x9b,
	0x29, 0xb3, 0xce, 0xb8, 0xc0, 0x99, 0xe0, 0xeb, 0x9f, 0x8b, 0x56, 0xdb, 0x36, 0xae, 0x69, 0x14,
	0xfa, 0x12, 0x6a, 0x13, 0x8f, 0xbe, 0x8a, 0x75, 0xe6, 0x85, 0x4e, 0x2b, 0xa5, 0x53, 0x7d, 0xbf,
	0xbd, 0xef, 0xd1, 0x57, 0x4a, 0xb5, 0xe6, 0xfc, 0x49, 0xb2, 0x6b, 0x63, 0x58, 0x11, 0xbc, 0x90,
	0x7c, 0xe7, 0x37, 0x34, 0x54, 0x67, 0xd7, 0x3c, 0x25, 0xb6, 0x6d, 0x2c, 0xd9, 0x42, 0xce, 0x0d,
	0x68, 0x28, 0x4a, 0x23, 0x2d, 0xc7, 0xb7, 0xb9, 0x1c, 0xff, 0x45, 0xe7, 0x50, 0x8f, 0xe6, 0x97,
	0xbe, 0xcb, 0x18, 0x19, 0x0f, 0x1d, 0xa6, 0x92, 0xbe, 0xd5, 0x96, 0x33, 0xaf, 0x1d, 0xcf, 0xbc,
	0xf6, 0x20, 0x9e, 0x79, 0xa9, 0xf3, 0xc7, 0xc8, 0x2e, 0xe3, 0xe7, 0x5f, 0x51, 0xe8, 0x53, 0x80,
	0xf9, 0x6c, 0xec, 0x70, 0xa5, 0x97, 0xd7, 0xaa, 0x0a, 0xd6, 0x97, 0x0b, 0xcb, 0x54, 0x03, 0x4d,
	0xf2, 0x76, 0xae, 0x6d, 0x5c, 0x4d, 0xd6, 0xe8, 0x64, 0x05, 0x72, 0x98, 0xea, 0xdb, 0x77, 0x59,
	0x72, 0x53, 0x21, 0xb7, 0xa3, 0x9a, 0xac, 0x11, 0x86, 0x5a, 0x48, 0x3c, 0xe2, 0x44, 0x52, 0x63,
	0xe5, 0xad, 0x1a, 0xb5, 0x00, 0xc4, 0x40, 0xae, 0x12, 0x56, 0x04, 0x3f, 0x99, 0xa2, 0xf8, 0xc9,
	0xaa, 0xd9, 0x93, 0x29, 0x9e, 0x38, 0x59, 0xb2, 0x16, 0x85, 0x41, 0x19, 0x69, 0xc2, 0x66, 0x21,
	0x53, 0x18, 0x94, 0x89, 0xc2, 0xe0, 0x3f, 0x1e, 0xc0, 0x2a, 0x17, 0xd0, 0x53, 0xd8, 0xd8, 0x3f,
	0x3c, 0xf9, 0x72, 0x78, 0x36, 0xe8, 0x0e, 0xce, 0xcf, 0x32, 0xcd, 0x7c, 0x0d, 0xaa, 0xbd, 0x17,
	0xbd, 0xdd, 0xf3, 0xc1, 0x09, 0x7e, 0x69, 0xe6, 0x04, 0xb9, 0xbf, 0xdf, 0xdb, 0x1d, 0xf4, 0x2f,
	0x7a, 0x66, 0x1e, 0xd5, 0xa1, 0xd2, 0x3f, 0xde, 0x3d, 0x10, 0x0d, 0xbd, 0xc0, 0x1b, 0xfa, 0xc5,
	0x49, 0x7f, 0xcf, 0x34, 0x50, 0x0d, 0xca, 0xfd, 0xe3, 0x8b, 0xee, 0x61, 0x7f, 0xcf, 0x2c, 0x66,
	0x0a, 0xe2, 0xf7, 0x45, 0x28, 0x9f, 0x86, 0x74, 0x44, 0xa2, 0xe8, 0x7e, 0x55, 0xfc, 0x85, 0xea,
	0xfa, 0xf9, 0x5b, 0xaa, 0x45, 0x29, 0xba, 0xeb, 0xaa, 0xd3, 0x87, 0xf2, 0x88, 0x06, 0x13, 0x77,
	0x1a, 0x35, 0x0b, 0x9b, 0x85, 0x67, 0xb5, 0x4c, 0xef, 0x56, 0x1a, 0xf8, 0xcc, 0x9f, 0xb8, 0xd3,
	0xd4, 0x1d, 0x46, 0xa2, 0xf8, 0x1d, 0x46, 0xae, 0x5a, 0xdf, 0x15, 0xa0, 0x24, 0xe5, 0x50, 0x07,
	0x2a, 0xbc, 0xe0, 0x5c, 0x1a, 0xf0, 0x32, 0xe6, 0xae, 0xfe, 0x68, 0xb9, 0xb0, 0x1e, 0x26, 0xc5,
	0x2a, 0x38, 0x36, 0x4e, 0x84, 0xd0, 0x73, 0x28, 0x32, 0x4a, 0x3d, 0x5e, 0xa0, 0xdc, 0x88, 0x47,
	0x37, 0xba, 0xab, 0x5e, 0x38, 0x42, 0xd2, 0xc6, 0x12, 0x81, 0x0e, 0xa0, 0x18, 0x31, 0x32, 0x8b,
	0x9a, 0x86, 0x80, 0x6e, 0xde, 0x61, 0x7f, 0xfb, 0x8c, 0x91, 0x99, 0xae, 0x49, 0x00, 0x6d, 0x2c,
	0x15, 0xb4, 0xfe, 0x99, 0x03, 0x83, 0x4b, 0xa0, 0x3e, 0x54, 0x7d, 0x35, 0x55, 0xa5, 0xfd, 0xb5,
	0x4c, 0xbf, 0x8f, 0x67, 0xae, 0x9e, 0x70, 0x09, 0xc2, 0xc6, 0x2b, 0x34, 0xda, 0x87, 0x0a, 0x9f,
	0x6a, 0xe1, 0xea, 0x6c, 0x8f, 0xb3, 0x06, 0x8a, 0x96, 0xad, 0x3b, 0x28, 0x06, 0xd8, 0x38, 0xc1,
	0x22, 0x0c, 0x75, 0x9f, 0x38, 0xd1, 0x3c, 0x24, 0x3e, 0x09, 0x58, 0x1c, 0xac, 0x37, 0xe8, 0xda,
	0x58, 0x2e, 0xac, 0x8f, 0x94, 0x55, 0x1a, 0xc8, 0xc6, 0x29, 0x1d, 0xe9, 0xcc, 0xbb, 0x8b, 0xb2,
	0xff, 0x58, 0x86, 0x92, 0x9c, 0x8f, 0x6a, 0x94, 0xe5, 0xde, 0x34, 0xca, 0x9e, 0x43, 0x7d, 0x16,
	0xd2, 0xf1, 0x7c, 0xc4, 0x86, 0x49, 0x5a, 0xa6, 0x26, 0x83, 0xe2, 0xca, 0x89, 0x5f, 0xd3, 0x28,
	0x5e, 0xd0, 0x31, 0xd4, 0x1d, 0xab, 0xb6, 0xaa, 0xf9, 0x57, 0xf1, 0xf8, 0xb8, 0xae, 0xc6, 0xeb,
	0x31, 0xda, 0x83, 0xf2, 0xc4, 0x19, 0x31, 0x1a, 0x5e, 0x8b, 0xf8, 0x37, 0xb6, 0x9e, 0xa4, 0x5c,
	0xb2, 0x2f, 0x79, 0xfd, 0x3d, 0x3d, 0x75, 0x15, 0xc0, 0xc6, 0x31, 0x14, 0xed, 0x40, 0xf9, 0x4a,
	0x4e, 0x01, 0xd5, 0x77, 0xd7, 0x6f, 0x9b, 0x10, 0xba, 0x0e, 0x25, 0x6e, 0xe3, 0x18, 0x88, 0xbe,
	0x80, 0xc6, 0xcc, 0x09, 0x49, 0xc0, 0x86, 0xd1, 0x8c, 0x8c, 0x56, 0x77, 0x0e, 0x2d, 0x18, 0x92,
	0x7f, 0x36, 0x23, 0x23, 0x7e, 0x8a, 0xba, 0x46, 0x8e, 0xd1, 0x01, 0xf0, 0x53, 0xf1, 0x64, 0x25,
	0x51, 0xb3, 0x2c, 0xa2, 0xbb, 0x7e, 0x5b, 0x2a, 0x67, 0x5c, 0x22, 0x01, 0xd2, 0x25, 0x72, 0x8d,
	0x1c, 0x68, 0x50, 0x31, 0x6b, 0x1d, 0x6f, 0xc8, 0x07, 0x16, 0xbf, 0x39, 0xdf, 0xac, 0x0c, 0x19,
	0xce, 0xf6, 0x89, 0x92, 0xe4, 0x0d, 0x4f, 0xbf, 0x9a, 0x51, 0x6d, 0x3f, 0xb2, 0xf1, 0x5a, 0x8a,
	0x6e, 0xfd, 0x2b, 0x0f, 0x75, 0x1d, 0x79, 0xbf, 0x56, 0xd5, 0x07, 0xe4, 0x4c, 0x18, 0x09, 0x87,
	0xca, 0xd6, 0xa1, 0x80, 0xc8, 0x0c, 0x79, 0xba, 0x5c, 0x58, 0x1b, 0x12, 0x22, 0x64, 0xd4, 0x69,
	0x8f, 0x05, 0xdc, 0xcc, 0x6e, 0xa1, 0x51, 0x56, 0x95, 0x48, 0xb6, 0xc2, 0x5b, 0x7a, 0xe0, 0x1b,
	0x3e, 0x22, 0x73, 0xd1, 0xcc, 0x6e, 0xa1, 0x1d, 0x78, 0xe8, 0x3b, 0xaf, 0x87, 0x21, 0x99, 0x11,
	0xe6, 0xca, 0x66, 0x66, 0x88, 0xd7, 0xc0, 0xf7, 0x96, 0x0b, 0xeb, 0x71, 0xf2, 0x80, 0xc2, 0x2b,
	0xbe, 0x8d, 0x1b, 0xe9, 0x8d, 0x74, 0x58, 0x8b, 0x1f, 0x10, 0xd6, 0x3b, 0xeb, 0xf3, 0xaf, 0x06,
	0x18, 0x3c, 0x8f, 0xfe, 0x5f, 0x9d, 0xff, 0xa5, 0xea, 0x4c, 0x4d, 0x84, 0xf2, 0x07, 0x4d, 0x84,
	0x64, 0xd4, 0x55, 0xde, 0x79, 0xd4, 0x1d, 0x8a, 0x18, 0xf0, 0x1e, 0xef, 0x92, 0xa8, 0x59, 0xbd,
	0x6b, 0x04, 0x68, 0x17, 0xa8, 0x15, 0xc4, 0xc6, 0x1a, 0x3e, 0x7b, 0xf1, 0x28, 0x40, 0x65, 0x10,
	0xba, 0xbe, 0x48, 0x23, 0x2d, 0x6e, 0xb9, 0xf7, 0x8f, 0xdb, 0x5b, 0x5e, 0x3d, 0xef, 0x95, 0x51,
	0xd9, 0x0c, 0x36, 0xee, 0x9f, 0xc1, 0x2f, 0xc1, 0x0c, 0xc9, 0x44, 0xc6, 0xff, 0x3e, 0xf9, 0xa4,
	0x55, 0x79, 0x48, 0x26, 0xdc, 0x2f, 0x17, 0x71, 0x5a, 0x35, 0xd2, 0x1b, 0xe9, 0xf4, 0x28, 0x7d,
	0x48, 0x7a, 0x64, 0xa2, 0xf2, 0x9d, 0x01, 0xf5, 0x6e, 0x48, 0xe7, 0x8c, 0x74, 0x47, 0xcc, 0xbd,
	0x22, 0xff, 0x9b, 0xc8, 0xec, 0x82, 0xe1, 0xd3, 0x71, 0xdc, 0x4f, 0xbf, 0x9f, 0xfa, 0x82, 0x6e,
	0x4d, 0xfb, 0x88, 0x8e, 0x53, 0x37, 0x4b, 0x8e, 0xb2, 0xb1, 0x00, 0x7f, 0x48, 0xa4, 0x24, 0x74,
	0x35, 0x22, 0x8a, 0xb7, 0x40, 0x57, 0xd3, 0xa1, 0xa6, 0x51, 0x37, 0x1e, 0x91, 0xa5, 0xff, 0xc4,
	0x23, 0xf2, 0x10, 0xd4, 0x5b, 0xe6, 0x7e, 0xcf, 0x21, 0xed, 0x2a, 0x27, 0x61, 0xfc, 0xe9, 0x52,
	0x89, 0x97, 0xe8, 0xc7, 0x89, 0xb6, 0xcb, 0x6b, 0xf5, 0xa7, 0xd6, 0x0d, 0x04, 0x7f, 0xb6, 0x54,
	0x92, 0xe5, 0x67, 0x60, 0x70, 0x4f, 0xa3, 0x75, 0x30, 0x8f, 0x4e, 0xf6, 0xb2, 0x7f, 0x28, 0xd5,
	0xa0, 0x7c, 0x74, 0x72, 0x3c, 0x38, 0x38, 0xe4, 0x2f, 0x90, 0x3a, 0x54, 0xba, 0xe2, 0xf9, 0x71,
	0xf8, 0xd2, 0xcc, 0xa7, 0x93, 0x69, 0xe7, 0xf9, 0x2f, 0x3f, 0x9b, 0xba, 0xcc, 0x73, 0x2e, 0xdb,
	0x5f, 0x93, 0x60, 0xec, 0xb4, 0x47, 0xd4, 0x6f, 0xb3, 0x57, 0x1d, 0x41, 0x74, 0x46, 0xd4, 0xf7,
	0x69, 0x10, 0x75, 0xae, 0xb6, 0x3a, 0xf1, 0x1f, 0xaf, 0x9e, 0x13, 0x4c, 0xe5, 0x5f, 0xb5, 0x97,
	0x25, 0xb1, 0xf7, 0xe9, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0x17, 0xe4, 0xd8, 0x0c, 0xf4, 0x15,
	0x00, 0x00,
}
