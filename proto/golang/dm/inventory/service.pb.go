// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package inventory

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xb1, 0x4a, 0x3b, 0x41,
	0x10, 0xc6, 0x49, 0x8a, 0x3f, 0xfc, 0x0f, 0x6c, 0x4e, 0x48, 0x11, 0x83, 0x45, 0xac, 0x4c, 0xb1,
	0x03, 0xb1, 0xb3, 0x10, 0x0d, 0x5a, 0x58, 0x58, 0x88, 0x85, 0x68, 0x13, 0xf6, 0x6e, 0x27, 0xeb,
	0xe2, 0xed, 0x4e, 0xd8, 0xdd, 0xbb, 0x10, 0x8e, 0x6b, 0x7c, 0x05, 0x9f, 0xc2, 0xca, 0x87, 0xf1,
	0x15, 0x7c, 0x10, 0xc9, 0xee, 0x5d, 0x54, 0x04, 0x2b, 0xab, 0xd9, 0xd9, 0x6f, 0xe6, 0xfb, 0x7d,
	0x30, 0xc9, 0x8e, 0x43, 0x5b, 0xa9, 0x1c, 0xd9, 0xd2, 0x92, 0xa7, 0x34, 0x0d, 0x85, 0x09, 0xcd,
	0x94, 0xa9, 0xd0, 0x78, 0xb2, 0xeb, 0xe1, 0x9e, 0x24, 0x92, 0x05, 0x42, 0x90, 0xb2, 0x72, 0x01,
	0xa8, 0x97, 0x7e, 0x1d, 0x17, 0x86, 0xa3, 0x56, 0xe4, 0x4b, 0x05, 0xdc, 0x18, 0xf2, 0xdc, 0x2b,
	0x32, 0xae, 0x55, 0xc7, 0xa1, 0x80, 0xd0, 0xb0, 0xb5, 0xfb, 0x7c, 0xc5, 0x99, 0xe9, 0x6b, 0x3f,
	0xf9, 0x7f, 0xd9, 0xfd, 0xa5, 0x55, 0xb2, 0x7b, 0x26, 0xc4, 0x2d, 0xb7, 0xf8, 0x40, 0xa5, 0xc3,
	0x19, 0xb7, 0x39, 0x09, 0x4c, 0x47, 0xec, 0x67, 0x30, 0x76, 0x55, 0x46, 0xda, 0x70, 0xc0, 0x62,
	0x0a, 0xd6, 0x45, 0x64, 0x17, 0x9b, 0x88, 0xe3, 0xc3, 0xa7, 0xb7, 0xf7, 0xe7, 0xfe, 0xc1, 0x78,
	0xff, 0x0b, 0x7e, 0xd5, 0x59, 0x3b, 0xc8, 0xa2, 0xb9, 0x3b, 0xee, 0x4d, 0xd2, 0x97, 0x5e, 0x32,
	0x38, 0xc7, 0x02, 0x3d, 0xfe, 0x11, 0xfb, 0x2e, 0xb0, 0x6f, 0x26, 0xd7, 0xbf, 0xb3, 0xa1, 0x5e,
	0xf0, 0x7c, 0x23, 0xce, 0x95, 0x68, 0xa0, 0xde, 0x4e, 0xc4, 0xd6, 0x79, 0xb2, 0x5c, 0xe2, 0xdc,
	0x50, 0x03, 0x75, 0xbb, 0xd2, 0xcc, 0x4e, 0xef, 0x4f, 0xa4, 0xf2, 0x05, 0xcf, 0xd8, 0x23, 0x1a,
	0xc1, 0x59, 0x4e, 0x9a, 0xf9, 0x15, 0x84, 0x06, 0x72, 0xd2, 0x9a, 0x8c, 0x83, 0x6a, 0x1a, 0x0f,
	0x06, 0x92, 0x0a, 0x6e, 0xe4, 0xb7, 0x1b, 0x64, 0xff, 0x82, 0x74, 0xf4, 0x11, 0x00, 0x00, 0xff,
	0xff, 0x64, 0x81, 0x76, 0xcd, 0xfe, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// InventoryClient is the client API for Inventory service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type InventoryClient interface {
	// AddWarehouseBarcode 依標示卡入庫.
	// Required field: Barcode, FactoryId, WarehouseId, StorageNo.
	AddWarehouseBarcode(ctx context.Context, in *Mutation, opts ...grpc.CallOption) (*empty.Empty, error)
	// DeleteWarehouseBarcode 依標示卡出庫, 系統將依據標示卡號碼, 將此標示卡從開倉庫出庫.
	// Required field: Barcode.
	DeleteWarehouseBarcode(ctx context.Context, in *Mutation, opts ...grpc.CallOption) (*empty.Empty, error)
}

type inventoryClient struct {
	cc *grpc.ClientConn
}

func NewInventoryClient(cc *grpc.ClientConn) InventoryClient {
	return &inventoryClient{cc}
}

func (c *inventoryClient) AddWarehouseBarcode(ctx context.Context, in *Mutation, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.dm.inventory.Inventory/AddWarehouseBarcode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *inventoryClient) DeleteWarehouseBarcode(ctx context.Context, in *Mutation, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.dm.inventory.Inventory/DeleteWarehouseBarcode", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// InventoryServer is the server API for Inventory service.
type InventoryServer interface {
	// AddWarehouseBarcode 依標示卡入庫.
	// Required field: Barcode, FactoryId, WarehouseId, StorageNo.
	AddWarehouseBarcode(context.Context, *Mutation) (*empty.Empty, error)
	// DeleteWarehouseBarcode 依標示卡出庫, 系統將依據標示卡號碼, 將此標示卡從開倉庫出庫.
	// Required field: Barcode.
	DeleteWarehouseBarcode(context.Context, *Mutation) (*empty.Empty, error)
}

func RegisterInventoryServer(s *grpc.Server, srv InventoryServer) {
	s.RegisterService(&_Inventory_serviceDesc, srv)
}

func _Inventory_AddWarehouseBarcode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Mutation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServer).AddWarehouseBarcode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.inventory.Inventory/AddWarehouseBarcode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServer).AddWarehouseBarcode(ctx, req.(*Mutation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Inventory_DeleteWarehouseBarcode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Mutation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InventoryServer).DeleteWarehouseBarcode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.inventory.Inventory/DeleteWarehouseBarcode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InventoryServer).DeleteWarehouseBarcode(ctx, req.(*Mutation))
	}
	return interceptor(ctx, in, info, handler)
}

var _Inventory_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.dm.inventory.Inventory",
	HandlerType: (*InventoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddWarehouseBarcode",
			Handler:    _Inventory_AddWarehouseBarcode_Handler,
		},
		{
			MethodName: "DeleteWarehouseBarcode",
			Handler:    _Inventory_DeleteWarehouseBarcode_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
