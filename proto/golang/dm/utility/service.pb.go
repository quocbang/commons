// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package utility

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Custom struct {
	Subno                string   `protobuf:"bytes,1,opt,name=subno,proto3" json:"subno,omitempty"`
	Yyyymm               string   `protobuf:"bytes,2,opt,name=yyyymm,proto3" json:"yyyymm,omitempty"`
	Cusno                string   `protobuf:"bytes,3,opt,name=cusno,proto3" json:"cusno,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Custom) Reset()         { *m = Custom{} }
func (m *Custom) String() string { return proto.CompactTextString(m) }
func (*Custom) ProtoMessage()    {}
func (*Custom) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Custom) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Custom.Unmarshal(m, b)
}
func (m *Custom) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Custom.Marshal(b, m, deterministic)
}
func (m *Custom) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Custom.Merge(m, src)
}
func (m *Custom) XXX_Size() int {
	return xxx_messageInfo_Custom.Size(m)
}
func (m *Custom) XXX_DiscardUnknown() {
	xxx_messageInfo_Custom.DiscardUnknown(m)
}

var xxx_messageInfo_Custom proto.InternalMessageInfo

func (m *Custom) GetSubno() string {
	if m != nil {
		return m.Subno
	}
	return ""
}

func (m *Custom) GetYyyymm() string {
	if m != nil {
		return m.Yyyymm
	}
	return ""
}

func (m *Custom) GetCusno() string {
	if m != nil {
		return m.Cusno
	}
	return ""
}

type Qty struct {
	Responsibility       int64    `protobuf:"varint,1,opt,name=responsibility,proto3" json:"responsibility,omitempty"`
	Achievement          int64    `protobuf:"varint,2,opt,name=achievement,proto3" json:"achievement,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Qty) Reset()         { *m = Qty{} }
func (m *Qty) String() string { return proto.CompactTextString(m) }
func (*Qty) ProtoMessage()    {}
func (*Qty) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Qty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Qty.Unmarshal(m, b)
}
func (m *Qty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Qty.Marshal(b, m, deterministic)
}
func (m *Qty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Qty.Merge(m, src)
}
func (m *Qty) XXX_Size() int {
	return xxx_messageInfo_Qty.Size(m)
}
func (m *Qty) XXX_DiscardUnknown() {
	xxx_messageInfo_Qty.DiscardUnknown(m)
}

var xxx_messageInfo_Qty proto.InternalMessageInfo

func (m *Qty) GetResponsibility() int64 {
	if m != nil {
		return m.Responsibility
	}
	return 0
}

func (m *Qty) GetAchievement() int64 {
	if m != nil {
		return m.Achievement
	}
	return 0
}

type SingleItnbr struct {
	Itnbr                string   `protobuf:"bytes,1,opt,name=itnbr,proto3" json:"itnbr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleItnbr) Reset()         { *m = SingleItnbr{} }
func (m *SingleItnbr) String() string { return proto.CompactTextString(m) }
func (*SingleItnbr) ProtoMessage()    {}
func (*SingleItnbr) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *SingleItnbr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleItnbr.Unmarshal(m, b)
}
func (m *SingleItnbr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleItnbr.Marshal(b, m, deterministic)
}
func (m *SingleItnbr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleItnbr.Merge(m, src)
}
func (m *SingleItnbr) XXX_Size() int {
	return xxx_messageInfo_SingleItnbr.Size(m)
}
func (m *SingleItnbr) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleItnbr.DiscardUnknown(m)
}

var xxx_messageInfo_SingleItnbr proto.InternalMessageInfo

func (m *SingleItnbr) GetItnbr() string {
	if m != nil {
		return m.Itnbr
	}
	return ""
}

type SingleNewItnbr struct {
	Itnbr                string   `protobuf:"bytes,1,opt,name=itnbr,proto3" json:"itnbr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SingleNewItnbr) Reset()         { *m = SingleNewItnbr{} }
func (m *SingleNewItnbr) String() string { return proto.CompactTextString(m) }
func (*SingleNewItnbr) ProtoMessage()    {}
func (*SingleNewItnbr) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *SingleNewItnbr) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SingleNewItnbr.Unmarshal(m, b)
}
func (m *SingleNewItnbr) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SingleNewItnbr.Marshal(b, m, deterministic)
}
func (m *SingleNewItnbr) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SingleNewItnbr.Merge(m, src)
}
func (m *SingleNewItnbr) XXX_Size() int {
	return xxx_messageInfo_SingleNewItnbr.Size(m)
}
func (m *SingleNewItnbr) XXX_DiscardUnknown() {
	xxx_messageInfo_SingleNewItnbr.DiscardUnknown(m)
}

var xxx_messageInfo_SingleNewItnbr proto.InternalMessageInfo

func (m *SingleNewItnbr) GetItnbr() string {
	if m != nil {
		return m.Itnbr
	}
	return ""
}

type ItnbrClassification struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItnbrClassification) Reset()         { *m = ItnbrClassification{} }
func (m *ItnbrClassification) String() string { return proto.CompactTextString(m) }
func (*ItnbrClassification) ProtoMessage()    {}
func (*ItnbrClassification) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *ItnbrClassification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItnbrClassification.Unmarshal(m, b)
}
func (m *ItnbrClassification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItnbrClassification.Marshal(b, m, deterministic)
}
func (m *ItnbrClassification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItnbrClassification.Merge(m, src)
}
func (m *ItnbrClassification) XXX_Size() int {
	return xxx_messageInfo_ItnbrClassification.Size(m)
}
func (m *ItnbrClassification) XXX_DiscardUnknown() {
	xxx_messageInfo_ItnbrClassification.DiscardUnknown(m)
}

var xxx_messageInfo_ItnbrClassification proto.InternalMessageInfo

func (m *ItnbrClassification) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Custom)(nil), "proto.dm.utility.Custom")
	proto.RegisterType((*Qty)(nil), "proto.dm.utility.Qty")
	proto.RegisterType((*SingleItnbr)(nil), "proto.dm.utility.SingleItnbr")
	proto.RegisterType((*SingleNewItnbr)(nil), "proto.dm.utility.SingleNewItnbr")
	proto.RegisterType((*ItnbrClassification)(nil), "proto.dm.utility.ItnbrClassification")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 533 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x51, 0x6b, 0x13, 0x4d,
	0x14, 0x25, 0x0d, 0xcd, 0xf7, 0x39, 0xc1, 0x58, 0xa6, 0x36, 0x4d, 0xd7, 0xb6, 0xc4, 0x51, 0x8b,
	0x54, 0x98, 0x91, 0x0a, 0x0a, 0x22, 0x3e, 0x98, 0x4a, 0x10, 0xa4, 0xd2, 0xd4, 0xbe, 0x28, 0x08,
	0xbb, 0x9b, 0xdb, 0xcd, 0x90, 0xdd, 0x99, 0x6d, 0xe6, 0x6e, 0xc2, 0xbe, 0xfa, 0x17, 0x7c, 0xf6,
	0xc1, 0xdf, 0xe4, 0x5f, 0xf0, 0x87, 0xc8, 0xce, 0x6c, 0x62, 0x9a, 0x34, 0x15, 0x7c, 0x9a, 0xdc,
	0x7b, 0x6e, 0xce, 0x39, 0x73, 0x0f, 0x3b, 0xe4, 0xb6, 0x81, 0xd1, 0x58, 0x86, 0xc0, 0xd3, 0x91,
	0x46, 0x4d, 0x37, 0xec, 0xc1, 0xfb, 0x09, 0xcf, 0x50, 0xc6, 0x12, 0x73, 0x6f, 0x37, 0xd2, 0x3a,
	0x8a, 0x41, 0xf8, 0xa9, 0x14, 0xbe, 0x52, 0x1a, 0x7d, 0x94, 0x5a, 0x19, 0x37, 0xef, 0xdd, 0x2b,
	0x51, 0x5b, 0x05, 0xd9, 0x85, 0x80, 0x24, 0xc5, 0xbc, 0x04, 0x77, 0xed, 0x21, 0xfa, 0x89, 0x28,
	0xc9, 0x04, 0xea, 0x21, 0x28, 0x87, 0xb2, 0xf7, 0xa4, 0xd6, 0xc9, 0x0c, 0xea, 0x84, 0xde, 0x25,
	0xeb, 0x26, 0x0b, 0x94, 0x6e, 0x55, 0xda, 0x95, 0xc7, 0xb7, 0x7a, 0xae, 0xa0, 0x4d, 0x52, 0xcb,
	0xf3, 0x3c, 0x4f, 0x92, 0xd6, 0x9a, 0x6d, 0x97, 0x55, 0x31, 0x1d, 0x66, 0x46, 0xe9, 0x56, 0xd5,
	0x4d, 0xdb, 0x82, 0x7d, 0x20, 0xd5, 0x53, 0xcc, 0xe9, 0x01, 0x69, 0x8c, 0xc0, 0xa4, 0x5a, 0x19,
	0x19, 0x58, 0x49, 0xcb, 0x59, 0xed, 0x2d, 0x74, 0x69, 0x9b, 0xd4, 0xfd, 0x70, 0x20, 0x61, 0x0c,
	0x09, 0x28, 0xb4, 0x0a, 0xd5, 0xde, 0x7c, 0x8b, 0x3d, 0x20, 0xf5, 0x33, 0xa9, 0xa2, 0x18, 0xde,
	0xa1, 0x0a, 0x46, 0x85, 0xaa, 0x2c, 0x7e, 0x4c, 0x3d, 0xda, 0x82, 0x1d, 0x90, 0x86, 0x1b, 0x3a,
	0x81, 0xc9, 0x4d, 0x73, 0x2f, 0xc8, 0xa6, 0x85, 0x3b, 0xb1, 0x6f, 0x8c, 0xbc, 0x90, 0xa1, 0x5d,
	0x62, 0xe1, 0xa2, 0x0f, 0x26, 0x1c, 0xc9, 0xb4, 0x28, 0xcb, 0xbf, 0xcc, 0xb7, 0x8e, 0xbe, 0xaf,
	0x93, 0xff, 0xce, 0xdd, 0xf2, 0xe8, 0x17, 0xf2, 0xff, 0x09, 0x4c, 0x3e, 0x16, 0x2b, 0xa4, 0xfb,
	0x7c, 0x31, 0x28, 0x6e, 0x81, 0x1e, 0x5c, 0x66, 0x60, 0xd0, 0xdb, 0x5e, 0x81, 0xb3, 0x9d, 0xaf,
	0x3f, 0x7f, 0x7d, 0x5b, 0xdb, 0x64, 0x8d, 0xab, 0x99, 0xbc, 0xac, 0x1c, 0xd2, 0xcf, 0x84, 0x74,
	0x06, 0x10, 0x0e, 0x9d, 0x42, 0x93, 0xbb, 0x68, 0xf9, 0x34, 0x5a, 0xfe, 0xb6, 0x88, 0xd6, 0x5b,
	0xd1, 0x67, 0x7b, 0x96, 0x78, 0x9b, 0xd1, 0xab, 0xc4, 0x22, 0x02, 0x2c, 0xc8, 0xcf, 0x49, 0xfd,
	0x18, 0x62, 0x40, 0xf8, 0x37, 0xf6, 0xa6, 0x65, 0xdf, 0x38, 0x5c, 0xb0, 0x4d, 0x53, 0x52, 0xef,
	0x02, 0xce, 0xb6, 0xbf, 0xb7, 0x7c, 0xed, 0xb9, 0x10, 0xbd, 0xf6, 0x2a, 0x78, 0x4a, 0xc0, 0xda,
	0x56, 0xc7, 0x63, 0x5b, 0x33, 0x1d, 0x55, 0x42, 0xd3, 0x8b, 0xfc, 0xa8, 0x90, 0xfb, 0x5d, 0xc0,
	0x6b, 0xe2, 0x3c, 0xfe, 0x93, 0xdb, 0xdf, 0x8c, 0x3c, 0x5a, 0x86, 0xaf, 0x21, 0x64, 0xcf, 0xad,
	0x9b, 0xa7, 0xec, 0xc9, 0xcc, 0x8d, 0xbc, 0x51, 0x76, 0xea, 0x71, 0x40, 0xee, 0x74, 0x01, 0xdd,
	0xd7, 0x75, 0x86, 0xfd, 0x4b, 0xcc, 0x69, 0x6b, 0x59, 0xd1, 0xe1, 0xde, 0xd6, 0x32, 0x72, 0x8a,
	0x39, 0x7b, 0x68, 0xb5, 0xf7, 0xd9, 0xce, 0x4c, 0x3b, 0x9c, 0xe3, 0x2b, 0x95, 0xde, 0xbc, 0xfe,
	0xf4, 0x2a, 0x92, 0x18, 0xfb, 0x01, 0x1f, 0x82, 0xea, 0xfb, 0x3c, 0xd4, 0x09, 0xc7, 0x89, 0xb0,
	0x85, 0x08, 0x75, 0x92, 0x68, 0x65, 0xc4, 0xf8, 0xc8, 0xbd, 0x0f, 0x22, 0xd2, 0xb1, 0xaf, 0xa2,
	0xb9, 0x07, 0x21, 0xa8, 0x59, 0xe0, 0xd9, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdd, 0xf8, 0x1a,
	0x93, 0x87, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UtilityClient is the client API for Utility service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UtilityClient interface {
	// NewToken 新增token.
	NewToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*Token, error)
	// CheckToken 檢查token.
	CheckToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// DeleteToken 刪除token.
	DeleteToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	// GetNewItnbr 新舊成代轉換.
	GetNewItnbr(ctx context.Context, in *SingleItnbr, opts ...grpc.CallOption) (*SingleNewItnbr, error)
	// GetItnbrClassificationDescription 成代分類別說明.
	GetItnbrClassificationDescription(ctx context.Context, in *SingleItnbr, opts ...grpc.CallOption) (*ItnbrClassification, error)
	// GetCustomStdqty 客戶責任條數.
	GetCustomStdqty(ctx context.Context, in *Custom, opts ...grpc.CallOption) (*Qty, error)
}

type utilityClient struct {
	cc *grpc.ClientConn
}

func NewUtilityClient(cc *grpc.ClientConn) UtilityClient {
	return &utilityClient{cc}
}

func (c *utilityClient) NewToken(ctx context.Context, in *TokenRequest, opts ...grpc.CallOption) (*Token, error) {
	out := new(Token)
	err := c.cc.Invoke(ctx, "/proto.dm.utility.Utility/NewToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityClient) CheckToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.dm.utility.Utility/CheckToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityClient) DeleteToken(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.dm.utility.Utility/DeleteToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityClient) GetNewItnbr(ctx context.Context, in *SingleItnbr, opts ...grpc.CallOption) (*SingleNewItnbr, error) {
	out := new(SingleNewItnbr)
	err := c.cc.Invoke(ctx, "/proto.dm.utility.Utility/GetNewItnbr", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityClient) GetItnbrClassificationDescription(ctx context.Context, in *SingleItnbr, opts ...grpc.CallOption) (*ItnbrClassification, error) {
	out := new(ItnbrClassification)
	err := c.cc.Invoke(ctx, "/proto.dm.utility.Utility/GetItnbrClassificationDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityClient) GetCustomStdqty(ctx context.Context, in *Custom, opts ...grpc.CallOption) (*Qty, error) {
	out := new(Qty)
	err := c.cc.Invoke(ctx, "/proto.dm.utility.Utility/GetCustomStdqty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UtilityServer is the server API for Utility service.
type UtilityServer interface {
	// NewToken 新增token.
	NewToken(context.Context, *TokenRequest) (*Token, error)
	// CheckToken 檢查token.
	CheckToken(context.Context, *empty.Empty) (*empty.Empty, error)
	// DeleteToken 刪除token.
	DeleteToken(context.Context, *empty.Empty) (*empty.Empty, error)
	// GetNewItnbr 新舊成代轉換.
	GetNewItnbr(context.Context, *SingleItnbr) (*SingleNewItnbr, error)
	// GetItnbrClassificationDescription 成代分類別說明.
	GetItnbrClassificationDescription(context.Context, *SingleItnbr) (*ItnbrClassification, error)
	// GetCustomStdqty 客戶責任條數.
	GetCustomStdqty(context.Context, *Custom) (*Qty, error)
}

func RegisterUtilityServer(s *grpc.Server, srv UtilityServer) {
	s.RegisterService(&_Utility_serviceDesc, srv)
}

func _Utility_NewToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServer).NewToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.utility.Utility/NewToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServer).NewToken(ctx, req.(*TokenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Utility_CheckToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServer).CheckToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.utility.Utility/CheckToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServer).CheckToken(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Utility_DeleteToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServer).DeleteToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.utility.Utility/DeleteToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServer).DeleteToken(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Utility_GetNewItnbr_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleItnbr)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServer).GetNewItnbr(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.utility.Utility/GetNewItnbr",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServer).GetNewItnbr(ctx, req.(*SingleItnbr))
	}
	return interceptor(ctx, in, info, handler)
}

func _Utility_GetItnbrClassificationDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleItnbr)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServer).GetItnbrClassificationDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.utility.Utility/GetItnbrClassificationDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServer).GetItnbrClassificationDescription(ctx, req.(*SingleItnbr))
	}
	return interceptor(ctx, in, info, handler)
}

func _Utility_GetCustomStdqty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Custom)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServer).GetCustomStdqty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.utility.Utility/GetCustomStdqty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServer).GetCustomStdqty(ctx, req.(*Custom))
	}
	return interceptor(ctx, in, info, handler)
}

var _Utility_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.dm.utility.Utility",
	HandlerType: (*UtilityServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewToken",
			Handler:    _Utility_NewToken_Handler,
		},
		{
			MethodName: "CheckToken",
			Handler:    _Utility_CheckToken_Handler,
		},
		{
			MethodName: "DeleteToken",
			Handler:    _Utility_DeleteToken_Handler,
		},
		{
			MethodName: "GetNewItnbr",
			Handler:    _Utility_GetNewItnbr_Handler,
		},
		{
			MethodName: "GetItnbrClassificationDescription",
			Handler:    _Utility_GetItnbrClassificationDescription_Handler,
		},
		{
			MethodName: "GetCustomStdqty",
			Handler:    _Utility_GetCustomStdqty_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
