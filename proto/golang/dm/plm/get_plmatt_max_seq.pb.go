// Code generated by protoc-gen-go. DO NOT EDIT.
// source: get_plmatt_max_seq.proto

package plm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetPlmattMaxSeqRequest struct {
	Plmmasno             int32    `protobuf:"varint,1,opt,name=plmmasno,proto3" json:"plmmasno,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlmattMaxSeqRequest) Reset()         { *m = GetPlmattMaxSeqRequest{} }
func (m *GetPlmattMaxSeqRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlmattMaxSeqRequest) ProtoMessage()    {}
func (*GetPlmattMaxSeqRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ea8b67ffde01490, []int{0}
}

func (m *GetPlmattMaxSeqRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlmattMaxSeqRequest.Unmarshal(m, b)
}
func (m *GetPlmattMaxSeqRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlmattMaxSeqRequest.Marshal(b, m, deterministic)
}
func (m *GetPlmattMaxSeqRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlmattMaxSeqRequest.Merge(m, src)
}
func (m *GetPlmattMaxSeqRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlmattMaxSeqRequest.Size(m)
}
func (m *GetPlmattMaxSeqRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlmattMaxSeqRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlmattMaxSeqRequest proto.InternalMessageInfo

func (m *GetPlmattMaxSeqRequest) GetPlmmasno() int32 {
	if m != nil {
		return m.Plmmasno
	}
	return 0
}

type GetPlmattMaxSeqReply struct {
	Seq                  int32    `protobuf:"varint,1,opt,name=seq,proto3" json:"seq,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlmattMaxSeqReply) Reset()         { *m = GetPlmattMaxSeqReply{} }
func (m *GetPlmattMaxSeqReply) String() string { return proto.CompactTextString(m) }
func (*GetPlmattMaxSeqReply) ProtoMessage()    {}
func (*GetPlmattMaxSeqReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_4ea8b67ffde01490, []int{1}
}

func (m *GetPlmattMaxSeqReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlmattMaxSeqReply.Unmarshal(m, b)
}
func (m *GetPlmattMaxSeqReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlmattMaxSeqReply.Marshal(b, m, deterministic)
}
func (m *GetPlmattMaxSeqReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlmattMaxSeqReply.Merge(m, src)
}
func (m *GetPlmattMaxSeqReply) XXX_Size() int {
	return xxx_messageInfo_GetPlmattMaxSeqReply.Size(m)
}
func (m *GetPlmattMaxSeqReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlmattMaxSeqReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlmattMaxSeqReply proto.InternalMessageInfo

func (m *GetPlmattMaxSeqReply) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func init() {
	proto.RegisterType((*GetPlmattMaxSeqRequest)(nil), "proto.dm.plm.GetPlmattMaxSeqRequest")
	proto.RegisterType((*GetPlmattMaxSeqReply)(nil), "proto.dm.plm.GetPlmattMaxSeqReply")
}

func init() { proto.RegisterFile("get_plmatt_max_seq.proto", fileDescriptor_4ea8b67ffde01490) }

var fileDescriptor_4ea8b67ffde01490 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x48, 0x4f, 0x2d, 0x89,
	0x2f, 0xc8, 0xc9, 0x4d, 0x2c, 0x29, 0x89, 0xcf, 0x4d, 0xac, 0x88, 0x2f, 0x4e, 0x2d, 0xd4, 0x2b,
	0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x01, 0x53, 0x7a, 0x29, 0xb9, 0x7a, 0x05, 0x39, 0xb9, 0x4a,
	0x26, 0x5c, 0x62, 0xee, 0xa9, 0x25, 0x01, 0x60, 0x85, 0xbe, 0x89, 0x15, 0xc1, 0xa9, 0x85, 0x41,
	0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42, 0x52, 0x5c, 0x1c, 0x05, 0x39, 0xb9, 0xb9, 0x89, 0xc5,
	0x79, 0xf9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x70, 0xbe, 0x92, 0x06, 0x97, 0x08, 0x86,
	0xae, 0x82, 0x9c, 0x4a, 0x21, 0x01, 0x2e, 0xe6, 0xe2, 0xd4, 0x42, 0xa8, 0x72, 0x10, 0xd3, 0xc9,
	0x2a, 0xca, 0x22, 0x3d, 0xb3, 0x24, 0x27, 0x31, 0x49, 0x2f, 0x3b, 0x35, 0x2f, 0x25, 0x51, 0x2f,
	0x39, 0x3f, 0x57, 0xaf, 0xa4, 0x5c, 0x1f, 0xcc, 0xd1, 0x4f, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x2b,
	0xd6, 0x2f, 0x33, 0xd2, 0x07, 0x3b, 0x4a, 0x3f, 0x3d, 0x3f, 0x27, 0x31, 0x2f, 0x5d, 0x3f, 0x25,
	0x57, 0xbf, 0x20, 0x27, 0x37, 0x89, 0x0d, 0x2c, 0x68, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x80,
	0x6f, 0x18, 0x44, 0xcc, 0x00, 0x00, 0x00,
}
