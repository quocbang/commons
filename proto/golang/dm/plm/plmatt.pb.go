// Code generated by protoc-gen-go. DO NOT EDIT.
// source: plmatt.proto

package plm

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlmattRequest struct {
	Data                 *Plmatt  `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlmattRequest) Reset()         { *m = PlmattRequest{} }
func (m *PlmattRequest) String() string { return proto.CompactTextString(m) }
func (*PlmattRequest) ProtoMessage()    {}
func (*PlmattRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2db36940daf3f5a, []int{0}
}

func (m *PlmattRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlmattRequest.Unmarshal(m, b)
}
func (m *PlmattRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlmattRequest.Marshal(b, m, deterministic)
}
func (m *PlmattRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlmattRequest.Merge(m, src)
}
func (m *PlmattRequest) XXX_Size() int {
	return xxx_messageInfo_PlmattRequest.Size(m)
}
func (m *PlmattRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PlmattRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PlmattRequest proto.InternalMessageInfo

func (m *PlmattRequest) GetData() *Plmatt {
	if m != nil {
		return m.Data
	}
	return nil
}

type PlmattReply struct {
	RowsAffect           int64    `protobuf:"varint,1,opt,name=rows_affect,json=rowsAffect,proto3" json:"rows_affect,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlmattReply) Reset()         { *m = PlmattReply{} }
func (m *PlmattReply) String() string { return proto.CompactTextString(m) }
func (*PlmattReply) ProtoMessage()    {}
func (*PlmattReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2db36940daf3f5a, []int{1}
}

func (m *PlmattReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlmattReply.Unmarshal(m, b)
}
func (m *PlmattReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlmattReply.Marshal(b, m, deterministic)
}
func (m *PlmattReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlmattReply.Merge(m, src)
}
func (m *PlmattReply) XXX_Size() int {
	return xxx_messageInfo_PlmattReply.Size(m)
}
func (m *PlmattReply) XXX_DiscardUnknown() {
	xxx_messageInfo_PlmattReply.DiscardUnknown(m)
}

var xxx_messageInfo_PlmattReply proto.InternalMessageInfo

func (m *PlmattReply) GetRowsAffect() int64 {
	if m != nil {
		return m.RowsAffect
	}
	return 0
}

type Plmatt struct {
	No                   int32    `protobuf:"varint,1,opt,name=no,proto3" json:"no,omitempty"`
	Plmmasno             int32    `protobuf:"varint,2,opt,name=plmmasno,proto3" json:"plmmasno,omitempty"`
	Seq                  int32    `protobuf:"varint,3,opt,name=seq,proto3" json:"seq,omitempty"`
	Fname                string   `protobuf:"bytes,4,opt,name=fname,proto3" json:"fname,omitempty"`
	Nfname               string   `protobuf:"bytes,5,opt,name=nfname,proto3" json:"nfname,omitempty"`
	Extension            string   `protobuf:"bytes,6,opt,name=extension,proto3" json:"extension,omitempty"`
	Ver                  int32    `protobuf:"varint,7,opt,name=ver,proto3" json:"ver,omitempty"`
	Status               string   `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Indat                string   `protobuf:"bytes,9,opt,name=indat,proto3" json:"indat,omitempty"`
	Intime               string   `protobuf:"bytes,10,opt,name=intime,proto3" json:"intime,omitempty"`
	Usrno                string   `protobuf:"bytes,11,opt,name=usrno,proto3" json:"usrno,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Plmatt) Reset()         { *m = Plmatt{} }
func (m *Plmatt) String() string { return proto.CompactTextString(m) }
func (*Plmatt) ProtoMessage()    {}
func (*Plmatt) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2db36940daf3f5a, []int{2}
}

func (m *Plmatt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plmatt.Unmarshal(m, b)
}
func (m *Plmatt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plmatt.Marshal(b, m, deterministic)
}
func (m *Plmatt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plmatt.Merge(m, src)
}
func (m *Plmatt) XXX_Size() int {
	return xxx_messageInfo_Plmatt.Size(m)
}
func (m *Plmatt) XXX_DiscardUnknown() {
	xxx_messageInfo_Plmatt.DiscardUnknown(m)
}

var xxx_messageInfo_Plmatt proto.InternalMessageInfo

func (m *Plmatt) GetNo() int32 {
	if m != nil {
		return m.No
	}
	return 0
}

func (m *Plmatt) GetPlmmasno() int32 {
	if m != nil {
		return m.Plmmasno
	}
	return 0
}

func (m *Plmatt) GetSeq() int32 {
	if m != nil {
		return m.Seq
	}
	return 0
}

func (m *Plmatt) GetFname() string {
	if m != nil {
		return m.Fname
	}
	return ""
}

func (m *Plmatt) GetNfname() string {
	if m != nil {
		return m.Nfname
	}
	return ""
}

func (m *Plmatt) GetExtension() string {
	if m != nil {
		return m.Extension
	}
	return ""
}

func (m *Plmatt) GetVer() int32 {
	if m != nil {
		return m.Ver
	}
	return 0
}

func (m *Plmatt) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Plmatt) GetIndat() string {
	if m != nil {
		return m.Indat
	}
	return ""
}

func (m *Plmatt) GetIntime() string {
	if m != nil {
		return m.Intime
	}
	return ""
}

func (m *Plmatt) GetUsrno() string {
	if m != nil {
		return m.Usrno
	}
	return ""
}

func init() {
	proto.RegisterType((*PlmattRequest)(nil), "proto.dm.plm.PlmattRequest")
	proto.RegisterType((*PlmattReply)(nil), "proto.dm.plm.PlmattReply")
	proto.RegisterType((*Plmatt)(nil), "proto.dm.plm.Plmatt")
}

func init() { proto.RegisterFile("plmatt.proto", fileDescriptor_e2db36940daf3f5a) }

var fileDescriptor_e2db36940daf3f5a = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x4d, 0x4f, 0x02, 0x31,
	0x10, 0x40, 0xc3, 0x02, 0x2b, 0xcc, 0xa2, 0x31, 0x0d, 0x31, 0x8d, 0x31, 0x91, 0x70, 0xe2, 0xd4,
	0x4d, 0xf0, 0xa2, 0xde, 0xf4, 0x17, 0x98, 0x3d, 0x7a, 0x31, 0x85, 0x2d, 0x64, 0x63, 0x3b, 0x5d,
	0xb6, 0x03, 0xe8, 0xcd, 0x9f, 0x6e, 0x3a, 0xc5, 0x8f, 0xd3, 0xee, 0x7b, 0x7d, 0x33, 0x4d, 0x0a,
	0x93, 0xd6, 0x3a, 0x4d, 0xa4, 0xda, 0xce, 0x93, 0x17, 0x13, 0xfe, 0xa8, 0xda, 0xa9, 0xd6, 0xba,
	0xf9, 0x03, 0x9c, 0xbf, 0xf0, 0x69, 0x65, 0x76, 0x7b, 0x13, 0x48, 0x2c, 0x60, 0x50, 0x6b, 0xd2,
	0xb2, 0x37, 0xeb, 0x2d, 0x8a, 0xe5, 0x54, 0xfd, 0xaf, 0xd5, 0x29, 0xe5, 0x62, 0xae, 0xa0, 0xf8,
	0x19, 0x6d, 0xed, 0xa7, 0xb8, 0x85, 0xa2, 0xf3, 0xc7, 0xf0, 0xa6, 0x37, 0x1b, 0xb3, 0x26, 0x9e,
	0xef, 0x57, 0x10, 0xd5, 0x13, 0x9b, 0xf9, 0x57, 0x06, 0x79, 0x1a, 0x10, 0x17, 0x90, 0xa1, 0xe7,
	0x64, 0x58, 0x65, 0xe8, 0xc5, 0x35, 0x8c, 0x5a, 0xeb, 0x9c, 0x0e, 0xe8, 0x65, 0xc6, 0xf6, 0x97,
	0xc5, 0x25, 0xf4, 0x83, 0xd9, 0xc9, 0x3e, 0xeb, 0xf8, 0x2b, 0xa6, 0x30, 0xdc, 0xa0, 0x76, 0x46,
	0x0e, 0x66, 0xbd, 0xc5, 0xb8, 0x4a, 0x20, 0xae, 0x20, 0xc7, 0xa4, 0x87, 0xac, 0x4f, 0x24, 0x6e,
	0x60, 0x6c, 0x3e, 0xc8, 0x60, 0x68, 0x3c, 0xca, 0x9c, 0x8f, 0xfe, 0x44, 0xdc, 0x7e, 0x30, 0x9d,
	0x3c, 0x4b, 0xdb, 0x0f, 0xa6, 0x8b, 0x7b, 0x02, 0x69, 0xda, 0x07, 0x39, 0x4a, 0x7b, 0x12, 0xc5,
	0x5b, 0x1b, 0xac, 0x35, 0xc9, 0x71, 0xba, 0x95, 0x21, 0xd6, 0x0d, 0x52, 0xe3, 0x8c, 0x84, 0x54,
	0x27, 0x8a, 0xf5, 0x3e, 0x74, 0xe8, 0x65, 0x91, 0x6a, 0x86, 0xe7, 0xc7, 0xd7, 0xfb, 0x6d, 0x43,
	0x56, 0xaf, 0xd4, 0xbb, 0xc1, 0x5a, 0xab, 0xb5, 0x77, 0x8a, 0x8e, 0x25, 0x43, 0xb9, 0xf6, 0xce,
	0x79, 0x0c, 0xe5, 0x61, 0x59, 0xf2, 0xa3, 0x97, 0x5b, 0x6f, 0x35, 0x6e, 0xcb, 0xda, 0x95, 0xad,
	0x75, 0xab, 0x9c, 0xe5, 0xdd, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb7, 0xab, 0xba, 0x96, 0xce,
	0x01, 0x00, 0x00,
}
