// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package sec

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//代號
type Id struct {
	Subno                string   `protobuf:"bytes,1,opt,name=subno,proto3" json:"subno,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{0}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetSubno() string {
	if m != nil {
		return m.Subno
	}
	return ""
}

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

//描述
type Description struct {
	Description          string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Description) Reset()         { *m = Description{} }
func (m *Description) String() string { return proto.CompactTextString(m) }
func (*Description) ProtoMessage()    {}
func (*Description) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{1}
}

func (m *Description) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Description.Unmarshal(m, b)
}
func (m *Description) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Description.Marshal(b, m, deterministic)
}
func (m *Description) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Description.Merge(m, src)
}
func (m *Description) XXX_Size() int {
	return xxx_messageInfo_Description.Size(m)
}
func (m *Description) XXX_DiscardUnknown() {
	xxx_messageInfo_Description.DiscardUnknown(m)
}

var xxx_messageInfo_Description proto.InternalMessageInfo

func (m *Description) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

//代號
type UserId struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserId) Reset()         { *m = UserId{} }
func (m *UserId) String() string { return proto.CompactTextString(m) }
func (*UserId) ProtoMessage()    {}
func (*UserId) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{2}
}

func (m *UserId) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserId.Unmarshal(m, b)
}
func (m *UserId) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserId.Marshal(b, m, deterministic)
}
func (m *UserId) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserId.Merge(m, src)
}
func (m *UserId) XXX_Size() int {
	return xxx_messageInfo_UserId.Size(m)
}
func (m *UserId) XXX_DiscardUnknown() {
	xxx_messageInfo_UserId.DiscardUnknown(m)
}

var xxx_messageInfo_UserId proto.InternalMessageInfo

func (m *UserId) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type Permission struct {
	Subno                string   `protobuf:"bytes,1,opt,name=subno,proto3" json:"subno,omitempty"`
	Usrno                string   `protobuf:"bytes,2,opt,name=usrno,proto3" json:"usrno,omitempty"`
	Prgno                string   `protobuf:"bytes,3,opt,name=prgno,proto3" json:"prgno,omitempty"`
	Seq2                 string   `protobuf:"bytes,4,opt,name=seq2,proto3" json:"seq2,omitempty"`
	Stat                 string   `protobuf:"bytes,5,opt,name=stat,proto3" json:"stat,omitempty"`
	Mana                 string   `protobuf:"bytes,6,opt,name=mana,proto3" json:"mana,omitempty"`
	Manu                 string   `protobuf:"bytes,7,opt,name=manu,proto3" json:"manu,omitempty"`
	Mand                 string   `protobuf:"bytes,8,opt,name=mand,proto3" json:"mand,omitempty"`
	Manq                 string   `protobuf:"bytes,9,opt,name=manq,proto3" json:"manq,omitempty"`
	Manp                 string   `protobuf:"bytes,10,opt,name=manp,proto3" json:"manp,omitempty"`
	Dutyn                string   `protobuf:"bytes,11,opt,name=dutyn,proto3" json:"dutyn,omitempty"`
	Ftype                string   `protobuf:"bytes,12,opt,name=ftype,proto3" json:"ftype,omitempty"`
	Cycle                string   `protobuf:"bytes,13,opt,name=cycle,proto3" json:"cycle,omitempty"`
	Prgna                string   `protobuf:"bytes,14,opt,name=prgna,proto3" json:"prgna,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Permission) Reset()         { *m = Permission{} }
func (m *Permission) String() string { return proto.CompactTextString(m) }
func (*Permission) ProtoMessage()    {}
func (*Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{3}
}

func (m *Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permission.Unmarshal(m, b)
}
func (m *Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permission.Marshal(b, m, deterministic)
}
func (m *Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permission.Merge(m, src)
}
func (m *Permission) XXX_Size() int {
	return xxx_messageInfo_Permission.Size(m)
}
func (m *Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Permission proto.InternalMessageInfo

func (m *Permission) GetSubno() string {
	if m != nil {
		return m.Subno
	}
	return ""
}

func (m *Permission) GetUsrno() string {
	if m != nil {
		return m.Usrno
	}
	return ""
}

func (m *Permission) GetPrgno() string {
	if m != nil {
		return m.Prgno
	}
	return ""
}

func (m *Permission) GetSeq2() string {
	if m != nil {
		return m.Seq2
	}
	return ""
}

func (m *Permission) GetStat() string {
	if m != nil {
		return m.Stat
	}
	return ""
}

func (m *Permission) GetMana() string {
	if m != nil {
		return m.Mana
	}
	return ""
}

func (m *Permission) GetManu() string {
	if m != nil {
		return m.Manu
	}
	return ""
}

func (m *Permission) GetMand() string {
	if m != nil {
		return m.Mand
	}
	return ""
}

func (m *Permission) GetManq() string {
	if m != nil {
		return m.Manq
	}
	return ""
}

func (m *Permission) GetManp() string {
	if m != nil {
		return m.Manp
	}
	return ""
}

func (m *Permission) GetDutyn() string {
	if m != nil {
		return m.Dutyn
	}
	return ""
}

func (m *Permission) GetFtype() string {
	if m != nil {
		return m.Ftype
	}
	return ""
}

func (m *Permission) GetCycle() string {
	if m != nil {
		return m.Cycle
	}
	return ""
}

func (m *Permission) GetPrgna() string {
	if m != nil {
		return m.Prgna
	}
	return ""
}

type Permissions struct {
	Dataset              []*Permission `protobuf:"bytes,1,rep,name=dataset,proto3" json:"dataset,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Permissions) Reset()         { *m = Permissions{} }
func (m *Permissions) String() string { return proto.CompactTextString(m) }
func (*Permissions) ProtoMessage()    {}
func (*Permissions) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{4}
}

func (m *Permissions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Permissions.Unmarshal(m, b)
}
func (m *Permissions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Permissions.Marshal(b, m, deterministic)
}
func (m *Permissions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Permissions.Merge(m, src)
}
func (m *Permissions) XXX_Size() int {
	return xxx_messageInfo_Permissions.Size(m)
}
func (m *Permissions) XXX_DiscardUnknown() {
	xxx_messageInfo_Permissions.DiscardUnknown(m)
}

var xxx_messageInfo_Permissions proto.InternalMessageInfo

func (m *Permissions) GetDataset() []*Permission {
	if m != nil {
		return m.Dataset
	}
	return nil
}

//數量
type CountReply struct {
	Count                int64    `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountReply) Reset()         { *m = CountReply{} }
func (m *CountReply) String() string { return proto.CompactTextString(m) }
func (*CountReply) ProtoMessage()    {}
func (*CountReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{5}
}

func (m *CountReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountReply.Unmarshal(m, b)
}
func (m *CountReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountReply.Marshal(b, m, deterministic)
}
func (m *CountReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountReply.Merge(m, src)
}
func (m *CountReply) XXX_Size() int {
	return xxx_messageInfo_CountReply.Size(m)
}
func (m *CountReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CountReply.DiscardUnknown(m)
}

var xxx_messageInfo_CountReply proto.InternalMessageInfo

func (m *CountReply) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

//異動資料數量
type AffectedReply struct {
	RowsAffected         int64    `protobuf:"varint,1,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AffectedReply) Reset()         { *m = AffectedReply{} }
func (m *AffectedReply) String() string { return proto.CompactTextString(m) }
func (*AffectedReply) ProtoMessage()    {}
func (*AffectedReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a0b84a42fa06f626, []int{6}
}

func (m *AffectedReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AffectedReply.Unmarshal(m, b)
}
func (m *AffectedReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AffectedReply.Marshal(b, m, deterministic)
}
func (m *AffectedReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AffectedReply.Merge(m, src)
}
func (m *AffectedReply) XXX_Size() int {
	return xxx_messageInfo_AffectedReply.Size(m)
}
func (m *AffectedReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AffectedReply.DiscardUnknown(m)
}

var xxx_messageInfo_AffectedReply proto.InternalMessageInfo

func (m *AffectedReply) GetRowsAffected() int64 {
	if m != nil {
		return m.RowsAffected
	}
	return 0
}

func init() {
	proto.RegisterType((*Id)(nil), "proto.dm.sec.Id")
	proto.RegisterType((*Description)(nil), "proto.dm.sec.Description")
	proto.RegisterType((*UserId)(nil), "proto.dm.sec.UserId")
	proto.RegisterType((*Permission)(nil), "proto.dm.sec.Permission")
	proto.RegisterType((*Permissions)(nil), "proto.dm.sec.Permissions")
	proto.RegisterType((*CountReply)(nil), "proto.dm.sec.CountReply")
	proto.RegisterType((*AffectedReply)(nil), "proto.dm.sec.AffectedReply")
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_a0b84a42fa06f626) }

var fileDescriptor_a0b84a42fa06f626 = []byte{
	// 571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xc1, 0x4e, 0xdc, 0x3c,
	0x10, 0xc7, 0xc5, 0x2e, 0x2c, 0x30, 0x21, 0x7c, 0x7c, 0x2e, 0x2a, 0x86, 0x72, 0x80, 0xf4, 0x82,
	0x7a, 0x88, 0xa5, 0x6d, 0x0f, 0x55, 0x6f, 0x14, 0x50, 0x44, 0xa5, 0x4a, 0xd5, 0x56, 0x5c, 0x7a,
	0x41, 0xde, 0x78, 0x88, 0xd2, 0x6e, 0xec, 0x60, 0x3b, 0xa0, 0x55, 0xd5, 0x4b, 0x5f, 0xa1, 0x6f,
	0xd2, 0x63, 0x5f, 0xa3, 0xaf, 0xd0, 0x07, 0xa9, 0x32, 0x0e, 0xbb, 0x0b, 0xea, 0x85, 0x53, 0xf2,
	0xff, 0x65, 0xf2, 0xf3, 0xd8, 0x1a, 0x43, 0xec, 0xd0, 0xde, 0x94, 0x39, 0xa6, 0xb5, 0x35, 0xde,
	0xb0, 0x0d, 0x7a, 0xa4, 0xaa, 0x4a, 0x1d, 0xe6, 0x7b, 0xfb, 0x85, 0x31, 0xc5, 0x04, 0x85, 0xac,
	0x4b, 0x21, 0xb5, 0x36, 0x5e, 0xfa, 0xd2, 0x68, 0x17, 0x6a, 0x93, 0x17, 0xd0, 0x3b, 0x57, 0x6c,
	0x1b, 0x56, 0x5c, 0x33, 0xd6, 0x86, 0x2f, 0x1d, 0x2c, 0x1d, 0xad, 0x8f, 0x42, 0x60, 0x9b, 0xd0,
	0x2b, 0x15, 0xef, 0x11, 0xea, 0x95, 0x2a, 0x11, 0x10, 0x9d, 0xa2, 0xcb, 0x6d, 0x59, 0xb7, 0x06,
	0x76, 0x00, 0x91, 0x9a, 0xc7, 0xee, 0xd7, 0x45, 0x94, 0x1c, 0xc2, 0xe0, 0xc2, 0xa1, 0x3d, 0x57,
	0x6c, 0x07, 0x56, 0x1b, 0x87, 0xf6, 0xb2, 0x54, 0x5d, 0xdd, 0xa0, 0xa1, 0x0f, 0xc9, 0xcf, 0x1e,
	0xc0, 0x07, 0xb4, 0x55, 0xe9, 0x5c, 0xeb, 0xfc, 0x77, 0x23, 0xdb, 0xb0, 0xd2, 0x38, 0xab, 0x4d,
	0xd7, 0x4b, 0x08, 0x2d, 0xad, 0x6d, 0xa1, 0x0d, 0xef, 0x07, 0x4a, 0x81, 0x31, 0x58, 0x76, 0x78,
	0x3d, 0xe4, 0xcb, 0x04, 0xe9, 0x9d, 0x98, 0x97, 0x9e, 0xaf, 0x74, 0xcc, 0x4b, 0xdf, 0xb2, 0x4a,
	0x6a, 0xc9, 0x07, 0x81, 0xb5, 0xef, 0x1d, 0x6b, 0xf8, 0xea, 0x8c, 0x35, 0x1d, 0x53, 0x7c, 0x6d,
	0xc6, 0x54, 0xc7, 0xae, 0xf9, 0xfa, 0x8c, 0x5d, 0x77, 0xac, 0xe6, 0x30, 0x63, 0x75, 0xdb, 0xa1,
	0x6a, 0xfc, 0x54, 0xf3, 0x28, 0x74, 0x48, 0xa1, 0xa5, 0x57, 0x7e, 0x5a, 0x23, 0xdf, 0x08, 0x94,
	0x42, 0x4b, 0xf3, 0x69, 0x3e, 0x41, 0x1e, 0x07, 0x4a, 0xe1, 0x6e, 0x8f, 0x92, 0x6f, 0xce, 0xf7,
	0x28, 0x93, 0x63, 0x88, 0xe6, 0x67, 0xe6, 0xd8, 0x10, 0x56, 0x95, 0xf4, 0xd2, 0xa1, 0xe7, 0x4b,
	0x07, 0xfd, 0xa3, 0x68, 0xc8, 0xd3, 0xc5, 0x09, 0x48, 0xe7, 0xb5, 0xa3, 0xbb, 0xc2, 0x24, 0x01,
	0x38, 0x31, 0x8d, 0xf6, 0x23, 0xac, 0x27, 0x53, 0x5a, 0xbc, 0x4d, 0x74, 0xec, 0xfd, 0x51, 0x08,
	0xc9, 0x2b, 0x88, 0x8f, 0xaf, 0xae, 0x30, 0xf7, 0xa8, 0x42, 0xd9, 0x73, 0x88, 0xad, 0xb9, 0x75,
	0x97, 0xb2, 0xa3, 0x5d, 0xf9, 0x46, 0x0b, 0xef, 0x2a, 0x87, 0xbf, 0xfa, 0xd0, 0xff, 0x78, 0x76,
	0xc2, 0xde, 0xc3, 0x7a, 0x86, 0x3e, 0x43, 0xad, 0xd0, 0xb2, 0xad, 0xfb, 0x1d, 0x9d, 0xab, 0xbd,
	0xdd, 0xfb, 0x64, 0x61, 0xb0, 0x92, 0x27, 0xdf, 0x7f, 0xff, 0xf9, 0xd1, 0x8b, 0x93, 0x48, 0x38,
	0xcc, 0x45, 0x11, 0x0c, 0x97, 0xc0, 0x32, 0xf4, 0x67, 0xaa, 0xc9, 0x69, 0x7e, 0x4f, 0xb1, 0xb0,
	0x88, 0x8f, 0xf3, 0xee, 0x93, 0xf7, 0x29, 0xdb, 0x26, 0x2f, 0x3e, 0x50, 0x5d, 0x40, 0x9c, 0xa1,
	0x3f, 0xc5, 0x5a, 0x5a, 0x5f, 0xa1, 0xf6, 0x8f, 0x73, 0xef, 0x90, 0xfb, 0x7f, 0xf6, 0x1f, 0xb9,
	0xd5, 0xdc, 0x92, 0xc1, 0x20, 0x43, 0xff, 0xce, 0x8c, 0x1f, 0xe7, 0xdb, 0x22, 0x1f, 0xb0, 0x35,
	0xf2, 0x7d, 0x36, 0x63, 0x96, 0x53, 0x7f, 0x8b, 0x77, 0xe5, 0xfe, 0xdf, 0xe1, 0xa6, 0x3d, 0x74,
	0x2e, 0xcc, 0x49, 0x72, 0x48, 0xce, 0x67, 0x6c, 0x97, 0x9c, 0xf5, 0xec, 0x8b, 0xf8, 0xda, 0xdd,
	0xcd, 0x6f, 0x6f, 0xdf, 0x7c, 0x7a, 0x5d, 0x94, 0x7e, 0x22, 0xc7, 0xe9, 0x17, 0xd4, 0x4a, 0xa6,
	0xb9, 0xa9, 0x52, 0x7f, 0x2b, 0x28, 0x88, 0xdc, 0x54, 0x95, 0xd1, 0x4e, 0xdc, 0x0c, 0x05, 0xad,
	0x21, 0x0a, 0x33, 0x91, 0xba, 0x10, 0xaa, 0x6a, 0x85, 0xe3, 0x01, 0xc1, 0x97, 0x7f, 0x03, 0x00,
	0x00, 0xff, 0xff, 0x31, 0x2f, 0x3e, 0xf9, 0x8e, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SECClient is the client API for SEC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SECClient interface {
	// GetGender 取得性別描述.
	GetGender(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Description, error)
	// GetEducationDegree 取得學歷描述.
	GetEducationDegree(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Description, error)
	// GetDepartment 取得部門描述.
	GetDepartment(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Description, error)
	// GetJob 取得職稱描述.
	GetJob(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Description, error)
	// GetPermission 取得帳號的程式權限.
	GetPermission(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*Permissions, error)
}

type sECClient struct {
	cc *grpc.ClientConn
}

func NewSECClient(cc *grpc.ClientConn) SECClient {
	return &sECClient{cc}
}

func (c *sECClient) GetGender(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Description, error) {
	out := new(Description)
	err := c.cc.Invoke(ctx, "/proto.dm.sec.SEC/GetGender", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sECClient) GetEducationDegree(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Description, error) {
	out := new(Description)
	err := c.cc.Invoke(ctx, "/proto.dm.sec.SEC/GetEducationDegree", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sECClient) GetDepartment(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Description, error) {
	out := new(Description)
	err := c.cc.Invoke(ctx, "/proto.dm.sec.SEC/GetDepartment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sECClient) GetJob(ctx context.Context, in *Id, opts ...grpc.CallOption) (*Description, error) {
	out := new(Description)
	err := c.cc.Invoke(ctx, "/proto.dm.sec.SEC/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sECClient) GetPermission(ctx context.Context, in *UserId, opts ...grpc.CallOption) (*Permissions, error) {
	out := new(Permissions)
	err := c.cc.Invoke(ctx, "/proto.dm.sec.SEC/GetPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SECServer is the server API for SEC service.
type SECServer interface {
	// GetGender 取得性別描述.
	GetGender(context.Context, *Id) (*Description, error)
	// GetEducationDegree 取得學歷描述.
	GetEducationDegree(context.Context, *Id) (*Description, error)
	// GetDepartment 取得部門描述.
	GetDepartment(context.Context, *Id) (*Description, error)
	// GetJob 取得職稱描述.
	GetJob(context.Context, *Id) (*Description, error)
	// GetPermission 取得帳號的程式權限.
	GetPermission(context.Context, *UserId) (*Permissions, error)
}

func RegisterSECServer(s *grpc.Server, srv SECServer) {
	s.RegisterService(&_SEC_serviceDesc, srv)
}

func _SEC_GetGender_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SECServer).GetGender(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.sec.SEC/GetGender",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SECServer).GetGender(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SEC_GetEducationDegree_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SECServer).GetEducationDegree(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.sec.SEC/GetEducationDegree",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SECServer).GetEducationDegree(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SEC_GetDepartment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SECServer).GetDepartment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.sec.SEC/GetDepartment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SECServer).GetDepartment(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SEC_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SECServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.sec.SEC/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SECServer).GetJob(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _SEC_GetPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SECServer).GetPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.dm.sec.SEC/GetPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SECServer).GetPermission(ctx, req.(*UserId))
	}
	return interceptor(ctx, in, info, handler)
}

var _SEC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.dm.sec.SEC",
	HandlerType: (*SECServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetGender",
			Handler:    _SEC_GetGender_Handler,
		},
		{
			MethodName: "GetEducationDegree",
			Handler:    _SEC_GetEducationDegree_Handler,
		},
		{
			MethodName: "GetDepartment",
			Handler:    _SEC_GetDepartment_Handler,
		},
		{
			MethodName: "GetJob",
			Handler:    _SEC_GetJob_Handler,
		},
		{
			MethodName: "GetPermission",
			Handler:    _SEC_GetPermission_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service.proto",
}
