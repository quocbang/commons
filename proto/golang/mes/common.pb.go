// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	rs "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/dm/rs"
	code "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 投料收料基本資訊
type MoveBasicInfo struct {
	//工單號
	LotId string `protobuf:"bytes,2,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//作業機台號
	EquipmentId string `protobuf:"bytes,3,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	//工作日
	WorkDate string `protobuf:"bytes,4,opt,name=work_date,json=workDate,proto3" json:"work_date,omitempty"`
	//班別
	Shift string `protobuf:"bytes,5,opt,name=shift,proto3" json:"shift,omitempty"`
	//投入產出量
	MoveWeight float32 `protobuf:"fixed32,6,opt,name=move_weight,json=moveWeight,proto3" json:"move_weight,omitempty"`
	//操作者
	UpdateBy string `protobuf:"bytes,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	//投入產出首數
	SheetCount int32 `protobuf:"varint,8,opt,name=sheet_count,json=sheetCount,proto3" json:"sheet_count,omitempty"`
	//標示卡條碼
	MaterialLotId string `protobuf:"bytes,9,opt,name=material_lot_id,json=materialLotId,proto3" json:"material_lot_id,omitempty"`
	//產品代號
	MaterialProductId string `protobuf:"bytes,10,opt,name=material_product_id,json=materialProductId,proto3" json:"material_product_id,omitempty"`
	//產品代號
	MaterialLevel string `protobuf:"bytes,11,opt,name=material_level,json=materialLevel,proto3" json:"material_level,omitempty"`
	//載具ID
	CarrierId            string   `protobuf:"bytes,12,opt,name=carrier_id,json=carrierId,proto3" json:"carrier_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MoveBasicInfo) Reset()         { *m = MoveBasicInfo{} }
func (m *MoveBasicInfo) String() string { return proto.CompactTextString(m) }
func (*MoveBasicInfo) ProtoMessage()    {}
func (*MoveBasicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{0}
}

func (m *MoveBasicInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MoveBasicInfo.Unmarshal(m, b)
}
func (m *MoveBasicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MoveBasicInfo.Marshal(b, m, deterministic)
}
func (m *MoveBasicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MoveBasicInfo.Merge(m, src)
}
func (m *MoveBasicInfo) XXX_Size() int {
	return xxx_messageInfo_MoveBasicInfo.Size(m)
}
func (m *MoveBasicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_MoveBasicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_MoveBasicInfo proto.InternalMessageInfo

func (m *MoveBasicInfo) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *MoveBasicInfo) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *MoveBasicInfo) GetWorkDate() string {
	if m != nil {
		return m.WorkDate
	}
	return ""
}

func (m *MoveBasicInfo) GetShift() string {
	if m != nil {
		return m.Shift
	}
	return ""
}

func (m *MoveBasicInfo) GetMoveWeight() float32 {
	if m != nil {
		return m.MoveWeight
	}
	return 0
}

func (m *MoveBasicInfo) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *MoveBasicInfo) GetSheetCount() int32 {
	if m != nil {
		return m.SheetCount
	}
	return 0
}

func (m *MoveBasicInfo) GetMaterialLotId() string {
	if m != nil {
		return m.MaterialLotId
	}
	return ""
}

func (m *MoveBasicInfo) GetMaterialProductId() string {
	if m != nil {
		return m.MaterialProductId
	}
	return ""
}

func (m *MoveBasicInfo) GetMaterialLevel() string {
	if m != nil {
		return m.MaterialLevel
	}
	return ""
}

func (m *MoveBasicInfo) GetCarrierId() string {
	if m != nil {
		return m.CarrierId
	}
	return ""
}

// 步驟
type Step struct {
	// 步驟ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 步驟控制設定
	Controls             []*StepControl `protobuf:"bytes,2,rep,name=controls,proto3" json:"controls,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Step) Reset()         { *m = Step{} }
func (m *Step) String() string { return proto.CompactTextString(m) }
func (*Step) ProtoMessage()    {}
func (*Step) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1}
}

func (m *Step) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Step.Unmarshal(m, b)
}
func (m *Step) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Step.Marshal(b, m, deterministic)
}
func (m *Step) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Step.Merge(m, src)
}
func (m *Step) XXX_Size() int {
	return xxx_messageInfo_Step.Size(m)
}
func (m *Step) XXX_DiscardUnknown() {
	xxx_messageInfo_Step.DiscardUnknown(m)
}

var xxx_messageInfo_Step proto.InternalMessageInfo

func (m *Step) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Step) GetControls() []*StepControl {
	if m != nil {
		return m.Controls
	}
	return nil
}

//控制設定
type StepControl struct {
	// 設定項目名稱
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 設定值
	Value float32 `protobuf:"fixed32,3,opt,name=value,proto3" json:"value,omitempty"`
	// 劑量單位
	Unit                 string   `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StepControl) Reset()         { *m = StepControl{} }
func (m *StepControl) String() string { return proto.CompactTextString(m) }
func (*StepControl) ProtoMessage()    {}
func (*StepControl) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{1, 0}
}

func (m *StepControl) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StepControl.Unmarshal(m, b)
}
func (m *StepControl) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StepControl.Marshal(b, m, deterministic)
}
func (m *StepControl) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StepControl.Merge(m, src)
}
func (m *StepControl) XXX_Size() int {
	return xxx_messageInfo_StepControl.Size(m)
}
func (m *StepControl) XXX_DiscardUnknown() {
	xxx_messageInfo_StepControl.DiscardUnknown(m)
}

var xxx_messageInfo_StepControl proto.InternalMessageInfo

func (m *StepControl) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StepControl) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *StepControl) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

// 材料清單
type Material struct {
	// 材料名稱
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 材料等級
	Level string `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`
	// 數量
	Qty float32 `protobuf:"fixed32,3,opt,name=qty,proto3" json:"qty,omitempty"`
	// 計量單位
	Unit                 string   `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Material) Reset()         { *m = Material{} }
func (m *Material) String() string { return proto.CompactTextString(m) }
func (*Material) ProtoMessage()    {}
func (*Material) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{2}
}

func (m *Material) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Material.Unmarshal(m, b)
}
func (m *Material) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Material.Marshal(b, m, deterministic)
}
func (m *Material) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Material.Merge(m, src)
}
func (m *Material) XXX_Size() int {
	return xxx_messageInfo_Material.Size(m)
}
func (m *Material) XXX_DiscardUnknown() {
	xxx_messageInfo_Material.DiscardUnknown(m)
}

var xxx_messageInfo_Material proto.InternalMessageInfo

func (m *Material) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Material) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *Material) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *Material) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

//材料明細 (幾乎與MMTRLST相同)
type MaterialList struct {
	// 材料標示卡條碼
	MaterialLotId string `protobuf:"bytes,1,opt,name=material_lot_id,json=materialLotId,proto3" json:"material_lot_id,omitempty"`
	// 材料類別
	ProductType rs.ProductType `protobuf:"varint,2,opt,name=product_type,json=productType,proto3,enum=proto.dm.rs.ProductType" json:"product_type,omitempty"`
	// 材料ID
	MaterialProductId string `protobuf:"bytes,3,opt,name=material_product_id,json=materialProductId,proto3" json:"material_product_id,omitempty"`
	// 材料等級
	MaterialLevel string `protobuf:"bytes,4,opt,name=material_level,json=materialLevel,proto3" json:"material_level,omitempty"`
	// 管理廠
	OwnedFactoryId rs.FactoryID `protobuf:"varint,5,opt,name=owned_factory_id,json=ownedFactoryId,proto3,enum=proto.dm.rs.FactoryID" json:"owned_factory_id,omitempty"`
	// 管理部門
	OwnedDepartmentId string `protobuf:"bytes,6,opt,name=owned_department_id,json=ownedDepartmentId,proto3" json:"owned_department_id,omitempty"`
	// 儲位ID
	StorageId string `protobuf:"bytes,7,opt,name=storage_id,json=storageId,proto3" json:"storage_id,omitempty"`
	// 載具ID
	CarrierId string `protobuf:"bytes,8,opt,name=carrier_id,json=carrierId,proto3" json:"carrier_id,omitempty"`
	// 庫存數
	StockQty string `protobuf:"bytes,9,opt,name=stock_qty,json=stockQty,proto3" json:"stock_qty,omitempty"`
	// 最小使用量
	MinUseQty float32 `protobuf:"fixed32,10,opt,name=min_use_qty,json=minUseQty,proto3" json:"min_use_qty,omitempty"`
	// 計量單位
	Unit string `protobuf:"bytes,11,opt,name=unit,proto3" json:"unit,omitempty"`
	// 過期日
	ExpireAt string `protobuf:"bytes,12,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`
	// 材料狀態
	Status code.MaterialStatus `protobuf:"varint,13,opt,name=status,proto3,enum=proto.mes.code.MaterialStatus" json:"status,omitempty"`
	// 備註
	Comments string `protobuf:"bytes,14,opt,name=comments,proto3" json:"comments,omitempty"`
	// 最後更新日
	UpdateAt string `protobuf:"bytes,15,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	// 最後更新人
	UpdateBy string `protobuf:"bytes,16,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	// 入庫日
	InsertAt string `protobuf:"bytes,17,opt,name=insert_at,json=insertAt,proto3" json:"insert_at,omitempty"`
	// 入庫人
	InsertBy string `protobuf:"bytes,18,opt,name=insert_by,json=insertBy,proto3" json:"insert_by,omitempty"`
	// 材料變更紀錄使用 (展延, 扣留, 解扣留)
	// 車間
	Region string `protobuf:"bytes,19,opt,name=region,proto3" json:"region,omitempty"`
	// 新有效日期
	NewExpireDate string `protobuf:"bytes,20,opt,name=new_expire_date,json=newExpireDate,proto3" json:"new_expire_date,omitempty"`
	// 過期日
	OverDay int32 `protobuf:"varint,21,opt,name=over_day,json=overDay,proto3" json:"over_day,omitempty"`
	// 展延原因
	Reason string `protobuf:"bytes,22,opt,name=reason,proto3" json:"reason,omitempty"`
	// 生產別
	Stage                rs.StageStatus `protobuf:"varint,23,opt,name=stage,proto3,enum=proto.dm.rs.StageStatus" json:"stage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *MaterialList) Reset()         { *m = MaterialList{} }
func (m *MaterialList) String() string { return proto.CompactTextString(m) }
func (*MaterialList) ProtoMessage()    {}
func (*MaterialList) Descriptor() ([]byte, []int) {
	return fileDescriptor_555bd8c177793206, []int{3}
}

func (m *MaterialList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaterialList.Unmarshal(m, b)
}
func (m *MaterialList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaterialList.Marshal(b, m, deterministic)
}
func (m *MaterialList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaterialList.Merge(m, src)
}
func (m *MaterialList) XXX_Size() int {
	return xxx_messageInfo_MaterialList.Size(m)
}
func (m *MaterialList) XXX_DiscardUnknown() {
	xxx_messageInfo_MaterialList.DiscardUnknown(m)
}

var xxx_messageInfo_MaterialList proto.InternalMessageInfo

func (m *MaterialList) GetMaterialLotId() string {
	if m != nil {
		return m.MaterialLotId
	}
	return ""
}

func (m *MaterialList) GetProductType() rs.ProductType {
	if m != nil {
		return m.ProductType
	}
	return rs.ProductType_PRODUCT_TYPE_UNSPECIFIED
}

func (m *MaterialList) GetMaterialProductId() string {
	if m != nil {
		return m.MaterialProductId
	}
	return ""
}

func (m *MaterialList) GetMaterialLevel() string {
	if m != nil {
		return m.MaterialLevel
	}
	return ""
}

func (m *MaterialList) GetOwnedFactoryId() rs.FactoryID {
	if m != nil {
		return m.OwnedFactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *MaterialList) GetOwnedDepartmentId() string {
	if m != nil {
		return m.OwnedDepartmentId
	}
	return ""
}

func (m *MaterialList) GetStorageId() string {
	if m != nil {
		return m.StorageId
	}
	return ""
}

func (m *MaterialList) GetCarrierId() string {
	if m != nil {
		return m.CarrierId
	}
	return ""
}

func (m *MaterialList) GetStockQty() string {
	if m != nil {
		return m.StockQty
	}
	return ""
}

func (m *MaterialList) GetMinUseQty() float32 {
	if m != nil {
		return m.MinUseQty
	}
	return 0
}

func (m *MaterialList) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *MaterialList) GetExpireAt() string {
	if m != nil {
		return m.ExpireAt
	}
	return ""
}

func (m *MaterialList) GetStatus() code.MaterialStatus {
	if m != nil {
		return m.Status
	}
	return code.MaterialStatus_MATERIAL_STATUS_UNSPECIFIED
}

func (m *MaterialList) GetComments() string {
	if m != nil {
		return m.Comments
	}
	return ""
}

func (m *MaterialList) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

func (m *MaterialList) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *MaterialList) GetInsertAt() string {
	if m != nil {
		return m.InsertAt
	}
	return ""
}

func (m *MaterialList) GetInsertBy() string {
	if m != nil {
		return m.InsertBy
	}
	return ""
}

func (m *MaterialList) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *MaterialList) GetNewExpireDate() string {
	if m != nil {
		return m.NewExpireDate
	}
	return ""
}

func (m *MaterialList) GetOverDay() int32 {
	if m != nil {
		return m.OverDay
	}
	return 0
}

func (m *MaterialList) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *MaterialList) GetStage() rs.StageStatus {
	if m != nil {
		return m.Stage
	}
	return rs.StageStatus_STAGE_STATUS_UNSPECIFIED
}

func init() {
	proto.RegisterType((*MoveBasicInfo)(nil), "proto.mes.MoveBasicInfo")
	proto.RegisterType((*Step)(nil), "proto.mes.Step")
	proto.RegisterType((*StepControl)(nil), "proto.mes.Step.control")
	proto.RegisterType((*Material)(nil), "proto.mes.Material")
	proto.RegisterType((*MaterialList)(nil), "proto.mes.MaterialList")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_555bd8c177793206) }

var fileDescriptor_555bd8c177793206 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0x51, 0x6f, 0xdb, 0x36,
	0x10, 0x86, 0x9d, 0xd8, 0xb1, 0x69, 0xc7, 0x4d, 0xd9, 0x36, 0xe1, 0x5c, 0xac, 0xcb, 0x02, 0x6c,
	0xc8, 0x93, 0x04, 0xa4, 0xd8, 0xf6, 0xb0, 0x97, 0x35, 0xcb, 0x36, 0x18, 0x68, 0x81, 0x55, 0xd9,
	0x30, 0xa0, 0x2f, 0x02, 0x23, 0x5e, 0x1c, 0x22, 0x12, 0xa9, 0x92, 0x94, 0x3d, 0xfd, 0x8f, 0xfd,
	0xb3, 0xfd, 0x9a, 0xbd, 0x0d, 0x3c, 0x52, 0x8e, 0x1b, 0x78, 0xc0, 0x9e, 0xc4, 0xfb, 0xbe, 0xe3,
	0x07, 0x1e, 0xbf, 0xe3, 0x89, 0x4c, 0x0b, 0x5d, 0x55, 0x5a, 0x25, 0xb5, 0xd1, 0x4e, 0xd3, 0x31,
	0x7e, 0x92, 0x0a, 0xec, 0xfc, 0x04, 0x97, 0xa9, 0xa8, 0x52, 0x63, 0x53, 0x50, 0x4d, 0x65, 0x43,
	0xce, 0x7c, 0x1e, 0x88, 0x0a, 0x6c, 0x5a, 0x68, 0x01, 0xdb, 0xdc, 0xd9, 0x3f, 0x7d, 0x72, 0xf8,
	0x4e, 0xaf, 0xe0, 0x92, 0x5b, 0x59, 0x2c, 0xd4, 0xad, 0xa6, 0x2f, 0xc8, 0xb0, 0xd4, 0x2e, 0x97,
	0x82, 0xf5, 0x4f, 0x7b, 0xe7, 0xe3, 0x6c, 0x50, 0x6a, 0xb7, 0x10, 0xf4, 0x4b, 0x32, 0x85, 0x8f,
	0x8d, 0xac, 0x2b, 0x50, 0x48, 0xee, 0x21, 0x39, 0xd9, 0x60, 0x0b, 0x41, 0x5f, 0x92, 0xf1, 0x5a,
	0x9b, 0xfb, 0x5c, 0x70, 0x07, 0x6c, 0x1f, 0xf9, 0x91, 0x07, 0xae, 0xb8, 0x03, 0xfa, 0x9c, 0x0c,
	0xec, 0x9d, 0xbc, 0x75, 0x6c, 0x10, 0x54, 0x31, 0xa0, 0x5f, 0x90, 0x49, 0xa5, 0x57, 0x90, 0xaf,
	0x41, 0x2e, 0xef, 0x1c, 0x1b, 0x9e, 0xf6, 0xce, 0xfb, 0x19, 0xf1, 0xd0, 0x1f, 0x88, 0x78, 0xcd,
	0xa6, 0xf6, 0x82, 0xf9, 0x4d, 0xcb, 0x0e, 0x82, 0x66, 0x00, 0x2e, 0x5b, 0xbf, 0xdb, 0xde, 0x01,
	0xb8, 0xbc, 0xd0, 0x8d, 0x72, 0x6c, 0x74, 0xda, 0x3b, 0x1f, 0x64, 0x04, 0xa1, 0x1f, 0x3d, 0x42,
	0xbf, 0x26, 0x4f, 0x2a, 0xee, 0xc0, 0x48, 0x5e, 0xe6, 0xb1, 0xa8, 0x31, 0x6a, 0x1c, 0x76, 0xf0,
	0x5b, 0x2c, 0x2e, 0x21, 0xcf, 0x36, 0x79, 0xb5, 0xd1, 0xa2, 0x29, 0x30, 0x97, 0x60, 0xee, 0xd3,
	0x8e, 0xfa, 0x35, 0x30, 0x0b, 0x41, 0xbf, 0x22, 0xb3, 0x07, 0x5d, 0x58, 0x41, 0xc9, 0x26, 0x8f,
	0x64, 0x3d, 0x48, 0x3f, 0x27, 0xa4, 0xe0, 0xc6, 0x48, 0x30, 0x5e, 0x6d, 0x8a, 0x29, 0xe3, 0x88,
	0x2c, 0xc4, 0xd9, 0x5f, 0x3d, 0xb2, 0x7f, 0xed, 0xa0, 0xa6, 0x33, 0xd2, 0x97, 0x82, 0xf5, 0xf0,
	0xf8, 0x7d, 0x29, 0xe8, 0x6b, 0x32, 0x2a, 0xb4, 0x72, 0x46, 0x97, 0x96, 0xf5, 0x4f, 0xf7, 0xce,
	0x27, 0x17, 0x27, 0xc9, 0xc6, 0xe7, 0xc4, 0x6f, 0x49, 0x22, 0x9f, 0x6d, 0x12, 0xe7, 0xbf, 0x90,
	0x83, 0xb8, 0xa6, 0x94, 0xec, 0x2b, 0x5e, 0x41, 0x34, 0x10, 0xd7, 0xfe, 0xfe, 0x57, 0xbc, 0x6c,
	0x00, 0x8d, 0xeb, 0x67, 0x21, 0xf0, 0x99, 0x8d, 0x92, 0x2e, 0xba, 0x85, 0xeb, 0xb3, 0x0f, 0x64,
	0xf4, 0x2e, 0x96, 0xb1, 0x51, 0xea, 0x7d, 0xaa, 0x14, 0x6a, 0xee, 0xfa, 0x03, 0x6b, 0x3d, 0x22,
	0x7b, 0x1f, 0x5d, 0x1b, 0xd5, 0xfd, 0x72, 0xa7, 0xf6, 0xdf, 0x43, 0x32, 0xed, 0xc4, 0xdf, 0x4a,
	0xbb, 0xd3, 0xa1, 0xde, 0x2e, 0x87, 0xbe, 0x27, 0xd3, 0xce, 0x18, 0xd7, 0xd6, 0xa1, 0xb4, 0xd9,
	0x05, 0x8b, 0xd7, 0x22, 0xaa, 0xc4, 0xd8, 0x24, 0xfa, 0xf3, 0x5b, 0x5b, 0x43, 0x36, 0xa9, 0x1f,
	0x82, 0xff, 0xb2, 0x77, 0xef, 0xff, 0xdb, 0xbb, 0xbf, 0xcb, 0xde, 0x1f, 0xc8, 0x91, 0x5e, 0x2b,
	0x10, 0xf9, 0x2d, 0x2f, 0x9c, 0x36, 0xad, 0xd7, 0x1c, 0xe0, 0xb9, 0x8e, 0x3f, 0x39, 0xd7, 0xcf,
	0x81, 0x5e, 0x5c, 0x65, 0x33, 0xcc, 0xef, 0x62, 0xec, 0xbb, 0xa0, 0x20, 0xa0, 0xe6, 0xc6, 0x75,
	0x6f, 0x6b, 0x18, 0x0e, 0x86, 0xd4, 0xd5, 0x86, 0x59, 0x08, 0xdf, 0x50, 0xd6, 0x69, 0xc3, 0x97,
	0xe0, 0xd3, 0xc2, 0x73, 0x18, 0x47, 0x24, 0xd0, 0x5b, 0xfd, 0x36, 0x7a, 0xd4, 0x6f, 0xfe, 0x2d,
	0x59, 0xa7, 0x8b, 0xfb, 0xdc, 0x1b, 0x15, 0xde, 0xc1, 0x08, 0x81, 0xf7, 0xae, 0xa5, 0xaf, 0xc8,
	0xa4, 0x92, 0x2a, 0x6f, 0x2c, 0x20, 0x4d, 0xd0, 0xc7, 0x71, 0x25, 0xd5, 0xef, 0x16, 0xde, 0x6f,
	0xb9, 0x39, 0x79, 0x70, 0xd3, 0x0b, 0xc2, 0x9f, 0xb5, 0x34, 0x90, 0x73, 0x17, 0xdb, 0x7b, 0x14,
	0x80, 0x37, 0x8e, 0x7e, 0x4b, 0x86, 0xd6, 0x71, 0xd7, 0x58, 0x76, 0x88, 0x77, 0xf2, 0x6a, 0xab,
	0x85, 0xfd, 0x18, 0x4a, 0xba, 0x3e, 0xb8, 0xc6, 0xac, 0x2c, 0x66, 0xd3, 0xb9, 0x6f, 0xfe, 0xca,
	0x17, 0x6c, 0xd9, 0x2c, 0x68, 0x76, 0xf1, 0xd6, 0x34, 0xe0, 0x8e, 0x3d, 0xd9, 0x9e, 0x06, 0x6f,
	0x1e, 0x8d, 0x8a, 0xa3, 0x47, 0xa3, 0xe2, 0x25, 0x19, 0x4b, 0x65, 0xc1, 0x38, 0xbf, 0xf3, 0x69,
	0x20, 0x03, 0x10, 0x76, 0x46, 0xf2, 0xa6, 0x65, 0x74, 0x9b, 0xbc, 0x6c, 0xe9, 0x31, 0x19, 0x1a,
	0x58, 0x4a, 0xad, 0xd8, 0x33, 0x64, 0x62, 0xe4, 0x3b, 0x57, 0xc1, 0x3a, 0x8f, 0x17, 0x80, 0x33,
	0xef, 0x79, 0xe8, 0x12, 0x05, 0xeb, 0x9f, 0x10, 0xc5, 0xc1, 0xf7, 0x19, 0x19, 0xe9, 0x15, 0x98,
	0x5c, 0xf0, 0x96, 0xbd, 0xc0, 0x27, 0x7e, 0xe0, 0xe3, 0x2b, 0x1e, 0xa5, 0xb9, 0xd5, 0x8a, 0x1d,
	0x77, 0xd2, 0x3e, 0xa2, 0x09, 0x19, 0x58, 0xc7, 0x97, 0xc0, 0x4e, 0x76, 0x74, 0xf9, 0xb5, 0x67,
	0xe2, 0x9d, 0x85, 0xb4, 0xcb, 0xef, 0x3e, 0x7c, 0xb3, 0x94, 0xae, 0xe4, 0x37, 0xc9, 0x3d, 0x28,
	0xc1, 0x93, 0x42, 0x57, 0x89, 0x5b, 0xa7, 0x18, 0xa4, 0xe1, 0x77, 0x61, 0xd3, 0xd5, 0x45, 0x1a,
	0xfe, 0x03, 0x4b, 0x5d, 0x72, 0xb5, 0xf4, 0xbf, 0x83, 0x9b, 0x21, 0x22, 0xaf, 0xff, 0x0d, 0x00,
	0x00, 0xff, 0xff, 0xfa, 0x4b, 0x04, 0x5b, 0x54, 0x06, 0x00, 0x00,
}
