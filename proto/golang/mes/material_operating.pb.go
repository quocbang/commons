// Code generated by protoc-gen-go. DO NOT EDIT.
// source: material_operating.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	rs "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/dm/rs"
	code "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code"
	error1 "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code/error"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//材料操作請求 (for OPI)
type MaterialOperatingRequest struct {
	// 操作類別
	ActionType code.FunctionModel `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=proto.mes.code.FunctionModel" json:"action_type,omitempty"`
	// query 條件
	ProductType rs.ProductType `protobuf:"varint,2,opt,name=product_type,json=productType,proto3,enum=proto.dm.rs.ProductType" json:"product_type,omitempty"`
	// 材料條碼
	MaterialLotId string `protobuf:"bytes,3,opt,name=material_lot_id,json=materialLotId,proto3" json:"material_lot_id,omitempty"`
	// 材料ID
	MaterialProductId string `protobuf:"bytes,4,opt,name=material_product_id,json=materialProductId,proto3" json:"material_product_id,omitempty"`
	// 材料等級
	MaterialLevel string `protobuf:"bytes,5,opt,name=material_level,json=materialLevel,proto3" json:"material_level,omitempty"`
	// 材料狀態
	Status code.MaterialStatus `protobuf:"varint,6,opt,name=status,proto3,enum=proto.mes.code.MaterialStatus" json:"status,omitempty"`
	// 管理廠
	OwnedFactoryId rs.FactoryID `protobuf:"varint,7,opt,name=owned_factory_id,json=ownedFactoryId,proto3,enum=proto.dm.rs.FactoryID" json:"owned_factory_id,omitempty"`
	// 管理部門
	OwnedDepartmentId string `protobuf:"bytes,8,opt,name=owned_department_id,json=ownedDepartmentId,proto3" json:"owned_department_id,omitempty"`
	// 起始日
	StartDate string `protobuf:"bytes,9,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	// 終止日
	EndDate string `protobuf:"bytes,10,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	// 材料清單
	Materials            []*MaterialList `protobuf:"bytes,12,rep,name=materials,proto3" json:"materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MaterialOperatingRequest) Reset()         { *m = MaterialOperatingRequest{} }
func (m *MaterialOperatingRequest) String() string { return proto.CompactTextString(m) }
func (*MaterialOperatingRequest) ProtoMessage()    {}
func (*MaterialOperatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccba44744f44fbf, []int{0}
}

func (m *MaterialOperatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaterialOperatingRequest.Unmarshal(m, b)
}
func (m *MaterialOperatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaterialOperatingRequest.Marshal(b, m, deterministic)
}
func (m *MaterialOperatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaterialOperatingRequest.Merge(m, src)
}
func (m *MaterialOperatingRequest) XXX_Size() int {
	return xxx_messageInfo_MaterialOperatingRequest.Size(m)
}
func (m *MaterialOperatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaterialOperatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaterialOperatingRequest proto.InternalMessageInfo

func (m *MaterialOperatingRequest) GetActionType() code.FunctionModel {
	if m != nil {
		return m.ActionType
	}
	return code.FunctionModel_FUNCTION_MODEL_UNSPECIFIED
}

func (m *MaterialOperatingRequest) GetProductType() rs.ProductType {
	if m != nil {
		return m.ProductType
	}
	return rs.ProductType_PRODUCT_TYPE_UNSPECIFIED
}

func (m *MaterialOperatingRequest) GetMaterialLotId() string {
	if m != nil {
		return m.MaterialLotId
	}
	return ""
}

func (m *MaterialOperatingRequest) GetMaterialProductId() string {
	if m != nil {
		return m.MaterialProductId
	}
	return ""
}

func (m *MaterialOperatingRequest) GetMaterialLevel() string {
	if m != nil {
		return m.MaterialLevel
	}
	return ""
}

func (m *MaterialOperatingRequest) GetStatus() code.MaterialStatus {
	if m != nil {
		return m.Status
	}
	return code.MaterialStatus_MATERIAL_STATUS_UNSPECIFIED
}

func (m *MaterialOperatingRequest) GetOwnedFactoryId() rs.FactoryID {
	if m != nil {
		return m.OwnedFactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *MaterialOperatingRequest) GetOwnedDepartmentId() string {
	if m != nil {
		return m.OwnedDepartmentId
	}
	return ""
}

func (m *MaterialOperatingRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *MaterialOperatingRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *MaterialOperatingRequest) GetMaterials() []*MaterialList {
	if m != nil {
		return m.Materials
	}
	return nil
}

//材料操作回應 (for OPI)
type MaterialOperatingReply struct {
	//錯誤代碼
	Err error1.MaterialOperating `protobuf:"varint,1,opt,name=err,proto3,enum=proto.mes.code.error.MaterialOperating" json:"err,omitempty"`
	//材料清單
	Materials            []*MaterialList `protobuf:"bytes,2,rep,name=materials,proto3" json:"materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MaterialOperatingReply) Reset()         { *m = MaterialOperatingReply{} }
func (m *MaterialOperatingReply) String() string { return proto.CompactTextString(m) }
func (*MaterialOperatingReply) ProtoMessage()    {}
func (*MaterialOperatingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_eccba44744f44fbf, []int{1}
}

func (m *MaterialOperatingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaterialOperatingReply.Unmarshal(m, b)
}
func (m *MaterialOperatingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaterialOperatingReply.Marshal(b, m, deterministic)
}
func (m *MaterialOperatingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaterialOperatingReply.Merge(m, src)
}
func (m *MaterialOperatingReply) XXX_Size() int {
	return xxx_messageInfo_MaterialOperatingReply.Size(m)
}
func (m *MaterialOperatingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MaterialOperatingReply.DiscardUnknown(m)
}

var xxx_messageInfo_MaterialOperatingReply proto.InternalMessageInfo

func (m *MaterialOperatingReply) GetErr() error1.MaterialOperating {
	if m != nil {
		return m.Err
	}
	return error1.MaterialOperating_MATERIAL_OPERATING_SUCCESS
}

func (m *MaterialOperatingReply) GetMaterials() []*MaterialList {
	if m != nil {
		return m.Materials
	}
	return nil
}

func init() {
	proto.RegisterType((*MaterialOperatingRequest)(nil), "proto.mes.MaterialOperatingRequest")
	proto.RegisterType((*MaterialOperatingReply)(nil), "proto.mes.MaterialOperatingReply")
}

func init() { proto.RegisterFile("material_operating.proto", fileDescriptor_eccba44744f44fbf) }

var fileDescriptor_eccba44744f44fbf = []byte{
	// 478 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x61, 0x6b, 0x13, 0x31,
	0x1c, 0xc6, 0xe9, 0x3a, 0xbb, 0x35, 0x9d, 0x55, 0x23, 0x6c, 0xb1, 0x30, 0xa9, 0x03, 0xb5, 0xaf,
	0x72, 0x50, 0x99, 0x22, 0x82, 0x88, 0x94, 0x41, 0x61, 0x43, 0x39, 0x7d, 0xe5, 0x9b, 0x92, 0x5d,
	0xfe, 0x96, 0xc3, 0x4b, 0x72, 0x26, 0xff, 0xdb, 0xe8, 0x57, 0xf0, 0xdb, 0xf8, 0x0d, 0xe5, 0xfe,
	0xb9, 0x6b, 0xbb, 0xea, 0x0b, 0x5f, 0xdd, 0x25, 0xcf, 0x2f, 0x4f, 0x9e, 0x27, 0x24, 0x4c, 0x18,
	0x85, 0xe0, 0x73, 0x55, 0x2c, 0x5c, 0x09, 0x5e, 0x61, 0x6e, 0x97, 0xb2, 0xf4, 0x0e, 0x1d, 0xef,
	0xd3, 0x47, 0x1a, 0x08, 0xa3, 0x67, 0xf4, 0x9b, 0x18, 0x08, 0x49, 0xe9, 0x9d, 0xae, 0x32, 0xcc,
	0x9d, 0x4d, 0x32, 0x67, 0x8c, 0xb3, 0x91, 0x1e, 0x8d, 0x37, 0x48, 0xe6, 0x34, 0x24, 0xe0, 0xbd,
	0xf3, 0x09, 0xd8, 0xca, 0x84, 0x86, 0x18, 0xed, 0x12, 0x5b, 0xda, 0x49, 0xd4, 0xb4, 0x49, 0x7c,
	0xd8, 0x16, 0xce, 0x7e, 0xef, 0x33, 0x71, 0xd5, 0x24, 0xfc, 0xd4, 0x06, 0x4c, 0xe1, 0x67, 0x05,
	0x01, 0xf9, 0x7b, 0x36, 0x50, 0x14, 0x65, 0x81, 0xab, 0x12, 0x44, 0x67, 0xdc, 0x99, 0x0c, 0xa7,
	0xa7, 0x72, 0x9d, 0x5b, 0xd6, 0xfb, 0xc8, 0x8b, 0xca, 0x12, 0x74, 0xe5, 0x34, 0x14, 0x29, 0x8b,
	0x2b, 0xbe, 0xae, 0x4a, 0xe0, 0xef, 0xd8, 0x51, 0x53, 0x27, 0x1a, 0xec, 0x91, 0x81, 0x68, 0x0c,
	0xb4, 0x91, 0x3e, 0xc8, 0xcf, 0x11, 0xa8, 0xf9, 0x74, 0x50, 0x6e, 0x06, 0xfc, 0x05, 0x7b, 0xb0,
	0x3e, 0xba, 0xc2, 0xe1, 0x22, 0xd7, 0xa2, 0x3b, 0xee, 0x4c, 0xfa, 0xe9, 0xfd, 0x76, 0xfa, 0xd2,
	0xe1, 0x5c, 0x73, 0xc9, 0x1e, 0xaf, 0xb9, 0x76, 0xb7, 0x5c, 0x8b, 0x7d, 0x62, 0x1f, 0xb5, 0x52,
	0xb3, 0xcd, 0x5c, 0xf3, 0xe7, 0x6c, 0xb8, 0xf1, 0x85, 0x1b, 0x28, 0xc4, 0xbd, 0x1d, 0xdb, 0x7a,
	0x92, 0xbf, 0x66, 0xbd, 0x80, 0x0a, 0xab, 0x20, 0x7a, 0x94, 0xfa, 0xe9, 0x6e, 0xed, 0xf6, 0xd4,
	0xbe, 0x10, 0x95, 0x36, 0x34, 0xff, 0xc0, 0x1e, 0xba, 0x5b, 0x0b, 0x7a, 0xf1, 0x5d, 0x65, 0xe8,
	0xfc, 0xaa, 0xce, 0x72, 0x40, 0x0e, 0xc7, 0x77, 0x7a, 0x5f, 0x44, 0x79, 0x3e, 0x4b, 0x87, 0xc4,
	0xb7, 0x63, 0x2a, 0x14, 0x1d, 0x34, 0x94, 0xca, 0xa3, 0x01, 0x4b, 0x85, 0x0e, 0x63, 0x21, 0x92,
	0x66, 0x6b, 0x65, 0xae, 0xf9, 0x29, 0x63, 0x01, 0x95, 0xc7, 0x85, 0x56, 0x08, 0xa2, 0x4f, 0x58,
	0x9f, 0x66, 0x66, 0x0a, 0x81, 0x3f, 0x61, 0x87, 0x60, 0x75, 0x14, 0x19, 0x89, 0x07, 0x60, 0x35,
	0x49, 0xe7, 0xac, 0xdf, 0x96, 0x0e, 0xe2, 0x68, 0xdc, 0x9d, 0x0c, 0xa6, 0x27, 0x5b, 0x35, 0xdb,
	0x86, 0x97, 0x79, 0xc0, 0x74, 0x43, 0x9e, 0xfd, 0xea, 0xb0, 0xe3, 0x7f, 0xdc, 0x99, 0xb2, 0x58,
	0xf1, 0xb7, 0xac, 0x0b, 0xde, 0x37, 0x37, 0xe5, 0xe5, 0xee, 0x91, 0xd1, 0x9d, 0x95, 0x7f, 0x2f,
	0xad, 0xd7, 0xdc, 0x0d, 0xb3, 0xf7, 0xbf, 0x61, 0x3e, 0xbe, 0xf9, 0x76, 0xbe, 0xcc, 0xb1, 0x50,
	0xd7, 0xf2, 0x07, 0x58, 0xad, 0x64, 0xe6, 0x8c, 0xc4, 0xdb, 0x84, 0x06, 0xcd, 0x0b, 0x0a, 0xc9,
	0xcd, 0x34, 0x89, 0x0f, 0x60, 0xe9, 0x0a, 0x65, 0x97, 0xf5, 0x1b, 0xb9, 0xee, 0xd1, 0xcc, 0xab,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xce, 0x16, 0xc0, 0x6f, 0xa1, 0x03, 0x00, 0x00,
}
