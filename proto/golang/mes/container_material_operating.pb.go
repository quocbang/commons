// Code generated by protoc-gen-go. DO NOT EDIT.
// source: container_material_operating.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	code "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code"
	error1 "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code/error"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ContainerMaterialOperatingRequest struct {
	// CRUD
	ActionType code.FunctionModel `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=proto.mes.code.FunctionModel" json:"action_type,omitempty"`
	// 桶槽ID
	ContainerId string `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	// 標示卡條碼
	MaterialLotId string `protobuf:"bytes,3,opt,name=material_lot_id,json=materialLotId,proto3" json:"material_lot_id,omitempty"`
	// 更新人
	UpdateBy string `protobuf:"bytes,4,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	// 工位次序
	// 在大部分的製程中，不區分材料工位，即預設為 1。
	// 在連續作業工程做材料預檢核時，以工位區分不同規格的材料。
	// 例如： 蓋膠 A、B規格連續生產，其材料會區分兩個工位存放，
	//       當載料掛載至工位1時，則檢查是否與A規格的BOM相符，同理，材料掛載至工位2時，則檢查是否與B規格的BOM相符。
	//       當A規格生產完畢，欲切換至B規格生產時，工位1材料會卸載，並將工位2位的材料移至工位1。
	ActionOrder          int32    `protobuf:"varint,5,opt,name=action_order,json=actionOrder,proto3" json:"action_order,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerMaterialOperatingRequest) Reset()         { *m = ContainerMaterialOperatingRequest{} }
func (m *ContainerMaterialOperatingRequest) String() string { return proto.CompactTextString(m) }
func (*ContainerMaterialOperatingRequest) ProtoMessage()    {}
func (*ContainerMaterialOperatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfea8a4b77080a71, []int{0}
}

func (m *ContainerMaterialOperatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMaterialOperatingRequest.Unmarshal(m, b)
}
func (m *ContainerMaterialOperatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMaterialOperatingRequest.Marshal(b, m, deterministic)
}
func (m *ContainerMaterialOperatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMaterialOperatingRequest.Merge(m, src)
}
func (m *ContainerMaterialOperatingRequest) XXX_Size() int {
	return xxx_messageInfo_ContainerMaterialOperatingRequest.Size(m)
}
func (m *ContainerMaterialOperatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMaterialOperatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMaterialOperatingRequest proto.InternalMessageInfo

func (m *ContainerMaterialOperatingRequest) GetActionType() code.FunctionModel {
	if m != nil {
		return m.ActionType
	}
	return code.FunctionModel_FUNCTION_MODEL_UNSPECIFIED
}

func (m *ContainerMaterialOperatingRequest) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ContainerMaterialOperatingRequest) GetMaterialLotId() string {
	if m != nil {
		return m.MaterialLotId
	}
	return ""
}

func (m *ContainerMaterialOperatingRequest) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *ContainerMaterialOperatingRequest) GetActionOrder() int32 {
	if m != nil {
		return m.ActionOrder
	}
	return 0
}

type ContainerMaterialOperatingReply struct {
	Err                         error1.ContainerMaterialOperating                             `protobuf:"varint,1,opt,name=err,proto3,enum=proto.mes.code.error.ContainerMaterialOperating" json:"err,omitempty"`
	EquipmentContainerMaterials []*ContainerMaterialOperatingReply_EquipmentContainerMaterial `protobuf:"bytes,2,rep,name=equipment_container_materials,json=equipmentContainerMaterials,proto3" json:"equipment_container_materials,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                                                      `json:"-"`
	XXX_unrecognized            []byte                                                        `json:"-"`
	XXX_sizecache               int32                                                         `json:"-"`
}

func (m *ContainerMaterialOperatingReply) Reset()         { *m = ContainerMaterialOperatingReply{} }
func (m *ContainerMaterialOperatingReply) String() string { return proto.CompactTextString(m) }
func (*ContainerMaterialOperatingReply) ProtoMessage()    {}
func (*ContainerMaterialOperatingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfea8a4b77080a71, []int{1}
}

func (m *ContainerMaterialOperatingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMaterialOperatingReply.Unmarshal(m, b)
}
func (m *ContainerMaterialOperatingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMaterialOperatingReply.Marshal(b, m, deterministic)
}
func (m *ContainerMaterialOperatingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMaterialOperatingReply.Merge(m, src)
}
func (m *ContainerMaterialOperatingReply) XXX_Size() int {
	return xxx_messageInfo_ContainerMaterialOperatingReply.Size(m)
}
func (m *ContainerMaterialOperatingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMaterialOperatingReply.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMaterialOperatingReply proto.InternalMessageInfo

func (m *ContainerMaterialOperatingReply) GetErr() error1.ContainerMaterialOperating {
	if m != nil {
		return m.Err
	}
	return error1.ContainerMaterialOperating_CONTAINER_MATERIAL_OPERATING_SUCCESS
}

func (m *ContainerMaterialOperatingReply) GetEquipmentContainerMaterials() []*ContainerMaterialOperatingReply_EquipmentContainerMaterial {
	if m != nil {
		return m.EquipmentContainerMaterials
	}
	return nil
}

type ContainerMaterialOperatingReply_EquipmentContainerMaterial struct {
	EquipmentId          string   `protobuf:"bytes,1,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	ContainerId          string   `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	MaterialLotId        string   `protobuf:"bytes,3,opt,name=material_lot_id,json=materialLotId,proto3" json:"material_lot_id,omitempty"`
	MaterialLevel        string   `protobuf:"bytes,4,opt,name=material_level,json=materialLevel,proto3" json:"material_level,omitempty"`
	StockQty             float32  `protobuf:"fixed32,5,opt,name=stock_qty,json=stockQty,proto3" json:"stock_qty,omitempty"`
	MaterialProductId    string   `protobuf:"bytes,6,opt,name=material_product_id,json=materialProductId,proto3" json:"material_product_id,omitempty"`
	ActionOrder          string   `protobuf:"bytes,7,opt,name=action_order,json=actionOrder,proto3" json:"action_order,omitempty"`
	UpdateBy             string   `protobuf:"bytes,8,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	UpdateAt             string   `protobuf:"bytes,9,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) Reset() {
	*m = ContainerMaterialOperatingReply_EquipmentContainerMaterial{}
}
func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) String() string {
	return proto.CompactTextString(m)
}
func (*ContainerMaterialOperatingReply_EquipmentContainerMaterial) ProtoMessage() {}
func (*ContainerMaterialOperatingReply_EquipmentContainerMaterial) Descriptor() ([]byte, []int) {
	return fileDescriptor_bfea8a4b77080a71, []int{1, 0}
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainerMaterialOperatingReply_EquipmentContainerMaterial.Unmarshal(m, b)
}
func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainerMaterialOperatingReply_EquipmentContainerMaterial.Marshal(b, m, deterministic)
}
func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainerMaterialOperatingReply_EquipmentContainerMaterial.Merge(m, src)
}
func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) XXX_Size() int {
	return xxx_messageInfo_ContainerMaterialOperatingReply_EquipmentContainerMaterial.Size(m)
}
func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainerMaterialOperatingReply_EquipmentContainerMaterial.DiscardUnknown(m)
}

var xxx_messageInfo_ContainerMaterialOperatingReply_EquipmentContainerMaterial proto.InternalMessageInfo

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetContainerId() string {
	if m != nil {
		return m.ContainerId
	}
	return ""
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetMaterialLotId() string {
	if m != nil {
		return m.MaterialLotId
	}
	return ""
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetMaterialLevel() string {
	if m != nil {
		return m.MaterialLevel
	}
	return ""
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetStockQty() float32 {
	if m != nil {
		return m.StockQty
	}
	return 0
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetMaterialProductId() string {
	if m != nil {
		return m.MaterialProductId
	}
	return ""
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetActionOrder() string {
	if m != nil {
		return m.ActionOrder
	}
	return ""
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *ContainerMaterialOperatingReply_EquipmentContainerMaterial) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

func init() {
	proto.RegisterType((*ContainerMaterialOperatingRequest)(nil), "proto.mes.ContainerMaterialOperatingRequest")
	proto.RegisterType((*ContainerMaterialOperatingReply)(nil), "proto.mes.ContainerMaterialOperatingReply")
	proto.RegisterType((*ContainerMaterialOperatingReply_EquipmentContainerMaterial)(nil), "proto.mes.ContainerMaterialOperatingReply.EquipmentContainerMaterial")
}

func init() {
	proto.RegisterFile("container_material_operating.proto", fileDescriptor_bfea8a4b77080a71)
}

var fileDescriptor_bfea8a4b77080a71 = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x93, 0xb6, 0xc4, 0x1b, 0x28, 0xc2, 0x5c, 0x2c, 0x57, 0x15, 0x6e, 0x24, 0x50, 0x4e,
	0x6b, 0x14, 0x84, 0xb8, 0x21, 0x11, 0x54, 0xa4, 0x48, 0x54, 0x05, 0x8b, 0x13, 0x17, 0x6b, 0xe3,
	0x1d, 0x45, 0x56, 0xed, 0x1d, 0x67, 0x3d, 0x2e, 0xf2, 0x23, 0xf0, 0x74, 0x3c, 0x00, 0xef, 0xc0,
	0x33, 0x20, 0xaf, 0xff, 0xd2, 0x54, 0x0d, 0x17, 0x4e, 0x89, 0xbf, 0xf9, 0xf6, 0x9b, 0xef, 0xdb,
	0x99, 0x65, 0xb3, 0x18, 0x15, 0x89, 0x44, 0x81, 0x8e, 0x32, 0x41, 0xa0, 0x13, 0x91, 0x46, 0x98,
	0x83, 0x16, 0x94, 0xa8, 0x0d, 0xcf, 0x35, 0x12, 0x3a, 0xb6, 0xf9, 0xe1, 0x19, 0x14, 0x9e, 0x67,
	0xfe, 0x06, 0x19, 0x14, 0x41, 0x8c, 0x12, 0x02, 0x50, 0x65, 0x56, 0x34, 0x34, 0xcf, 0xdf, 0xaf,
	0x69, 0x8d, 0x7a, 0x97, 0x31, 0xfb, 0x63, 0xb1, 0x8b, 0x8f, 0x5d, 0xbf, 0xab, 0xb6, 0xdd, 0x75,
	0xd7, 0x2d, 0x84, 0x6d, 0x09, 0x05, 0x39, 0xef, 0xd9, 0x54, 0xc4, 0x94, 0xa0, 0x8a, 0xa8, 0xca,
	0xc1, 0xb5, 0x7c, 0x6b, 0x7e, 0xba, 0x38, 0xe7, 0xbd, 0x09, 0x5e, 0xab, 0xf3, 0x4f, 0xa5, 0x32,
	0xa4, 0x2b, 0x94, 0x90, 0x86, 0xac, 0x39, 0xf1, 0xad, 0xca, 0xc1, 0xb9, 0x60, 0x8f, 0x87, 0x50,
	0x89, 0x74, 0x47, 0xbe, 0x35, 0xb7, 0xc3, 0x69, 0x8f, 0xad, 0xa4, 0xf3, 0x8a, 0x3d, 0xed, 0xd3,
	0xa6, 0x48, 0x35, 0x6b, 0x6c, 0x58, 0x4f, 0x3a, 0xf8, 0x33, 0xd2, 0x4a, 0x3a, 0x67, 0xcc, 0x2e,
	0x73, 0x29, 0x08, 0xa2, 0x75, 0xe5, 0x1e, 0x19, 0xc6, 0xa4, 0x01, 0x96, 0x55, 0xdd, 0xa7, 0xf5,
	0x89, 0x5a, 0x82, 0x76, 0x8f, 0x7d, 0x6b, 0x7e, 0x1c, 0xb6, 0xde, 0xaf, 0x6b, 0x68, 0xf6, 0xeb,
	0x88, 0xbd, 0x38, 0x14, 0x38, 0x4f, 0x2b, 0x67, 0xc9, 0xc6, 0xa0, 0x75, 0x1b, 0xf3, 0xf5, 0x7e,
	0x4c, 0x73, 0x89, 0xfc, 0x80, 0x46, 0x7d, 0xd8, 0xf9, 0x69, 0xb1, 0x73, 0xd8, 0x96, 0x49, 0x9e,
	0x81, 0xa2, 0xe8, 0xfe, 0x48, 0x0b, 0x77, 0xe4, 0x8f, 0xe7, 0xd3, 0xc5, 0xe5, 0x8e, 0xfc, 0x3f,
	0x7c, 0xf1, 0xcb, 0x4e, 0xef, 0x1e, 0x31, 0x3c, 0x83, 0x07, 0x6b, 0x85, 0xf7, 0x7b, 0xc4, 0xbc,
	0x87, 0xcf, 0xd6, 0xb7, 0x36, 0x38, 0x4d, 0xa4, 0xc9, 0x6d, 0x87, 0xd3, 0x1e, 0x5b, 0xc9, 0xff,
	0x39, 0xc0, 0x97, 0xec, 0x74, 0xe0, 0xc1, 0x2d, 0xa4, 0xed, 0x14, 0x07, 0x5a, 0x0d, 0xd6, 0x73,
	0x2e, 0x08, 0xe3, 0x9b, 0x68, 0x4b, 0x95, 0x99, 0xe3, 0x28, 0x9c, 0x18, 0xe0, 0x2b, 0x55, 0x0e,
	0x67, 0xcf, 0x7b, 0x8d, 0x5c, 0xa3, 0x2c, 0x63, 0xd3, 0xef, 0xc4, 0x08, 0x3d, 0xeb, 0x4a, 0x5f,
	0x9a, 0x4a, 0x63, 0xff, 0xce, 0x5e, 0x3c, 0x6a, 0xec, 0xef, 0xec, 0xc5, 0xdd, 0xbd, 0x9a, 0xec,
	0xed, 0xd5, 0x50, 0x14, 0xe4, 0xda, 0xbb, 0xc5, 0x0f, 0xb4, 0x7c, 0xf7, 0xfd, 0xed, 0x26, 0xa1,
	0x54, 0xac, 0xf9, 0x0d, 0x28, 0x29, 0x78, 0x8c, 0x19, 0xa7, 0x1f, 0x81, 0xf9, 0x08, 0x62, 0xcc,
	0x32, 0x54, 0x45, 0x70, 0xbb, 0x08, 0x9a, 0xb7, 0xb8, 0xc1, 0x54, 0xa8, 0x4d, 0xfd, 0x24, 0xd7,
	0x27, 0x06, 0x79, 0xf3, 0x37, 0x00, 0x00, 0xff, 0xff, 0x4c, 0xc9, 0x8b, 0x60, 0xf1, 0x03, 0x00,
	0x00,
}
