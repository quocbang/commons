// Code generated by protoc-gen-go. DO NOT EDIT.
// source: check_product_tools.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code"
	error1 "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code/error"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//檢核製工具請求
type CheckProductToolsRequest struct {
	// 工單號
	LotId string `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	// 途程名稱
	ProcessName string `protobuf:"bytes,2,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	// 設備ID
	EquipmentId string `protobuf:"bytes,3,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	// 是否為檢核全部, 為true時會檢查是否有漏掃
	AllCheck bool `protobuf:"varint,4,opt,name=all_check,json=allCheck,proto3" json:"all_check,omitempty"`
	// 工具ID清單
	ToolIds              []string `protobuf:"bytes,5,rep,name=tool_ids,json=toolIds,proto3" json:"tool_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckProductToolsRequest) Reset()         { *m = CheckProductToolsRequest{} }
func (m *CheckProductToolsRequest) String() string { return proto.CompactTextString(m) }
func (*CheckProductToolsRequest) ProtoMessage()    {}
func (*CheckProductToolsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a162b131468d3d52, []int{0}
}

func (m *CheckProductToolsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckProductToolsRequest.Unmarshal(m, b)
}
func (m *CheckProductToolsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckProductToolsRequest.Marshal(b, m, deterministic)
}
func (m *CheckProductToolsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckProductToolsRequest.Merge(m, src)
}
func (m *CheckProductToolsRequest) XXX_Size() int {
	return xxx_messageInfo_CheckProductToolsRequest.Size(m)
}
func (m *CheckProductToolsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckProductToolsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckProductToolsRequest proto.InternalMessageInfo

func (m *CheckProductToolsRequest) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *CheckProductToolsRequest) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *CheckProductToolsRequest) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *CheckProductToolsRequest) GetAllCheck() bool {
	if m != nil {
		return m.AllCheck
	}
	return false
}

func (m *CheckProductToolsRequest) GetToolIds() []string {
	if m != nil {
		return m.ToolIds
	}
	return nil
}

//檢核製工具回應
type CheckProductToolsReply struct {
	// 錯誤代碼
	Err                  error1.CheckProdTools `protobuf:"varint,1,opt,name=err,proto3,enum=proto.mes.code.error.CheckProdTools" json:"err,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CheckProductToolsReply) Reset()         { *m = CheckProductToolsReply{} }
func (m *CheckProductToolsReply) String() string { return proto.CompactTextString(m) }
func (*CheckProductToolsReply) ProtoMessage()    {}
func (*CheckProductToolsReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_a162b131468d3d52, []int{1}
}

func (m *CheckProductToolsReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckProductToolsReply.Unmarshal(m, b)
}
func (m *CheckProductToolsReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckProductToolsReply.Marshal(b, m, deterministic)
}
func (m *CheckProductToolsReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckProductToolsReply.Merge(m, src)
}
func (m *CheckProductToolsReply) XXX_Size() int {
	return xxx_messageInfo_CheckProductToolsReply.Size(m)
}
func (m *CheckProductToolsReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckProductToolsReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckProductToolsReply proto.InternalMessageInfo

func (m *CheckProductToolsReply) GetErr() error1.CheckProdTools {
	if m != nil {
		return m.Err
	}
	return error1.CheckProdTools_CHECK_PRODUCT_TOOLS_SUCCESS
}

func init() {
	proto.RegisterType((*CheckProductToolsRequest)(nil), "proto.mes.CheckProductToolsRequest")
	proto.RegisterType((*CheckProductToolsReply)(nil), "proto.mes.CheckProductToolsReply")
}

func init() { proto.RegisterFile("check_product_tools.proto", fileDescriptor_a162b131468d3d52) }

var fileDescriptor_a162b131468d3d52 = []byte{
	// 296 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x50, 0x4f, 0x4b, 0x3b, 0x31,
	0x10, 0x65, 0x7f, 0xfd, 0xb5, 0x76, 0xa3, 0x78, 0x58, 0x50, 0xb6, 0xf5, 0xb2, 0x16, 0x0f, 0x3d,
	0x25, 0x50, 0x51, 0xef, 0x7a, 0xea, 0x45, 0xca, 0xe2, 0xc9, 0x4b, 0x48, 0x93, 0xa1, 0x2e, 0x4d,
	0x32, 0xdb, 0x24, 0xab, 0xf8, 0xa9, 0xfc, 0x8a, 0x92, 0x6c, 0x59, 0x44, 0x3c, 0x25, 0x33, 0xf3,
	0x1e, 0xef, 0x0f, 0x99, 0xc9, 0x37, 0x90, 0x7b, 0xde, 0x3a, 0x54, 0x9d, 0x0c, 0x3c, 0x20, 0x6a,
	0x4f, 0x5b, 0x87, 0x01, 0x8b, 0x3c, 0x3d, 0xd4, 0x80, 0x9f, 0xcf, 0xd3, 0x97, 0x19, 0xf0, 0x4c,
	0xa2, 0x02, 0x06, 0xb6, 0x33, 0x47, 0xd8, 0xbc, 0xfa, 0x7d, 0x73, 0x0e, 0xdd, 0x4f, 0xc4, 0xe2,
	0x2b, 0x23, 0xe5, 0x53, 0x94, 0xd9, 0xf4, 0x2a, 0x2f, 0x51, 0xa4, 0x86, 0x43, 0x07, 0x3e, 0x14,
	0x17, 0x64, 0xa2, 0x31, 0xf0, 0x46, 0x95, 0x59, 0x95, 0x2d, 0xf3, 0x7a, 0xac, 0x31, 0xac, 0x55,
	0x71, 0x4d, 0xce, 0x5a, 0x87, 0x12, 0xbc, 0xe7, 0x56, 0x18, 0x28, 0xff, 0xa5, 0xe3, 0xe9, 0x71,
	0xf7, 0x2c, 0x0c, 0x44, 0x08, 0x1c, 0xba, 0xa6, 0x35, 0x60, 0x13, 0x7f, 0xd4, 0x43, 0x86, 0xdd,
	0x5a, 0x15, 0x57, 0x24, 0x17, 0x5a, 0xf3, 0x94, 0xb1, 0xfc, 0x5f, 0x65, 0xcb, 0x69, 0x3d, 0x15,
	0x5a, 0x27, 0x33, 0xc5, 0x8c, 0x4c, 0x63, 0x5c, 0xde, 0x28, 0x5f, 0x8e, 0xab, 0xd1, 0x32, 0xaf,
	0x4f, 0xe2, 0xbc, 0x56, 0x7e, 0xb1, 0x21, 0x97, 0x7f, 0x18, 0x6e, 0xf5, 0x67, 0x71, 0x4f, 0x46,
	0xe0, 0x5c, 0xf2, 0x7a, 0xbe, 0xba, 0xa1, 0x43, 0x45, 0x34, 0x66, 0xa7, 0x29, 0x3b, 0x1d, 0xa8,
	0x3d, 0x2f, 0x12, 0x1e, 0x1f, 0x5e, 0xef, 0x76, 0x4d, 0xd0, 0x62, 0x4b, 0xf7, 0x60, 0x95, 0xa0,
	0x12, 0x0d, 0x0d, 0x1f, 0x2c, 0x0d, 0x4c, 0xa2, 0x31, 0x68, 0x3d, 0x7b, 0x5f, 0xb1, 0xbe, 0xcc,
	0x1d, 0x6a, 0x61, 0x77, 0xb1, 0xd3, 0xed, 0x24, 0x6d, 0x6e, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x08, 0xd6, 0x5f, 0x75, 0xa9, 0x01, 0x00, 0x00,
}
