// Code generated by protoc-gen-go. DO NOT EDIT.
// source: check_scan_material.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code"
	error1 "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code/error"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//檢核投入材料內容
type CheckScanMaterialRequest struct {
	// 配合表ID -- 取工單上的就好了
	RecipeId string `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	//工單號
	LotId string `protobuf:"bytes,2,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//途程名稱 -- 不給也沒差, 預設抓取可投料工單, 一台設備不可能同時跑兩個投料途程
	ProcessName string `protobuf:"bytes,3,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	//作業機台號
	EquipmentId string `protobuf:"bytes,5,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	//首數-用於計算幾倍的基礎用量 (不給預設為1)
	SheetCount int32 `protobuf:"varint,6,opt,name=sheet_count,json=sheetCount,proto3" json:"sheet_count,omitempty"`
	//操作者
	UpdateBy string `protobuf:"bytes,7,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	//是否為檢核全部, 為true時會檢查是否有漏掃
	AllCheck bool `protobuf:"varint,8,opt,name=all_check,json=allCheck,proto3" json:"all_check,omitempty"`
	//材料條碼清單
	MaterialLotIds []string `protobuf:"bytes,10,rep,name=material_lot_ids,json=materialLotIds,proto3" json:"material_lot_ids,omitempty"`
	//實際重量秤量之材料清單 (條碼+實重)
	ScaleMaterials []*CheckScanMaterialRequest_ScaleMaterial `protobuf:"bytes,11,rep,name=scale_materials,json=scaleMaterials,proto3" json:"scale_materials,omitempty"`
	//材料清單 (測試中)
	Materials            []*CheckScanMaterialRequest_Material `protobuf:"bytes,12,rep,name=materials,proto3" json:"materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *CheckScanMaterialRequest) Reset()         { *m = CheckScanMaterialRequest{} }
func (m *CheckScanMaterialRequest) String() string { return proto.CompactTextString(m) }
func (*CheckScanMaterialRequest) ProtoMessage()    {}
func (*CheckScanMaterialRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa3228fcae97a2af, []int{0}
}

func (m *CheckScanMaterialRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckScanMaterialRequest.Unmarshal(m, b)
}
func (m *CheckScanMaterialRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckScanMaterialRequest.Marshal(b, m, deterministic)
}
func (m *CheckScanMaterialRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckScanMaterialRequest.Merge(m, src)
}
func (m *CheckScanMaterialRequest) XXX_Size() int {
	return xxx_messageInfo_CheckScanMaterialRequest.Size(m)
}
func (m *CheckScanMaterialRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckScanMaterialRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CheckScanMaterialRequest proto.InternalMessageInfo

func (m *CheckScanMaterialRequest) GetRecipeId() string {
	if m != nil {
		return m.RecipeId
	}
	return ""
}

func (m *CheckScanMaterialRequest) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *CheckScanMaterialRequest) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *CheckScanMaterialRequest) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *CheckScanMaterialRequest) GetSheetCount() int32 {
	if m != nil {
		return m.SheetCount
	}
	return 0
}

func (m *CheckScanMaterialRequest) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *CheckScanMaterialRequest) GetAllCheck() bool {
	if m != nil {
		return m.AllCheck
	}
	return false
}

func (m *CheckScanMaterialRequest) GetMaterialLotIds() []string {
	if m != nil {
		return m.MaterialLotIds
	}
	return nil
}

func (m *CheckScanMaterialRequest) GetScaleMaterials() []*CheckScanMaterialRequest_ScaleMaterial {
	if m != nil {
		return m.ScaleMaterials
	}
	return nil
}

func (m *CheckScanMaterialRequest) GetMaterials() []*CheckScanMaterialRequest_Material {
	if m != nil {
		return m.Materials
	}
	return nil
}

//掃描材料資訊
type CheckScanMaterialRequest_ScaleMaterial struct {
	//材料標示卡條碼
	LotId string `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//耗用量
	Qty                  float32  `protobuf:"fixed32,2,opt,name=qty,proto3" json:"qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckScanMaterialRequest_ScaleMaterial) Reset() {
	*m = CheckScanMaterialRequest_ScaleMaterial{}
}
func (m *CheckScanMaterialRequest_ScaleMaterial) String() string { return proto.CompactTextString(m) }
func (*CheckScanMaterialRequest_ScaleMaterial) ProtoMessage()    {}
func (*CheckScanMaterialRequest_ScaleMaterial) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa3228fcae97a2af, []int{0, 0}
}

func (m *CheckScanMaterialRequest_ScaleMaterial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckScanMaterialRequest_ScaleMaterial.Unmarshal(m, b)
}
func (m *CheckScanMaterialRequest_ScaleMaterial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckScanMaterialRequest_ScaleMaterial.Marshal(b, m, deterministic)
}
func (m *CheckScanMaterialRequest_ScaleMaterial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckScanMaterialRequest_ScaleMaterial.Merge(m, src)
}
func (m *CheckScanMaterialRequest_ScaleMaterial) XXX_Size() int {
	return xxx_messageInfo_CheckScanMaterialRequest_ScaleMaterial.Size(m)
}
func (m *CheckScanMaterialRequest_ScaleMaterial) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckScanMaterialRequest_ScaleMaterial.DiscardUnknown(m)
}

var xxx_messageInfo_CheckScanMaterialRequest_ScaleMaterial proto.InternalMessageInfo

func (m *CheckScanMaterialRequest_ScaleMaterial) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *CheckScanMaterialRequest_ScaleMaterial) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

//材料
type CheckScanMaterialRequest_Material struct {
	//標示卡條碼
	LotId string `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//實際耗用量
	Qty float32 `protobuf:"fixed32,2,opt,name=qty,proto3" json:"qty,omitempty"`
	// 是否為掛載，當值為true是代表為中央供應。
	IsMounted            bool     `protobuf:"varint,3,opt,name=isMounted,proto3" json:"isMounted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckScanMaterialRequest_Material) Reset()         { *m = CheckScanMaterialRequest_Material{} }
func (m *CheckScanMaterialRequest_Material) String() string { return proto.CompactTextString(m) }
func (*CheckScanMaterialRequest_Material) ProtoMessage()    {}
func (*CheckScanMaterialRequest_Material) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa3228fcae97a2af, []int{0, 1}
}

func (m *CheckScanMaterialRequest_Material) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckScanMaterialRequest_Material.Unmarshal(m, b)
}
func (m *CheckScanMaterialRequest_Material) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckScanMaterialRequest_Material.Marshal(b, m, deterministic)
}
func (m *CheckScanMaterialRequest_Material) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckScanMaterialRequest_Material.Merge(m, src)
}
func (m *CheckScanMaterialRequest_Material) XXX_Size() int {
	return xxx_messageInfo_CheckScanMaterialRequest_Material.Size(m)
}
func (m *CheckScanMaterialRequest_Material) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckScanMaterialRequest_Material.DiscardUnknown(m)
}

var xxx_messageInfo_CheckScanMaterialRequest_Material proto.InternalMessageInfo

func (m *CheckScanMaterialRequest_Material) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *CheckScanMaterialRequest_Material) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *CheckScanMaterialRequest_Material) GetIsMounted() bool {
	if m != nil {
		return m.IsMounted
	}
	return false
}

//檢核材料回應
type CheckScanMaterialReply struct {
	// 錯誤代碼
	Err error1.Material `protobuf:"varint,1,opt,name=err,proto3,enum=proto.mes.code.error.Material" json:"err,omitempty"`
	// 材料清單
	Materials            []*CheckScanMaterialReply_PreMoveInMaterial `protobuf:"bytes,2,rep,name=materials,proto3" json:"materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *CheckScanMaterialReply) Reset()         { *m = CheckScanMaterialReply{} }
func (m *CheckScanMaterialReply) String() string { return proto.CompactTextString(m) }
func (*CheckScanMaterialReply) ProtoMessage()    {}
func (*CheckScanMaterialReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa3228fcae97a2af, []int{1}
}

func (m *CheckScanMaterialReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckScanMaterialReply.Unmarshal(m, b)
}
func (m *CheckScanMaterialReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckScanMaterialReply.Marshal(b, m, deterministic)
}
func (m *CheckScanMaterialReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckScanMaterialReply.Merge(m, src)
}
func (m *CheckScanMaterialReply) XXX_Size() int {
	return xxx_messageInfo_CheckScanMaterialReply.Size(m)
}
func (m *CheckScanMaterialReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckScanMaterialReply.DiscardUnknown(m)
}

var xxx_messageInfo_CheckScanMaterialReply proto.InternalMessageInfo

func (m *CheckScanMaterialReply) GetErr() error1.Material {
	if m != nil {
		return m.Err
	}
	return error1.Material_CHECK_MATERIAL_SUCCESS
}

func (m *CheckScanMaterialReply) GetMaterials() []*CheckScanMaterialReply_PreMoveInMaterial {
	if m != nil {
		return m.Materials
	}
	return nil
}

//準備投入之材料
type CheckScanMaterialReply_PreMoveInMaterial struct {
	//材料標示卡條碼
	LotId string `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//材料ID
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	//材料等級
	Level string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	//投入量 : 密煉製程計量單位為kg, 精度小數三位, 其他製程待訂定
	Qty float32 `protobuf:"fixed32,4,opt,name=qty,proto3" json:"qty,omitempty"`
	//此flag為true時代表重量來自PLC
	RealWeight           bool     `protobuf:"varint,5,opt,name=realWeight,proto3" json:"realWeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckScanMaterialReply_PreMoveInMaterial) Reset() {
	*m = CheckScanMaterialReply_PreMoveInMaterial{}
}
func (m *CheckScanMaterialReply_PreMoveInMaterial) String() string { return proto.CompactTextString(m) }
func (*CheckScanMaterialReply_PreMoveInMaterial) ProtoMessage()    {}
func (*CheckScanMaterialReply_PreMoveInMaterial) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa3228fcae97a2af, []int{1, 0}
}

func (m *CheckScanMaterialReply_PreMoveInMaterial) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckScanMaterialReply_PreMoveInMaterial.Unmarshal(m, b)
}
func (m *CheckScanMaterialReply_PreMoveInMaterial) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckScanMaterialReply_PreMoveInMaterial.Marshal(b, m, deterministic)
}
func (m *CheckScanMaterialReply_PreMoveInMaterial) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckScanMaterialReply_PreMoveInMaterial.Merge(m, src)
}
func (m *CheckScanMaterialReply_PreMoveInMaterial) XXX_Size() int {
	return xxx_messageInfo_CheckScanMaterialReply_PreMoveInMaterial.Size(m)
}
func (m *CheckScanMaterialReply_PreMoveInMaterial) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckScanMaterialReply_PreMoveInMaterial.DiscardUnknown(m)
}

var xxx_messageInfo_CheckScanMaterialReply_PreMoveInMaterial proto.InternalMessageInfo

func (m *CheckScanMaterialReply_PreMoveInMaterial) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *CheckScanMaterialReply_PreMoveInMaterial) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CheckScanMaterialReply_PreMoveInMaterial) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *CheckScanMaterialReply_PreMoveInMaterial) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *CheckScanMaterialReply_PreMoveInMaterial) GetRealWeight() bool {
	if m != nil {
		return m.RealWeight
	}
	return false
}

func init() {
	proto.RegisterType((*CheckScanMaterialRequest)(nil), "proto.mes.CheckScanMaterialRequest")
	proto.RegisterType((*CheckScanMaterialRequest_ScaleMaterial)(nil), "proto.mes.CheckScanMaterialRequest.ScaleMaterial")
	proto.RegisterType((*CheckScanMaterialRequest_Material)(nil), "proto.mes.CheckScanMaterialRequest.Material")
	proto.RegisterType((*CheckScanMaterialReply)(nil), "proto.mes.CheckScanMaterialReply")
	proto.RegisterType((*CheckScanMaterialReply_PreMoveInMaterial)(nil), "proto.mes.CheckScanMaterialReply.PreMoveInMaterial")
}

func init() { proto.RegisterFile("check_scan_material.proto", fileDescriptor_fa3228fcae97a2af) }

var fileDescriptor_fa3228fcae97a2af = []byte{
	// 524 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc7, 0xe5, 0xa4, 0x09, 0xf6, 0xa4, 0x84, 0xb2, 0x02, 0x64, 0x02, 0x14, 0xd3, 0x93, 0x0f,
	0xc8, 0x86, 0x54, 0x08, 0xce, 0xed, 0x29, 0x88, 0x20, 0xea, 0x1e, 0x90, 0x7a, 0xb1, 0x36, 0xeb,
	0x51, 0x62, 0x75, 0xed, 0x75, 0x76, 0xd7, 0x41, 0x79, 0x0c, 0x1e, 0x85, 0x17, 0xe1, 0x99, 0xd0,
	0xae, 0xf3, 0x61, 0xa0, 0x45, 0xf4, 0x64, 0xcf, 0x6f, 0x3e, 0x76, 0xe7, 0x3f, 0xb3, 0xf0, 0x94,
	0x2d, 0x90, 0x5d, 0xa7, 0x8a, 0xd1, 0x32, 0x2d, 0xa8, 0x46, 0x99, 0x53, 0x1e, 0x55, 0x52, 0x68,
	0x41, 0x3c, 0xfb, 0x89, 0x0a, 0x54, 0xa3, 0x91, 0xfd, 0x8d, 0x0b, 0x54, 0x31, 0x13, 0x19, 0xc6,
	0x58, 0xd6, 0x85, 0x6a, 0xc2, 0x46, 0xc1, 0x9f, 0x3e, 0x29, 0x85, 0x6c, 0x47, 0x9c, 0xfc, 0x3c,
	0x00, 0xff, 0xdc, 0x1c, 0x73, 0xc9, 0x68, 0x39, 0xdd, 0x1c, 0x92, 0xe0, 0xb2, 0x46, 0xa5, 0xc9,
	0x33, 0xf0, 0x24, 0xb2, 0xbc, 0xc2, 0x34, 0xcf, 0x7c, 0x27, 0x70, 0x42, 0x2f, 0x71, 0x1b, 0x30,
	0xc9, 0xc8, 0x63, 0xe8, 0x73, 0xa1, 0x8d, 0xa7, 0x63, 0x3d, 0x3d, 0x2e, 0xf4, 0x24, 0x23, 0xaf,
	0xe0, 0xb0, 0x92, 0x82, 0xa1, 0x52, 0x69, 0x49, 0x0b, 0xf4, 0xbb, 0xd6, 0x39, 0xd8, 0xb0, 0xcf,
	0xb4, 0x40, 0x13, 0x82, 0xcb, 0x3a, 0xaf, 0x0a, 0x2c, 0x6d, 0x7e, 0xaf, 0x09, 0xd9, 0xb1, 0x49,
	0x46, 0x5e, 0xc2, 0x40, 0x2d, 0x10, 0x75, 0xca, 0x44, 0x5d, 0x6a, 0xbf, 0x1f, 0x38, 0x61, 0x2f,
	0x01, 0x8b, 0xce, 0x0d, 0x31, 0x57, 0xab, 0xab, 0x8c, 0x6a, 0x4c, 0x67, 0x6b, 0xff, 0x5e, 0x73,
	0xb5, 0x06, 0x9c, 0xad, 0x8d, 0x93, 0x72, 0x9e, 0x5a, 0xf9, 0x7c, 0x37, 0x70, 0x42, 0x37, 0x71,
	0x29, 0xe7, 0xb6, 0x4f, 0x12, 0xc2, 0xd1, 0x56, 0xcc, 0xb4, 0x69, 0x40, 0xf9, 0x10, 0x74, 0x43,
	0x2f, 0x19, 0x6e, 0xf9, 0x27, 0xd3, 0x89, 0x22, 0x57, 0xf0, 0x40, 0x31, 0xca, 0x71, 0x27, 0xbe,
	0xf2, 0x07, 0x41, 0x37, 0x1c, 0x8c, 0xdf, 0x46, 0x3b, 0xf9, 0xa3, 0xdb, 0xc4, 0x8b, 0x2e, 0x4d,
	0xea, 0x0e, 0x0e, 0x55, 0xdb, 0x54, 0xe4, 0x23, 0x78, 0xfb, 0xaa, 0x87, 0xb6, 0xea, 0xeb, 0xff,
	0xa9, 0xba, 0xb3, 0xf7, 0xe9, 0xa3, 0x0f, 0x70, 0xff, 0xb7, 0xc3, 0x5a, 0xa3, 0x71, 0xda, 0xa3,
	0x39, 0x82, 0xee, 0x52, 0xaf, 0xed, 0xb8, 0x3a, 0x89, 0xf9, 0x1d, 0x5d, 0x80, 0x7b, 0xe7, 0x24,
	0xf2, 0x1c, 0xbc, 0x5c, 0x4d, 0xcd, 0x14, 0x30, 0xb3, 0xe3, 0x75, 0x93, 0x3d, 0x38, 0xf9, 0xd1,
	0x81, 0x27, 0x37, 0xdc, 0xbe, 0xe2, 0x6b, 0xf2, 0x06, 0xba, 0x28, 0xa5, 0x2d, 0x3f, 0x1c, 0x1f,
	0xb7, 0xba, 0x35, 0xbb, 0x19, 0xd9, 0xdd, 0xdc, 0xf7, 0x67, 0x42, 0xc9, 0x45, 0x5b, 0xa5, 0x8e,
	0x55, 0xe9, 0xf4, 0xdf, 0x2a, 0x55, 0x7c, 0x1d, 0x7d, 0x91, 0x38, 0x15, 0x2b, 0x9c, 0x94, 0x37,
	0x89, 0xf5, 0xdd, 0x81, 0x87, 0x7f, 0x05, 0xdc, 0xd6, 0xfc, 0x0b, 0x80, 0x4a, 0x8a, 0xac, 0x66,
	0xad, 0x3d, 0xf7, 0x36, 0x64, 0x92, 0x91, 0x47, 0xd0, 0xe3, 0xb8, 0x42, 0xbe, 0x59, 0xf2, 0xc6,
	0xd8, 0x2a, 0x76, 0xb0, 0x57, 0xec, 0x18, 0x40, 0x22, 0xe5, 0x5f, 0x31, 0x9f, 0x2f, 0xb4, 0x5d,
	0x77, 0x37, 0x69, 0x91, 0xb3, 0xf7, 0x57, 0xef, 0xe6, 0xb9, 0xe6, 0x74, 0x16, 0x5d, 0x63, 0x99,
	0xd1, 0x88, 0x89, 0x22, 0xd2, 0xdf, 0x62, 0x6b, 0xc4, 0x4c, 0x14, 0x85, 0x28, 0x55, 0xbc, 0x1a,
	0xc7, 0xcd, 0x6b, 0x9e, 0x0b, 0x4e, 0xcb, 0xb9, 0x79, 0xd4, 0xb3, 0xbe, 0x25, 0xa7, 0xbf, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x5d, 0xc5, 0x27, 0xe8, 0x2a, 0x04, 0x00, 0x00,
}
