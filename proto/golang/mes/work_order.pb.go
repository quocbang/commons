// Code generated by protoc-gen-go. DO NOT EDIT.
// source: work_order.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	rs "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/dm/rs"
	code "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code"
	error1 "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code/error"
	workorder "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/v2/workorder"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// 工單操作請求 : 目前只有查詢功能
type WorkOrderOperatingPlcRequest struct {
	//操作類別「R」搜尋工單
	ActionType code.FunctionModel `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=proto.mes.code.FunctionModel" json:"action_type,omitempty"`
	// 請求類別
	// I = 投料 , O = 收料
	ActionMode code.Mode `protobuf:"varint,2,opt,name=action_mode,json=actionMode,proto3,enum=proto.mes.code.Mode" json:"action_mode,omitempty"`
	//機台號
	EquipmentId string `protobuf:"bytes,3,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	// 需求筆數
	Count                int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkOrderOperatingPlcRequest) Reset()         { *m = WorkOrderOperatingPlcRequest{} }
func (m *WorkOrderOperatingPlcRequest) String() string { return proto.CompactTextString(m) }
func (*WorkOrderOperatingPlcRequest) ProtoMessage()    {}
func (*WorkOrderOperatingPlcRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{0}
}

func (m *WorkOrderOperatingPlcRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrderOperatingPlcRequest.Unmarshal(m, b)
}
func (m *WorkOrderOperatingPlcRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrderOperatingPlcRequest.Marshal(b, m, deterministic)
}
func (m *WorkOrderOperatingPlcRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrderOperatingPlcRequest.Merge(m, src)
}
func (m *WorkOrderOperatingPlcRequest) XXX_Size() int {
	return xxx_messageInfo_WorkOrderOperatingPlcRequest.Size(m)
}
func (m *WorkOrderOperatingPlcRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrderOperatingPlcRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrderOperatingPlcRequest proto.InternalMessageInfo

func (m *WorkOrderOperatingPlcRequest) GetActionType() code.FunctionModel {
	if m != nil {
		return m.ActionType
	}
	return code.FunctionModel_FUNCTION_MODEL_UNSPECIFIED
}

func (m *WorkOrderOperatingPlcRequest) GetActionMode() code.Mode {
	if m != nil {
		return m.ActionMode
	}
	return code.Mode_MODE_UNSPECIFIED
}

func (m *WorkOrderOperatingPlcRequest) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *WorkOrderOperatingPlcRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

//工單操作回應 (for PLC/MHI)
type WorkOrderOperatingPlcReply struct {
	//錯誤代碼
	Err error1.WorkOrderOperating `protobuf:"varint,1,opt,name=err,proto3,enum=proto.mes.code.error.WorkOrderOperating" json:"err,omitempty"`
	//工單明細
	Orders               []*WorkOrderOperatingPlcReply_WorkOrder `protobuf:"bytes,2,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                `json:"-"`
	XXX_unrecognized     []byte                                  `json:"-"`
	XXX_sizecache        int32                                   `json:"-"`
}

func (m *WorkOrderOperatingPlcReply) Reset()         { *m = WorkOrderOperatingPlcReply{} }
func (m *WorkOrderOperatingPlcReply) String() string { return proto.CompactTextString(m) }
func (*WorkOrderOperatingPlcReply) ProtoMessage()    {}
func (*WorkOrderOperatingPlcReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{1}
}

func (m *WorkOrderOperatingPlcReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrderOperatingPlcReply.Unmarshal(m, b)
}
func (m *WorkOrderOperatingPlcReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrderOperatingPlcReply.Marshal(b, m, deterministic)
}
func (m *WorkOrderOperatingPlcReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrderOperatingPlcReply.Merge(m, src)
}
func (m *WorkOrderOperatingPlcReply) XXX_Size() int {
	return xxx_messageInfo_WorkOrderOperatingPlcReply.Size(m)
}
func (m *WorkOrderOperatingPlcReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrderOperatingPlcReply.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrderOperatingPlcReply proto.InternalMessageInfo

func (m *WorkOrderOperatingPlcReply) GetErr() error1.WorkOrderOperating {
	if m != nil {
		return m.Err
	}
	return error1.WorkOrderOperating_WORK_ORDER_OPERATING_SUCCESS
}

func (m *WorkOrderOperatingPlcReply) GetOrders() []*WorkOrderOperatingPlcReply_WorkOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

//工單明細
type WorkOrderOperatingPlcReply_WorkOrder struct {
	//工單號
	LotId string `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//配方ID
	RecipeId string `protobuf:"bytes,2,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	//中間製品目前階段
	CurrentProcessName string `protobuf:"bytes,3,opt,name=current_process_name,json=currentProcessName,proto3" json:"current_process_name,omitempty"`
	//中間製品排程階段
	NextProcessName string `protobuf:"bytes,4,opt,name=next_process_name,json=nextProcessName,proto3" json:"next_process_name,omitempty"`
	//狀態
	Status code.LotStatus `protobuf:"varint,5,opt,name=status,proto3,enum=proto.mes.code.LotStatus" json:"status,omitempty"`
	//排程序號
	ShiftSequence string `protobuf:"bytes,6,opt,name=shift_sequence,json=shiftSequence,proto3" json:"shift_sequence,omitempty"`
	//計畫產量
	PlanQty float32 `protobuf:"fixed32,7,opt,name=plan_qty,json=planQty,proto3" json:"plan_qty,omitempty"`
	//已投料數量
	MoveInQty float32 `protobuf:"fixed32,8,opt,name=move_in_qty,json=moveInQty,proto3" json:"move_in_qty,omitempty"`
	//已收料數量
	MoveOutQty float32 `protobuf:"fixed32,9,opt,name=move_out_qty,json=moveOutQty,proto3" json:"move_out_qty,omitempty"`
	//總首數
	PlanSheetCount int32 `protobuf:"varint,10,opt,name=plan_sheet_count,json=planSheetCount,proto3" json:"plan_sheet_count,omitempty"`
	//已投料首數
	InSheetCount int32 `protobuf:"varint,11,opt,name=in_sheet_count,json=inSheetCount,proto3" json:"in_sheet_count,omitempty"`
	//已收料首數
	OutSheetCount int32 `protobuf:"varint,12,opt,name=out_sheet_count,json=outSheetCount,proto3" json:"out_sheet_count,omitempty"`
	// 材料清單
	Materials []*GetMaterialWeightReply_Material `protobuf:"bytes,13,rep,name=materials,proto3" json:"materials,omitempty"`
	// 設備設定 (分步驟)
	Steps []*Step `protobuf:"bytes,14,rep,name=steps,proto3" json:"steps,omitempty"`
	// 檢核工具
	Tools                []*rs.Tool `protobuf:"bytes,15,rep,name=tools,proto3" json:"tools,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) Reset()         { *m = WorkOrderOperatingPlcReply_WorkOrder{} }
func (m *WorkOrderOperatingPlcReply_WorkOrder) String() string { return proto.CompactTextString(m) }
func (*WorkOrderOperatingPlcReply_WorkOrder) ProtoMessage()    {}
func (*WorkOrderOperatingPlcReply_WorkOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{1, 0}
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrderOperatingPlcReply_WorkOrder.Unmarshal(m, b)
}
func (m *WorkOrderOperatingPlcReply_WorkOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrderOperatingPlcReply_WorkOrder.Marshal(b, m, deterministic)
}
func (m *WorkOrderOperatingPlcReply_WorkOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrderOperatingPlcReply_WorkOrder.Merge(m, src)
}
func (m *WorkOrderOperatingPlcReply_WorkOrder) XXX_Size() int {
	return xxx_messageInfo_WorkOrderOperatingPlcReply_WorkOrder.Size(m)
}
func (m *WorkOrderOperatingPlcReply_WorkOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrderOperatingPlcReply_WorkOrder.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrderOperatingPlcReply_WorkOrder proto.InternalMessageInfo

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetRecipeId() string {
	if m != nil {
		return m.RecipeId
	}
	return ""
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetCurrentProcessName() string {
	if m != nil {
		return m.CurrentProcessName
	}
	return ""
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetNextProcessName() string {
	if m != nil {
		return m.NextProcessName
	}
	return ""
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetStatus() code.LotStatus {
	if m != nil {
		return m.Status
	}
	return code.LotStatus_LOT_STATUS_UNSPECIFIED
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetShiftSequence() string {
	if m != nil {
		return m.ShiftSequence
	}
	return ""
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetPlanQty() float32 {
	if m != nil {
		return m.PlanQty
	}
	return 0
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetMoveInQty() float32 {
	if m != nil {
		return m.MoveInQty
	}
	return 0
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetMoveOutQty() float32 {
	if m != nil {
		return m.MoveOutQty
	}
	return 0
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetPlanSheetCount() int32 {
	if m != nil {
		return m.PlanSheetCount
	}
	return 0
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetInSheetCount() int32 {
	if m != nil {
		return m.InSheetCount
	}
	return 0
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetOutSheetCount() int32 {
	if m != nil {
		return m.OutSheetCount
	}
	return 0
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetMaterials() []*GetMaterialWeightReply_Material {
	if m != nil {
		return m.Materials
	}
	return nil
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetSteps() []*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

func (m *WorkOrderOperatingPlcReply_WorkOrder) GetTools() []*rs.Tool {
	if m != nil {
		return m.Tools
	}
	return nil
}

//工單操作請求 for UI
type WorkOrderOperatingRequest struct {
	ActionType code.FunctionModel `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=proto.mes.code.FunctionModel" json:"action_type,omitempty"`
	//工單號
	LotId string `protobuf:"bytes,2,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//機台號
	EquipmentId string `protobuf:"bytes,3,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	//工作日
	WorkDate string `protobuf:"bytes,4,opt,name=work_date,json=workDate,proto3" json:"work_date,omitempty"`
	//班別
	Shift string `protobuf:"bytes,5,opt,name=shift,proto3" json:"shift,omitempty"`
	//作業組別
	DepartmentId string `protobuf:"bytes,6,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	//是否只查詢已排程工單
	ReservedFlag string `protobuf:"bytes,7,opt,name=reserved_flag,json=reservedFlag,proto3" json:"reserved_flag,omitempty"`
	//產品代號-用於建立工單畫面，使用產品代號做條件搜尋
	ProductId string `protobuf:"bytes,8,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	//起始日期-用於建立工單畫面，使用產品代號做條件搜尋
	StartDate string `protobuf:"bytes,9,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	//結束日期-用於建立工單畫面，使用產品代號做條件搜尋
	EndDate string `protobuf:"bytes,10,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	//操作者
	UpdateBy string `protobuf:"bytes,11,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	//產品類型
	ProductType rs.ProductType `protobuf:"varint,12,opt,name=product_type,json=productType,proto3,enum=proto.dm.rs.ProductType" json:"product_type,omitempty"`
	//廠別
	FactoryId rs.FactoryID `protobuf:"varint,13,opt,name=factory_id,json=factoryId,proto3,enum=proto.dm.rs.FactoryID" json:"factory_id,omitempty"`
	//工單陣列-工單操作條件
	Orders []*WorkOrder `protobuf:"bytes,14,rep,name=orders,proto3" json:"orders,omitempty"`
	//備料條件
	GetPrep              *WorkOrderOperatingRequest_GetPrepOrders `protobuf:"bytes,15,opt,name=get_prep,json=getPrep,proto3" json:"get_prep,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                 `json:"-"`
	XXX_unrecognized     []byte                                   `json:"-"`
	XXX_sizecache        int32                                    `json:"-"`
}

func (m *WorkOrderOperatingRequest) Reset()         { *m = WorkOrderOperatingRequest{} }
func (m *WorkOrderOperatingRequest) String() string { return proto.CompactTextString(m) }
func (*WorkOrderOperatingRequest) ProtoMessage()    {}
func (*WorkOrderOperatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{2}
}

func (m *WorkOrderOperatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrderOperatingRequest.Unmarshal(m, b)
}
func (m *WorkOrderOperatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrderOperatingRequest.Marshal(b, m, deterministic)
}
func (m *WorkOrderOperatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrderOperatingRequest.Merge(m, src)
}
func (m *WorkOrderOperatingRequest) XXX_Size() int {
	return xxx_messageInfo_WorkOrderOperatingRequest.Size(m)
}
func (m *WorkOrderOperatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrderOperatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrderOperatingRequest proto.InternalMessageInfo

func (m *WorkOrderOperatingRequest) GetActionType() code.FunctionModel {
	if m != nil {
		return m.ActionType
	}
	return code.FunctionModel_FUNCTION_MODEL_UNSPECIFIED
}

func (m *WorkOrderOperatingRequest) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetWorkDate() string {
	if m != nil {
		return m.WorkDate
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetShift() string {
	if m != nil {
		return m.Shift
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetDepartmentId() string {
	if m != nil {
		return m.DepartmentId
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetReservedFlag() string {
	if m != nil {
		return m.ReservedFlag
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *WorkOrderOperatingRequest) GetProductType() rs.ProductType {
	if m != nil {
		return m.ProductType
	}
	return rs.ProductType_PRODUCT_TYPE_UNSPECIFIED
}

func (m *WorkOrderOperatingRequest) GetFactoryId() rs.FactoryID {
	if m != nil {
		return m.FactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *WorkOrderOperatingRequest) GetOrders() []*WorkOrder {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *WorkOrderOperatingRequest) GetGetPrep() *WorkOrderOperatingRequest_GetPrepOrders {
	if m != nil {
		return m.GetPrep
	}
	return nil
}

type WorkOrderOperatingRequest_GetPrepOrders struct {
	PrepStart            string   `protobuf:"bytes,1,opt,name=prep_start,json=prepStart,proto3" json:"prep_start,omitempty"`
	PrepEnd              string   `protobuf:"bytes,2,opt,name=prep_end,json=prepEnd,proto3" json:"prep_end,omitempty"`
	PrepType             string   `protobuf:"bytes,3,opt,name=prep_type,json=prepType,proto3" json:"prep_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkOrderOperatingRequest_GetPrepOrders) Reset() {
	*m = WorkOrderOperatingRequest_GetPrepOrders{}
}
func (m *WorkOrderOperatingRequest_GetPrepOrders) String() string { return proto.CompactTextString(m) }
func (*WorkOrderOperatingRequest_GetPrepOrders) ProtoMessage()    {}
func (*WorkOrderOperatingRequest_GetPrepOrders) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{2, 0}
}

func (m *WorkOrderOperatingRequest_GetPrepOrders) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrderOperatingRequest_GetPrepOrders.Unmarshal(m, b)
}
func (m *WorkOrderOperatingRequest_GetPrepOrders) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrderOperatingRequest_GetPrepOrders.Marshal(b, m, deterministic)
}
func (m *WorkOrderOperatingRequest_GetPrepOrders) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrderOperatingRequest_GetPrepOrders.Merge(m, src)
}
func (m *WorkOrderOperatingRequest_GetPrepOrders) XXX_Size() int {
	return xxx_messageInfo_WorkOrderOperatingRequest_GetPrepOrders.Size(m)
}
func (m *WorkOrderOperatingRequest_GetPrepOrders) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrderOperatingRequest_GetPrepOrders.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrderOperatingRequest_GetPrepOrders proto.InternalMessageInfo

func (m *WorkOrderOperatingRequest_GetPrepOrders) GetPrepStart() string {
	if m != nil {
		return m.PrepStart
	}
	return ""
}

func (m *WorkOrderOperatingRequest_GetPrepOrders) GetPrepEnd() string {
	if m != nil {
		return m.PrepEnd
	}
	return ""
}

func (m *WorkOrderOperatingRequest_GetPrepOrders) GetPrepType() string {
	if m != nil {
		return m.PrepType
	}
	return ""
}

//工單操作回應 for UI
type WorkOrderOperatingReply struct {
	//錯誤代碼
	Err error1.WorkOrderOperating `protobuf:"varint,1,opt,name=err,proto3,enum=proto.mes.code.error.WorkOrderOperating" json:"err,omitempty"`
	//已排產工單明細
	ReservedOrders []*WorkOrder `protobuf:"bytes,2,rep,name=reserved_orders,json=reservedOrders,proto3" json:"reserved_orders,omitempty"`
	//未排產工單明細
	UnreservedOrders     []*WorkOrder `protobuf:"bytes,3,rep,name=unreserved_orders,json=unreservedOrders,proto3" json:"unreserved_orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *WorkOrderOperatingReply) Reset()         { *m = WorkOrderOperatingReply{} }
func (m *WorkOrderOperatingReply) String() string { return proto.CompactTextString(m) }
func (*WorkOrderOperatingReply) ProtoMessage()    {}
func (*WorkOrderOperatingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{3}
}

func (m *WorkOrderOperatingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrderOperatingReply.Unmarshal(m, b)
}
func (m *WorkOrderOperatingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrderOperatingReply.Marshal(b, m, deterministic)
}
func (m *WorkOrderOperatingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrderOperatingReply.Merge(m, src)
}
func (m *WorkOrderOperatingReply) XXX_Size() int {
	return xxx_messageInfo_WorkOrderOperatingReply.Size(m)
}
func (m *WorkOrderOperatingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrderOperatingReply.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrderOperatingReply proto.InternalMessageInfo

func (m *WorkOrderOperatingReply) GetErr() error1.WorkOrderOperating {
	if m != nil {
		return m.Err
	}
	return error1.WorkOrderOperating_WORK_ORDER_OPERATING_SUCCESS
}

func (m *WorkOrderOperatingReply) GetReservedOrders() []*WorkOrder {
	if m != nil {
		return m.ReservedOrders
	}
	return nil
}

func (m *WorkOrderOperatingReply) GetUnreservedOrders() []*WorkOrder {
	if m != nil {
		return m.UnreservedOrders
	}
	return nil
}

//工單明細
type WorkOrder struct {
	//廠別
	FactoryId rs.FactoryID `protobuf:"varint,1,opt,name=factory_id,json=factoryId,proto3,enum=proto.dm.rs.FactoryID" json:"factory_id,omitempty"`
	//工單號
	LotId string `protobuf:"bytes,2,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//配方識別碼
	RecipeId string `protobuf:"bytes,3,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	//排程機台
	ReservedEquipmentId string `protobuf:"bytes,4,opt,name=reserved_equipment_id,json=reservedEquipmentId,proto3" json:"reserved_equipment_id,omitempty"`
	//中間製品識別碼
	ProductId string `protobuf:"bytes,5,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	//配方生產別
	StageStatus rs.StageStatus `protobuf:"varint,6,opt,name=stage_status,json=stageStatus,proto3,enum=proto.dm.rs.StageStatus" json:"stage_status,omitempty"`
	//中間製品生產版本
	MajorVersion string `protobuf:"bytes,7,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	//中間製品目前階段
	CurrentProcessName string `protobuf:"bytes,8,opt,name=current_process_name,json=currentProcessName,proto3" json:"current_process_name,omitempty"`
	//中間製品排程階段
	NextProcessName string `protobuf:"bytes,9,opt,name=next_process_name,json=nextProcessName,proto3" json:"next_process_name,omitempty"`
	//工單狀態
	Status code.LotStatus `protobuf:"varint,10,opt,name=status,proto3,enum=proto.mes.code.LotStatus" json:"status,omitempty"`
	//排程日期
	ReservedDate string `protobuf:"bytes,11,opt,name=reserved_date,json=reservedDate,proto3" json:"reserved_date,omitempty"`
	//排程班別
	ReservedShift string `protobuf:"bytes,12,opt,name=reserved_shift,json=reservedShift,proto3" json:"reserved_shift,omitempty"`
	//作業組別
	DepartmentId string `protobuf:"bytes,13,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	//排程序號
	ShiftSeq string `protobuf:"bytes,14,opt,name=shift_seq,json=shiftSeq,proto3" json:"shift_seq,omitempty"`
	//已投料數量
	MoveInQty float32 `protobuf:"fixed32,15,opt,name=move_in_qty,json=moveInQty,proto3" json:"move_in_qty,omitempty"`
	//已收料數量
	MoveOutQty float32 `protobuf:"fixed32,16,opt,name=move_out_qty,json=moveOutQty,proto3" json:"move_out_qty,omitempty"`
	//計畫產量
	PlanOptQty float32 `protobuf:"fixed32,17,opt,name=plan_opt_qty,json=planOptQty,proto3" json:"plan_opt_qty,omitempty"`
	//總首數
	PlanSheetCount int32 `protobuf:"varint,18,opt,name=plan_sheet_count,json=planSheetCount,proto3" json:"plan_sheet_count,omitempty"`
	//已投料首數
	InSheetCount int32 `protobuf:"varint,19,opt,name=in_sheet_count,json=inSheetCount,proto3" json:"in_sheet_count,omitempty"`
	//已收料首數
	OutSheetCount int32 `protobuf:"varint,20,opt,name=out_sheet_count,json=outSheetCount,proto3" json:"out_sheet_count,omitempty"`
	//修改日期
	UpdateAt string `protobuf:"bytes,21,opt,name=update_at,json=updateAt,proto3" json:"update_at,omitempty"`
	//操作者
	UpdateBy string `protobuf:"bytes,22,opt,name=update_by,json=updateBy,proto3" json:"update_by,omitempty"`
	//建立日期
	InsertAt string `protobuf:"bytes,23,opt,name=insert_at,json=insertAt,proto3" json:"insert_at,omitempty"`
	//建立者
	InsertBy string `protobuf:"bytes,24,opt,name=insert_by,json=insertBy,proto3" json:"insert_by,omitempty"`
	//工單是否須作業「Y」可排程，「N」不作業
	RunFlag string `protobuf:"bytes,25,opt,name=run_flag,json=runFlag,proto3" json:"run_flag,omitempty"`
	//產品類別
	ProductType rs.ProductType `protobuf:"varint,26,opt,name=product_type,json=productType,proto3,enum=proto.dm.rs.ProductType" json:"product_type,omitempty"`
	//下站機台ID
	RecipeEquipmentId    string   `protobuf:"bytes,27,opt,name=recipe_equipment_id,json=recipeEquipmentId,proto3" json:"recipe_equipment_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkOrder) Reset()         { *m = WorkOrder{} }
func (m *WorkOrder) String() string { return proto.CompactTextString(m) }
func (*WorkOrder) ProtoMessage()    {}
func (*WorkOrder) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{4}
}

func (m *WorkOrder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrder.Unmarshal(m, b)
}
func (m *WorkOrder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrder.Marshal(b, m, deterministic)
}
func (m *WorkOrder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrder.Merge(m, src)
}
func (m *WorkOrder) XXX_Size() int {
	return xxx_messageInfo_WorkOrder.Size(m)
}
func (m *WorkOrder) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrder.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrder proto.InternalMessageInfo

func (m *WorkOrder) GetFactoryId() rs.FactoryID {
	if m != nil {
		return m.FactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *WorkOrder) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *WorkOrder) GetRecipeId() string {
	if m != nil {
		return m.RecipeId
	}
	return ""
}

func (m *WorkOrder) GetReservedEquipmentId() string {
	if m != nil {
		return m.ReservedEquipmentId
	}
	return ""
}

func (m *WorkOrder) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *WorkOrder) GetStageStatus() rs.StageStatus {
	if m != nil {
		return m.StageStatus
	}
	return rs.StageStatus_STAGE_STATUS_UNSPECIFIED
}

func (m *WorkOrder) GetMajorVersion() string {
	if m != nil {
		return m.MajorVersion
	}
	return ""
}

func (m *WorkOrder) GetCurrentProcessName() string {
	if m != nil {
		return m.CurrentProcessName
	}
	return ""
}

func (m *WorkOrder) GetNextProcessName() string {
	if m != nil {
		return m.NextProcessName
	}
	return ""
}

func (m *WorkOrder) GetStatus() code.LotStatus {
	if m != nil {
		return m.Status
	}
	return code.LotStatus_LOT_STATUS_UNSPECIFIED
}

func (m *WorkOrder) GetReservedDate() string {
	if m != nil {
		return m.ReservedDate
	}
	return ""
}

func (m *WorkOrder) GetReservedShift() string {
	if m != nil {
		return m.ReservedShift
	}
	return ""
}

func (m *WorkOrder) GetDepartmentId() string {
	if m != nil {
		return m.DepartmentId
	}
	return ""
}

func (m *WorkOrder) GetShiftSeq() string {
	if m != nil {
		return m.ShiftSeq
	}
	return ""
}

func (m *WorkOrder) GetMoveInQty() float32 {
	if m != nil {
		return m.MoveInQty
	}
	return 0
}

func (m *WorkOrder) GetMoveOutQty() float32 {
	if m != nil {
		return m.MoveOutQty
	}
	return 0
}

func (m *WorkOrder) GetPlanOptQty() float32 {
	if m != nil {
		return m.PlanOptQty
	}
	return 0
}

func (m *WorkOrder) GetPlanSheetCount() int32 {
	if m != nil {
		return m.PlanSheetCount
	}
	return 0
}

func (m *WorkOrder) GetInSheetCount() int32 {
	if m != nil {
		return m.InSheetCount
	}
	return 0
}

func (m *WorkOrder) GetOutSheetCount() int32 {
	if m != nil {
		return m.OutSheetCount
	}
	return 0
}

func (m *WorkOrder) GetUpdateAt() string {
	if m != nil {
		return m.UpdateAt
	}
	return ""
}

func (m *WorkOrder) GetUpdateBy() string {
	if m != nil {
		return m.UpdateBy
	}
	return ""
}

func (m *WorkOrder) GetInsertAt() string {
	if m != nil {
		return m.InsertAt
	}
	return ""
}

func (m *WorkOrder) GetInsertBy() string {
	if m != nil {
		return m.InsertBy
	}
	return ""
}

func (m *WorkOrder) GetRunFlag() string {
	if m != nil {
		return m.RunFlag
	}
	return ""
}

func (m *WorkOrder) GetProductType() rs.ProductType {
	if m != nil {
		return m.ProductType
	}
	return rs.ProductType_PRODUCT_TYPE_UNSPECIFIED
}

func (m *WorkOrder) GetRecipeEquipmentId() string {
	if m != nil {
		return m.RecipeEquipmentId
	}
	return ""
}

// 建立工單請求
type CreateWorkOrderRequest struct {
	//廠別
	FactoryId rs.FactoryID `protobuf:"varint,1,opt,name=factory_id,json=factoryId,proto3,enum=proto.dm.rs.FactoryID" json:"factory_id,omitempty"`
	//配方號
	RecipeId string `protobuf:"bytes,2,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	//產品ID
	ProductId string `protobuf:"bytes,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	//產品類別
	ProductType rs.ProductType `protobuf:"varint,4,opt,name=product_type,json=productType,proto3,enum=proto.dm.rs.ProductType" json:"product_type,omitempty"`
	//配方生產別
	StageStatus rs.StageStatus `protobuf:"varint,5,opt,name=stage_status,json=stageStatus,proto3,enum=proto.dm.rs.StageStatus" json:"stage_status,omitempty"`
	//主版本序號
	MajorVersion string `protobuf:"bytes,6,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	//計畫數量
	PlanQty float32 `protobuf:"fixed32,7,opt,name=plan_qty,json=planQty,proto3" json:"plan_qty,omitempty"`
	//操作者
	ClaimBy string `protobuf:"bytes,8,opt,name=claim_by,json=claimBy,proto3" json:"claim_by,omitempty"`
	//部門代號
	DepartmentId string `protobuf:"bytes,9,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`
	//以下以後可能重工會用到
	//途程名稱
	ReworkProcessName string `protobuf:"bytes,10,opt,name=rework_process_name,json=reworkProcessName,proto3" json:"rework_process_name,omitempty"`
	//途程類型
	ReworkProcessType    rs.ProcessType `protobuf:"varint,11,opt,name=rework_process_type,json=reworkProcessType,proto3,enum=proto.dm.rs.ProcessType" json:"rework_process_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateWorkOrderRequest) Reset()         { *m = CreateWorkOrderRequest{} }
func (m *CreateWorkOrderRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkOrderRequest) ProtoMessage()    {}
func (*CreateWorkOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{5}
}

func (m *CreateWorkOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkOrderRequest.Unmarshal(m, b)
}
func (m *CreateWorkOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkOrderRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkOrderRequest.Merge(m, src)
}
func (m *CreateWorkOrderRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkOrderRequest.Size(m)
}
func (m *CreateWorkOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkOrderRequest proto.InternalMessageInfo

func (m *CreateWorkOrderRequest) GetFactoryId() rs.FactoryID {
	if m != nil {
		return m.FactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *CreateWorkOrderRequest) GetRecipeId() string {
	if m != nil {
		return m.RecipeId
	}
	return ""
}

func (m *CreateWorkOrderRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CreateWorkOrderRequest) GetProductType() rs.ProductType {
	if m != nil {
		return m.ProductType
	}
	return rs.ProductType_PRODUCT_TYPE_UNSPECIFIED
}

func (m *CreateWorkOrderRequest) GetStageStatus() rs.StageStatus {
	if m != nil {
		return m.StageStatus
	}
	return rs.StageStatus_STAGE_STATUS_UNSPECIFIED
}

func (m *CreateWorkOrderRequest) GetMajorVersion() string {
	if m != nil {
		return m.MajorVersion
	}
	return ""
}

func (m *CreateWorkOrderRequest) GetPlanQty() float32 {
	if m != nil {
		return m.PlanQty
	}
	return 0
}

func (m *CreateWorkOrderRequest) GetClaimBy() string {
	if m != nil {
		return m.ClaimBy
	}
	return ""
}

func (m *CreateWorkOrderRequest) GetDepartmentId() string {
	if m != nil {
		return m.DepartmentId
	}
	return ""
}

func (m *CreateWorkOrderRequest) GetReworkProcessName() string {
	if m != nil {
		return m.ReworkProcessName
	}
	return ""
}

func (m *CreateWorkOrderRequest) GetReworkProcessType() rs.ProcessType {
	if m != nil {
		return m.ReworkProcessType
	}
	return rs.ProcessType_PROCESS_TYPE_UNSPECIFIED
}

// 建立工單回應
type CreateWorkOrderReply struct {
	//工單編號
	LotId string `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//產品編號
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	//配方生產別
	StageStatus rs.StageStatus `protobuf:"varint,3,opt,name=stage_status,json=stageStatus,proto3,enum=proto.dm.rs.StageStatus" json:"stage_status,omitempty"`
	//配方版本
	MajorVersion string `protobuf:"bytes,4,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	//途程清單
	Processes            []*CreateWorkOrderReply_Process `protobuf:"bytes,5,rep,name=processes,proto3" json:"processes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CreateWorkOrderReply) Reset()         { *m = CreateWorkOrderReply{} }
func (m *CreateWorkOrderReply) String() string { return proto.CompactTextString(m) }
func (*CreateWorkOrderReply) ProtoMessage()    {}
func (*CreateWorkOrderReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{6}
}

func (m *CreateWorkOrderReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkOrderReply.Unmarshal(m, b)
}
func (m *CreateWorkOrderReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkOrderReply.Marshal(b, m, deterministic)
}
func (m *CreateWorkOrderReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkOrderReply.Merge(m, src)
}
func (m *CreateWorkOrderReply) XXX_Size() int {
	return xxx_messageInfo_CreateWorkOrderReply.Size(m)
}
func (m *CreateWorkOrderReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkOrderReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkOrderReply proto.InternalMessageInfo

func (m *CreateWorkOrderReply) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *CreateWorkOrderReply) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *CreateWorkOrderReply) GetStageStatus() rs.StageStatus {
	if m != nil {
		return m.StageStatus
	}
	return rs.StageStatus_STAGE_STATUS_UNSPECIFIED
}

func (m *CreateWorkOrderReply) GetMajorVersion() string {
	if m != nil {
		return m.MajorVersion
	}
	return ""
}

func (m *CreateWorkOrderReply) GetProcesses() []*CreateWorkOrderReply_Process {
	if m != nil {
		return m.Processes
	}
	return nil
}

//途程
type CreateWorkOrderReply_Process struct {
	//當前站名
	CurrentProcessName string `protobuf:"bytes,1,opt,name=current_process_name,json=currentProcessName,proto3" json:"current_process_name,omitempty"`
	//下站名
	NextProcessName string `protobuf:"bytes,2,opt,name=next_process_name,json=nextProcessName,proto3" json:"next_process_name,omitempty"`
	//計畫量
	PlanQty              float32  `protobuf:"fixed32,3,opt,name=plan_qty,json=planQty,proto3" json:"plan_qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWorkOrderReply_Process) Reset()         { *m = CreateWorkOrderReply_Process{} }
func (m *CreateWorkOrderReply_Process) String() string { return proto.CompactTextString(m) }
func (*CreateWorkOrderReply_Process) ProtoMessage()    {}
func (*CreateWorkOrderReply_Process) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{6, 0}
}

func (m *CreateWorkOrderReply_Process) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkOrderReply_Process.Unmarshal(m, b)
}
func (m *CreateWorkOrderReply_Process) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkOrderReply_Process.Marshal(b, m, deterministic)
}
func (m *CreateWorkOrderReply_Process) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkOrderReply_Process.Merge(m, src)
}
func (m *CreateWorkOrderReply_Process) XXX_Size() int {
	return xxx_messageInfo_CreateWorkOrderReply_Process.Size(m)
}
func (m *CreateWorkOrderReply_Process) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkOrderReply_Process.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkOrderReply_Process proto.InternalMessageInfo

func (m *CreateWorkOrderReply_Process) GetCurrentProcessName() string {
	if m != nil {
		return m.CurrentProcessName
	}
	return ""
}

func (m *CreateWorkOrderReply_Process) GetNextProcessName() string {
	if m != nil {
		return m.NextProcessName
	}
	return ""
}

func (m *CreateWorkOrderReply_Process) GetPlanQty() float32 {
	if m != nil {
		return m.PlanQty
	}
	return 0
}

// 建立工單請求
type CreateWorkOrderNewRequest struct {
	// 廠別
	FactoryId rs.FactoryID `protobuf:"varint,1,opt,name=factoryId,proto3,enum=proto.dm.rs.FactoryID" json:"factoryId,omitempty"`
	// 部門代號
	DepartmentId string `protobuf:"bytes,2,opt,name=departmentId,proto3" json:"departmentId,omitempty"`
	// 產品類別
	ProductType rs.ProductType `protobuf:"varint,3,opt,name=productType,proto3,enum=proto.dm.rs.ProductType" json:"productType,omitempty"`
	// 配方號
	RecipeId string `protobuf:"bytes,4,opt,name=recipeId,proto3" json:"recipeId,omitempty"`
	// 計畫數量
	PlanQty string `protobuf:"bytes,5,opt,name=planQty,proto3" json:"planQty,omitempty"`
	// 以下以後可能重工會用到
	// 途程名稱
	ReworkName string `protobuf:"bytes,6,opt,name=reworkName,proto3" json:"reworkName,omitempty"`
	// 途程類別
	ReworkType           rs.ProductType `protobuf:"varint,7,opt,name=reworkType,proto3,enum=proto.dm.rs.ProductType" json:"reworkType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateWorkOrderNewRequest) Reset()         { *m = CreateWorkOrderNewRequest{} }
func (m *CreateWorkOrderNewRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWorkOrderNewRequest) ProtoMessage()    {}
func (*CreateWorkOrderNewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{7}
}

func (m *CreateWorkOrderNewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkOrderNewRequest.Unmarshal(m, b)
}
func (m *CreateWorkOrderNewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkOrderNewRequest.Marshal(b, m, deterministic)
}
func (m *CreateWorkOrderNewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkOrderNewRequest.Merge(m, src)
}
func (m *CreateWorkOrderNewRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWorkOrderNewRequest.Size(m)
}
func (m *CreateWorkOrderNewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkOrderNewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkOrderNewRequest proto.InternalMessageInfo

func (m *CreateWorkOrderNewRequest) GetFactoryId() rs.FactoryID {
	if m != nil {
		return m.FactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *CreateWorkOrderNewRequest) GetDepartmentId() string {
	if m != nil {
		return m.DepartmentId
	}
	return ""
}

func (m *CreateWorkOrderNewRequest) GetProductType() rs.ProductType {
	if m != nil {
		return m.ProductType
	}
	return rs.ProductType_PRODUCT_TYPE_UNSPECIFIED
}

func (m *CreateWorkOrderNewRequest) GetRecipeId() string {
	if m != nil {
		return m.RecipeId
	}
	return ""
}

func (m *CreateWorkOrderNewRequest) GetPlanQty() string {
	if m != nil {
		return m.PlanQty
	}
	return ""
}

func (m *CreateWorkOrderNewRequest) GetReworkName() string {
	if m != nil {
		return m.ReworkName
	}
	return ""
}

func (m *CreateWorkOrderNewRequest) GetReworkType() rs.ProductType {
	if m != nil {
		return m.ReworkType
	}
	return rs.ProductType_PRODUCT_TYPE_UNSPECIFIED
}

// 建立工單回應
type CreateWorkOrderNewReply struct {
	// 錯誤訊息
	Error error1.WorkOrderOperating `protobuf:"varint,1,opt,name=error,proto3,enum=proto.mes.code.error.WorkOrderOperating" json:"error,omitempty"`
	// 新增工單清單
	List                 []*WorkOrderInfo `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateWorkOrderNewReply) Reset()         { *m = CreateWorkOrderNewReply{} }
func (m *CreateWorkOrderNewReply) String() string { return proto.CompactTextString(m) }
func (*CreateWorkOrderNewReply) ProtoMessage()    {}
func (*CreateWorkOrderNewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{8}
}

func (m *CreateWorkOrderNewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWorkOrderNewReply.Unmarshal(m, b)
}
func (m *CreateWorkOrderNewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWorkOrderNewReply.Marshal(b, m, deterministic)
}
func (m *CreateWorkOrderNewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWorkOrderNewReply.Merge(m, src)
}
func (m *CreateWorkOrderNewReply) XXX_Size() int {
	return xxx_messageInfo_CreateWorkOrderNewReply.Size(m)
}
func (m *CreateWorkOrderNewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWorkOrderNewReply.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWorkOrderNewReply proto.InternalMessageInfo

func (m *CreateWorkOrderNewReply) GetError() error1.WorkOrderOperating {
	if m != nil {
		return m.Error
	}
	return error1.WorkOrderOperating_WORK_ORDER_OPERATING_SUCCESS
}

func (m *CreateWorkOrderNewReply) GetList() []*WorkOrderInfo {
	if m != nil {
		return m.List
	}
	return nil
}

// 更新工單請求
type UpdateWorkOrderNewRequest struct {
	// 是否派工
	AddToReserved bool `protobuf:"varint,1,opt,name=addToReserved,proto3" json:"addToReserved,omitempty"`
	// 工單資訊
	WorkOrders           []*WorkOrderInfo `protobuf:"bytes,2,rep,name=workOrders,proto3" json:"workOrders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateWorkOrderNewRequest) Reset()         { *m = UpdateWorkOrderNewRequest{} }
func (m *UpdateWorkOrderNewRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkOrderNewRequest) ProtoMessage()    {}
func (*UpdateWorkOrderNewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{9}
}

func (m *UpdateWorkOrderNewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkOrderNewRequest.Unmarshal(m, b)
}
func (m *UpdateWorkOrderNewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkOrderNewRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWorkOrderNewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkOrderNewRequest.Merge(m, src)
}
func (m *UpdateWorkOrderNewRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkOrderNewRequest.Size(m)
}
func (m *UpdateWorkOrderNewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkOrderNewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkOrderNewRequest proto.InternalMessageInfo

func (m *UpdateWorkOrderNewRequest) GetAddToReserved() bool {
	if m != nil {
		return m.AddToReserved
	}
	return false
}

func (m *UpdateWorkOrderNewRequest) GetWorkOrders() []*WorkOrderInfo {
	if m != nil {
		return m.WorkOrders
	}
	return nil
}

// 更新工單回應
type UpdateWorkOrderNewReply struct {
	// 錯誤訊息
	Error                error1.WorkOrderOperating `protobuf:"varint,1,opt,name=error,proto3,enum=proto.mes.code.error.WorkOrderOperating" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *UpdateWorkOrderNewReply) Reset()         { *m = UpdateWorkOrderNewReply{} }
func (m *UpdateWorkOrderNewReply) String() string { return proto.CompactTextString(m) }
func (*UpdateWorkOrderNewReply) ProtoMessage()    {}
func (*UpdateWorkOrderNewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{10}
}

func (m *UpdateWorkOrderNewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWorkOrderNewReply.Unmarshal(m, b)
}
func (m *UpdateWorkOrderNewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWorkOrderNewReply.Marshal(b, m, deterministic)
}
func (m *UpdateWorkOrderNewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWorkOrderNewReply.Merge(m, src)
}
func (m *UpdateWorkOrderNewReply) XXX_Size() int {
	return xxx_messageInfo_UpdateWorkOrderNewReply.Size(m)
}
func (m *UpdateWorkOrderNewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWorkOrderNewReply.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWorkOrderNewReply proto.InternalMessageInfo

func (m *UpdateWorkOrderNewReply) GetError() error1.WorkOrderOperating {
	if m != nil {
		return m.Error
	}
	return error1.WorkOrderOperating_WORK_ORDER_OPERATING_SUCCESS
}

// 查詢工單請求
type QueryWorkOrderNewRequest struct {
	// 廠別
	FactoryId rs.FactoryID `protobuf:"varint,1,opt,name=factoryId,proto3,enum=proto.dm.rs.FactoryID" json:"factoryId,omitempty"`
	// 部門代號
	DepartmentId string `protobuf:"bytes,2,opt,name=departmentId,proto3" json:"departmentId,omitempty"`
	// 配方號
	RecipeId string `protobuf:"bytes,3,opt,name=recipeId,proto3" json:"recipeId,omitempty"`
	// 主機台
	MainStation string `protobuf:"bytes,4,opt,name=mainStation,proto3" json:"mainStation,omitempty"`
	// 副機台
	AssociateStation string `protobuf:"bytes,5,opt,name=associateStation,proto3" json:"associateStation,omitempty"`
	// 派工日期
	ReservedWorkDate string `protobuf:"bytes,6,opt,name=reservedWorkDate,proto3" json:"reservedWorkDate,omitempty"`
	// 派工班別
	ReservedShift        int32    `protobuf:"varint,7,opt,name=reservedShift,proto3" json:"reservedShift,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryWorkOrderNewRequest) Reset()         { *m = QueryWorkOrderNewRequest{} }
func (m *QueryWorkOrderNewRequest) String() string { return proto.CompactTextString(m) }
func (*QueryWorkOrderNewRequest) ProtoMessage()    {}
func (*QueryWorkOrderNewRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{11}
}

func (m *QueryWorkOrderNewRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryWorkOrderNewRequest.Unmarshal(m, b)
}
func (m *QueryWorkOrderNewRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryWorkOrderNewRequest.Marshal(b, m, deterministic)
}
func (m *QueryWorkOrderNewRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWorkOrderNewRequest.Merge(m, src)
}
func (m *QueryWorkOrderNewRequest) XXX_Size() int {
	return xxx_messageInfo_QueryWorkOrderNewRequest.Size(m)
}
func (m *QueryWorkOrderNewRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWorkOrderNewRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryWorkOrderNewRequest proto.InternalMessageInfo

func (m *QueryWorkOrderNewRequest) GetFactoryId() rs.FactoryID {
	if m != nil {
		return m.FactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *QueryWorkOrderNewRequest) GetDepartmentId() string {
	if m != nil {
		return m.DepartmentId
	}
	return ""
}

func (m *QueryWorkOrderNewRequest) GetRecipeId() string {
	if m != nil {
		return m.RecipeId
	}
	return ""
}

func (m *QueryWorkOrderNewRequest) GetMainStation() string {
	if m != nil {
		return m.MainStation
	}
	return ""
}

func (m *QueryWorkOrderNewRequest) GetAssociateStation() string {
	if m != nil {
		return m.AssociateStation
	}
	return ""
}

func (m *QueryWorkOrderNewRequest) GetReservedWorkDate() string {
	if m != nil {
		return m.ReservedWorkDate
	}
	return ""
}

func (m *QueryWorkOrderNewRequest) GetReservedShift() int32 {
	if m != nil {
		return m.ReservedShift
	}
	return 0
}

// 查詢工單回應
type QueryWorkOrderNewReply struct {
	// 錯誤訊息
	Error error1.WorkOrderOperating `protobuf:"varint,1,opt,name=error,proto3,enum=proto.mes.code.error.WorkOrderOperating" json:"error,omitempty"`
	// 未派工/工單清單
	UnreservedList []*WorkOrderInfo `protobuf:"bytes,2,rep,name=unreservedList,proto3" json:"unreservedList,omitempty"`
	// 已派工工單清單
	ReservedList         []*WorkOrderInfo `protobuf:"bytes,3,rep,name=reservedList,proto3" json:"reservedList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueryWorkOrderNewReply) Reset()         { *m = QueryWorkOrderNewReply{} }
func (m *QueryWorkOrderNewReply) String() string { return proto.CompactTextString(m) }
func (*QueryWorkOrderNewReply) ProtoMessage()    {}
func (*QueryWorkOrderNewReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{12}
}

func (m *QueryWorkOrderNewReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryWorkOrderNewReply.Unmarshal(m, b)
}
func (m *QueryWorkOrderNewReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryWorkOrderNewReply.Marshal(b, m, deterministic)
}
func (m *QueryWorkOrderNewReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryWorkOrderNewReply.Merge(m, src)
}
func (m *QueryWorkOrderNewReply) XXX_Size() int {
	return xxx_messageInfo_QueryWorkOrderNewReply.Size(m)
}
func (m *QueryWorkOrderNewReply) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryWorkOrderNewReply.DiscardUnknown(m)
}

var xxx_messageInfo_QueryWorkOrderNewReply proto.InternalMessageInfo

func (m *QueryWorkOrderNewReply) GetError() error1.WorkOrderOperating {
	if m != nil {
		return m.Error
	}
	return error1.WorkOrderOperating_WORK_ORDER_OPERATING_SUCCESS
}

func (m *QueryWorkOrderNewReply) GetUnreservedList() []*WorkOrderInfo {
	if m != nil {
		return m.UnreservedList
	}
	return nil
}

func (m *QueryWorkOrderNewReply) GetReservedList() []*WorkOrderInfo {
	if m != nil {
		return m.ReservedList
	}
	return nil
}

// 工單資訊
type WorkOrderInfo struct {
	// 工單編號
	WorkOrder string `protobuf:"bytes,1,opt,name=workOrder,proto3" json:"workOrder,omitempty"`
	// 工單狀態
	Status workorder.Status `protobuf:"varint,2,opt,name=status,proto3,enum=proto.mes.v2.workorder.Status" json:"status,omitempty"`
	// 廠別
	FactoryId rs.FactoryID `protobuf:"varint,3,opt,name=factoryId,proto3,enum=proto.dm.rs.FactoryID" json:"factoryId,omitempty"`
	// 怒門代號
	DepartmentId string `protobuf:"bytes,4,opt,name=departmentId,proto3" json:"departmentId,omitempty"`
	// 產品類別
	ProductType rs.ProductType `protobuf:"varint,5,opt,name=productType,proto3,enum=proto.dm.rs.ProductType" json:"productType,omitempty"`
	// 配方編號
	RecipeId string `protobuf:"bytes,6,opt,name=recipeId,proto3" json:"recipeId,omitempty"`
	// 站名
	ProcessName string `protobuf:"bytes,7,opt,name=processName,proto3" json:"processName,omitempty"`
	// 重工
	ReworkName string `protobuf:"bytes,8,opt,name=reworkName,proto3" json:"reworkName,omitempty"`
	// 派工日期
	ReservedWorkDate string `protobuf:"bytes,9,opt,name=reservedWorkDate,proto3" json:"reservedWorkDate,omitempty"`
	// 派工班別
	ReservedShift int32 `protobuf:"varint,10,opt,name=reservedShift,proto3" json:"reservedShift,omitempty"`
	// 工單序號
	ReservedShiftSequence int32 `protobuf:"varint,11,opt,name=reservedShiftSequence,proto3" json:"reservedShiftSequence,omitempty"`
	// 主機台
	MainStation string `protobuf:"bytes,12,opt,name=mainStation,proto3" json:"mainStation,omitempty"`
	// 副機台
	AssociateStation string `protobuf:"bytes,13,opt,name=associateStation,proto3" json:"associateStation,omitempty"`
	// 計畫量
	PlanQty string `protobuf:"bytes,14,opt,name=planQty,proto3" json:"planQty,omitempty"`
	// 計畫首
	PlanBatch int32 `protobuf:"varint,15,opt,name=planBatch,proto3" json:"planBatch,omitempty"`
	// 計畫量
	InQty string `protobuf:"bytes,16,opt,name=inQty,proto3" json:"inQty,omitempty"`
	// 計畫首
	InBatch int32 `protobuf:"varint,17,opt,name=inBatch,proto3" json:"inBatch,omitempty"`
	// 計畫量
	OutQty string `protobuf:"bytes,18,opt,name=outQty,proto3" json:"outQty,omitempty"`
	// 計畫首
	OutBatch int32 `protobuf:"varint,19,opt,name=outBatch,proto3" json:"outBatch,omitempty"`
	// 計量單位
	Unit string `protobuf:"bytes,20,opt,name=unit,proto3" json:"unit,omitempty"`
	// 建立日期
	InsertedAt string `protobuf:"bytes,21,opt,name=insertedAt,proto3" json:"insertedAt,omitempty"`
	// 建立人員
	InsertedBy string `protobuf:"bytes,22,opt,name=insertedBy,proto3" json:"insertedBy,omitempty"`
	// 更新日期
	UpdatedAt string `protobuf:"bytes,23,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	// 更新人員
	UpdatedBy string `protobuf:"bytes,24,opt,name=updatedBy,proto3" json:"updatedBy,omitempty"`
	// 備註
	Note                 string   `protobuf:"bytes,25,opt,name=note,proto3" json:"note,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkOrderInfo) Reset()         { *m = WorkOrderInfo{} }
func (m *WorkOrderInfo) String() string { return proto.CompactTextString(m) }
func (*WorkOrderInfo) ProtoMessage()    {}
func (*WorkOrderInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f50d4b0a483387a6, []int{13}
}

func (m *WorkOrderInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkOrderInfo.Unmarshal(m, b)
}
func (m *WorkOrderInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkOrderInfo.Marshal(b, m, deterministic)
}
func (m *WorkOrderInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkOrderInfo.Merge(m, src)
}
func (m *WorkOrderInfo) XXX_Size() int {
	return xxx_messageInfo_WorkOrderInfo.Size(m)
}
func (m *WorkOrderInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkOrderInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WorkOrderInfo proto.InternalMessageInfo

func (m *WorkOrderInfo) GetWorkOrder() string {
	if m != nil {
		return m.WorkOrder
	}
	return ""
}

func (m *WorkOrderInfo) GetStatus() workorder.Status {
	if m != nil {
		return m.Status
	}
	return workorder.Status_PENDING
}

func (m *WorkOrderInfo) GetFactoryId() rs.FactoryID {
	if m != nil {
		return m.FactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *WorkOrderInfo) GetDepartmentId() string {
	if m != nil {
		return m.DepartmentId
	}
	return ""
}

func (m *WorkOrderInfo) GetProductType() rs.ProductType {
	if m != nil {
		return m.ProductType
	}
	return rs.ProductType_PRODUCT_TYPE_UNSPECIFIED
}

func (m *WorkOrderInfo) GetRecipeId() string {
	if m != nil {
		return m.RecipeId
	}
	return ""
}

func (m *WorkOrderInfo) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *WorkOrderInfo) GetReworkName() string {
	if m != nil {
		return m.ReworkName
	}
	return ""
}

func (m *WorkOrderInfo) GetReservedWorkDate() string {
	if m != nil {
		return m.ReservedWorkDate
	}
	return ""
}

func (m *WorkOrderInfo) GetReservedShift() int32 {
	if m != nil {
		return m.ReservedShift
	}
	return 0
}

func (m *WorkOrderInfo) GetReservedShiftSequence() int32 {
	if m != nil {
		return m.ReservedShiftSequence
	}
	return 0
}

func (m *WorkOrderInfo) GetMainStation() string {
	if m != nil {
		return m.MainStation
	}
	return ""
}

func (m *WorkOrderInfo) GetAssociateStation() string {
	if m != nil {
		return m.AssociateStation
	}
	return ""
}

func (m *WorkOrderInfo) GetPlanQty() string {
	if m != nil {
		return m.PlanQty
	}
	return ""
}

func (m *WorkOrderInfo) GetPlanBatch() int32 {
	if m != nil {
		return m.PlanBatch
	}
	return 0
}

func (m *WorkOrderInfo) GetInQty() string {
	if m != nil {
		return m.InQty
	}
	return ""
}

func (m *WorkOrderInfo) GetInBatch() int32 {
	if m != nil {
		return m.InBatch
	}
	return 0
}

func (m *WorkOrderInfo) GetOutQty() string {
	if m != nil {
		return m.OutQty
	}
	return ""
}

func (m *WorkOrderInfo) GetOutBatch() int32 {
	if m != nil {
		return m.OutBatch
	}
	return 0
}

func (m *WorkOrderInfo) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *WorkOrderInfo) GetInsertedAt() string {
	if m != nil {
		return m.InsertedAt
	}
	return ""
}

func (m *WorkOrderInfo) GetInsertedBy() string {
	if m != nil {
		return m.InsertedBy
	}
	return ""
}

func (m *WorkOrderInfo) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *WorkOrderInfo) GetUpdatedBy() string {
	if m != nil {
		return m.UpdatedBy
	}
	return ""
}

func (m *WorkOrderInfo) GetNote() string {
	if m != nil {
		return m.Note
	}
	return ""
}

func init() {
	proto.RegisterType((*WorkOrderOperatingPlcRequest)(nil), "proto.mes.WorkOrderOperatingPlcRequest")
	proto.RegisterType((*WorkOrderOperatingPlcReply)(nil), "proto.mes.WorkOrderOperatingPlcReply")
	proto.RegisterType((*WorkOrderOperatingPlcReply_WorkOrder)(nil), "proto.mes.WorkOrderOperatingPlcReply.WorkOrder")
	proto.RegisterType((*WorkOrderOperatingRequest)(nil), "proto.mes.WorkOrderOperatingRequest")
	proto.RegisterType((*WorkOrderOperatingRequest_GetPrepOrders)(nil), "proto.mes.WorkOrderOperatingRequest.GetPrepOrders")
	proto.RegisterType((*WorkOrderOperatingReply)(nil), "proto.mes.WorkOrderOperatingReply")
	proto.RegisterType((*WorkOrder)(nil), "proto.mes.WorkOrder")
	proto.RegisterType((*CreateWorkOrderRequest)(nil), "proto.mes.CreateWorkOrderRequest")
	proto.RegisterType((*CreateWorkOrderReply)(nil), "proto.mes.CreateWorkOrderReply")
	proto.RegisterType((*CreateWorkOrderReply_Process)(nil), "proto.mes.CreateWorkOrderReply.Process")
	proto.RegisterType((*CreateWorkOrderNewRequest)(nil), "proto.mes.CreateWorkOrderNewRequest")
	proto.RegisterType((*CreateWorkOrderNewReply)(nil), "proto.mes.CreateWorkOrderNewReply")
	proto.RegisterType((*UpdateWorkOrderNewRequest)(nil), "proto.mes.UpdateWorkOrderNewRequest")
	proto.RegisterType((*UpdateWorkOrderNewReply)(nil), "proto.mes.UpdateWorkOrderNewReply")
	proto.RegisterType((*QueryWorkOrderNewRequest)(nil), "proto.mes.QueryWorkOrderNewRequest")
	proto.RegisterType((*QueryWorkOrderNewReply)(nil), "proto.mes.QueryWorkOrderNewReply")
	proto.RegisterType((*WorkOrderInfo)(nil), "proto.mes.WorkOrderInfo")
}

func init() { proto.RegisterFile("work_order.proto", fileDescriptor_f50d4b0a483387a6) }

var fileDescriptor_f50d4b0a483387a6 = []byte{
	// 1890 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x59, 0x4f, 0x73, 0x1b, 0x49,
	0x15, 0x2f, 0x49, 0x96, 0xac, 0x79, 0xfa, 0x63, 0xbb, 0xe3, 0xd8, 0x63, 0x39, 0xbb, 0xa5, 0x15,
	0x9b, 0x5d, 0x57, 0xd8, 0x92, 0xc0, 0x6c, 0x80, 0xda, 0x85, 0x2d, 0xe2, 0xdd, 0x64, 0xd7, 0x55,
	0x9b, 0x4d, 0x32, 0x0e, 0xa4, 0xe0, 0xa2, 0x9a, 0x68, 0xda, 0xca, 0x10, 0xcd, 0xf4, 0xa4, 0xa7,
	0xc7, 0x46, 0xc5, 0x8d, 0x0b, 0x55, 0x7c, 0x0c, 0x3e, 0x01, 0x5f, 0x81, 0x2f, 0xc0, 0x15, 0xae,
	0x5c, 0xb8, 0x72, 0xe7, 0x02, 0xd5, 0xaf, 0x7b, 0x34, 0x3d, 0xa3, 0x51, 0x2c, 0x27, 0x29, 0x4e,
	0x56, 0xbf, 0xf7, 0x7b, 0xad, 0xee, 0xd7, 0xbf, 0xf7, 0x7b, 0xdd, 0x32, 0x6c, 0x5f, 0x32, 0xfe,
	0x72, 0xcc, 0xb8, 0x47, 0xf9, 0x30, 0xe2, 0x4c, 0x30, 0x62, 0xe1, 0x9f, 0x61, 0x40, 0xe3, 0xde,
	0x07, 0xf8, 0x71, 0x14, 0xd0, 0x78, 0x14, 0x71, 0xe6, 0x25, 0x13, 0xe1, 0xb3, 0x70, 0x34, 0x61,
	0x41, 0xc0, 0x42, 0x85, 0xee, 0xf5, 0x32, 0xc8, 0x84, 0x79, 0x74, 0x44, 0xc3, 0x24, 0x88, 0xb5,
	0xaf, 0x5f, 0xf4, 0x71, 0xce, 0x78, 0x0e, 0xb1, 0xaf, 0x10, 0x5e, 0x30, 0xe2, 0x71, 0xce, 0x61,
	0x9b, 0x0e, 0x4e, 0x27, 0x7e, 0x44, 0xb5, 0xe7, 0xfb, 0xd9, 0xa4, 0x82, 0xc6, 0xc2, 0x0f, 0xa7,
	0xa3, 0x29, 0x15, 0xe3, 0xc0, 0x15, 0x94, 0xfb, 0xee, 0x6c, 0x7c, 0x49, 0xfd, 0xe9, 0x0b, 0xa1,
	0xc1, 0x1f, 0x65, 0xe0, 0x8b, 0xe3, 0x91, 0xdc, 0x2a, 0xee, 0x34, 0xfb, 0xa4, 0x70, 0x83, 0xbf,
	0x55, 0xe0, 0xd6, 0x33, 0xc6, 0x5f, 0x3e, 0x92, 0xb6, 0x47, 0x11, 0xe5, 0xae, 0x9c, 0xf8, 0xf1,
	0x6c, 0xe2, 0xd0, 0x57, 0x09, 0x8d, 0x05, 0xf9, 0x02, 0x5a, 0x2e, 0xee, 0x7e, 0x2c, 0xe6, 0x11,
	0xb5, 0x2b, 0xfd, 0xca, 0x51, 0xf7, 0xf8, 0xbd, 0xe1, 0x22, 0x55, 0x43, 0xb9, 0xc1, 0xe1, 0x83,
	0x24, 0x44, 0xd0, 0x43, 0xe6, 0xd1, 0x99, 0x03, 0x2a, 0xe2, 0xe9, 0x3c, 0xa2, 0xe4, 0xee, 0x22,
	0x3e, 0x60, 0x1e, 0xb5, 0xab, 0x18, 0xbf, 0x5b, 0x8c, 0x97, 0x71, 0x69, 0x98, 0xfc, 0x4c, 0x3e,
	0x80, 0x36, 0x7d, 0x95, 0xf8, 0x51, 0x40, 0x43, 0x31, 0xf6, 0x3d, 0xbb, 0xd6, 0xaf, 0x1c, 0x59,
	0x4e, 0x6b, 0x61, 0x3b, 0xf5, 0xc8, 0x2e, 0xd4, 0x27, 0x2c, 0x09, 0x85, 0xbd, 0xd1, 0xaf, 0x1c,
	0xd5, 0x1d, 0x35, 0x18, 0xfc, 0xa9, 0x01, 0xbd, 0x15, 0x1b, 0x8a, 0x66, 0x73, 0xf2, 0x19, 0xd4,
	0x28, 0xe7, 0x7a, 0x1b, 0x47, 0xc5, 0x65, 0xe0, 0x39, 0x0d, 0x97, 0xc3, 0x1d, 0x19, 0x44, 0xbe,
	0x86, 0x06, 0xa6, 0x2e, 0xb6, 0xab, 0xfd, 0xda, 0x51, 0xeb, 0x78, 0x64, 0x84, 0xaf, 0xfe, 0xca,
	0xcc, 0xe5, 0xe8, 0xf0, 0xde, 0xbf, 0x36, 0xc0, 0x5a, 0x58, 0xc9, 0x4d, 0x68, 0xcc, 0x18, 0x6e,
	0xb2, 0x82, 0x9b, 0xac, 0xcf, 0x98, 0xdc, 0xde, 0x21, 0x58, 0xea, 0xf8, 0xa5, 0xa7, 0x8a, 0x9e,
	0xa6, 0x32, 0x9c, 0x7a, 0xe4, 0x07, 0xb0, 0x3b, 0x49, 0x38, 0x97, 0xc9, 0x89, 0x38, 0x9b, 0xd0,
	0x38, 0x1e, 0x87, 0x6e, 0x40, 0x75, 0x9a, 0x88, 0xf6, 0x3d, 0x56, 0xae, 0xef, 0xdc, 0x80, 0x92,
	0x3b, 0xb0, 0x13, 0xd2, 0xdf, 0x15, 0xe0, 0x1b, 0x08, 0xdf, 0x92, 0x0e, 0x13, 0xfb, 0x43, 0x68,
	0xc4, 0xc2, 0x15, 0x49, 0x6c, 0xd7, 0x31, 0x4f, 0x07, 0xc5, 0x3c, 0x7d, 0xcb, 0xc4, 0x19, 0x02,
	0x1c, 0x0d, 0x24, 0xb7, 0xa1, 0x1b, 0xbf, 0xf0, 0xcf, 0xc5, 0x38, 0x96, 0xbc, 0x09, 0x27, 0xd4,
	0x6e, 0xe0, 0xdc, 0x1d, 0xb4, 0x9e, 0x69, 0x23, 0x39, 0x80, 0x66, 0x34, 0x73, 0xc3, 0xf1, 0x2b,
	0x31, 0xb7, 0x37, 0xfb, 0x95, 0xa3, 0xaa, 0xb3, 0x29, 0xc7, 0x4f, 0xc4, 0x9c, 0xbc, 0x0f, 0xad,
	0x80, 0x5d, 0xd0, 0xb1, 0xaf, 0xbc, 0x4d, 0xf4, 0x5a, 0xd2, 0x74, 0x8a, 0xfe, 0x3e, 0xb4, 0xd1,
	0xcf, 0x12, 0x81, 0x00, 0x0b, 0x01, 0x20, 0x6d, 0x8f, 0x12, 0x21, 0x11, 0x47, 0xb0, 0x8d, 0x93,
	0xc7, 0x2f, 0x28, 0x15, 0x63, 0xc5, 0x0d, 0x40, 0x6e, 0x74, 0xa5, 0xfd, 0x4c, 0x9a, 0xbf, 0x94,
	0x56, 0xf2, 0x21, 0x74, 0xfd, 0x3c, 0xae, 0x85, 0xb8, 0xb6, 0x6f, 0xa2, 0x3e, 0x82, 0x2d, 0xf9,
	0x65, 0x26, 0xac, 0x8d, 0xb0, 0x0e, 0x4b, 0x84, 0x81, 0xfb, 0x06, 0xac, 0xb4, 0x08, 0x63, 0xbb,
	0x83, 0xd4, 0xb8, 0x63, 0x64, 0xec, 0x6b, 0x2a, 0x1e, 0x6a, 0xf7, 0x33, 0x2c, 0x51, 0x45, 0x8b,
	0xd4, 0xe6, 0x64, 0xc1, 0xe4, 0x36, 0xd4, 0x63, 0x41, 0xa3, 0xd8, 0xee, 0xe2, 0x2c, 0x5b, 0xc6,
	0x2c, 0x67, 0x82, 0x46, 0x8e, 0xf2, 0x92, 0x8f, 0xa1, 0x2e, 0x18, 0x9b, 0xc5, 0xf6, 0x16, 0xc2,
	0x76, 0x34, 0xcc, 0x0b, 0x86, 0x3c, 0x1e, 0x3e, 0x65, 0x6c, 0xe6, 0x28, 0xff, 0xe0, 0x9f, 0x75,
	0x38, 0x28, 0x61, 0xf3, 0x3b, 0x2a, 0xed, 0x8c, 0xb8, 0x55, 0x93, 0xb8, 0x6b, 0x94, 0xee, 0x21,
	0x58, 0xa8, 0xbe, 0x9e, 0x2b, 0x52, 0x12, 0x36, 0xa5, 0xe1, 0x2b, 0x57, 0x50, 0x59, 0xd7, 0x48,
	0x1a, 0x24, 0x9f, 0xe5, 0xa8, 0x01, 0xf9, 0x1e, 0x74, 0x3c, 0x1a, 0xb9, 0x5c, 0xa4, 0xd3, 0x2a,
	0x7e, 0xb5, 0x33, 0xe3, 0xa9, 0x27, 0x41, 0x9c, 0xc6, 0x94, 0x5f, 0x50, 0x6f, 0x7c, 0x3e, 0x73,
	0xa7, 0xc8, 0x31, 0xcb, 0x69, 0xa7, 0xc6, 0x07, 0x33, 0x77, 0x4a, 0xde, 0x03, 0xd0, 0x9a, 0x2e,
	0xa7, 0x69, 0x22, 0xc2, 0xd2, 0x96, 0x53, 0x4f, 0xba, 0x63, 0xe1, 0x72, 0xa1, 0x16, 0x67, 0x29,
	0x37, 0x5a, 0x70, 0x75, 0x07, 0xd0, 0xa4, 0xa1, 0xa7, 0x9c, 0x80, 0xce, 0x4d, 0x1a, 0x7a, 0xe8,
	0x3a, 0x04, 0x2b, 0x89, 0xa4, 0x63, 0xfc, 0x7c, 0x8e, 0x84, 0xb2, 0x9c, 0xa6, 0x32, 0x9c, 0xcc,
	0xc9, 0xe7, 0xd0, 0x4e, 0xbf, 0x15, 0xb3, 0xdd, 0xc6, 0x6c, 0xdb, 0xb9, 0xa3, 0x7b, 0xac, 0x00,
	0x32, 0xb9, 0x4e, 0x2b, 0xca, 0x06, 0xe4, 0x2e, 0xc0, 0xb9, 0x3b, 0x11, 0x8c, 0xcf, 0xe5, 0x92,
	0x3b, 0x18, 0xba, 0x97, 0x0b, 0x7d, 0xa0, 0xdc, 0xa7, 0x5f, 0x39, 0x96, 0x46, 0x9e, 0x7a, 0xe4,
	0x93, 0x85, 0x60, 0x29, 0x3e, 0xed, 0x96, 0x09, 0x56, 0xaa, 0x4a, 0xe4, 0x21, 0x34, 0x65, 0x3f,
	0x89, 0x38, 0x8d, 0xec, 0xad, 0x7e, 0xe5, 0xa8, 0x75, 0x7c, 0xfc, 0x5a, 0x81, 0xd3, 0x34, 0x92,
	0xfc, 0x7e, 0xcc, 0x69, 0x84, 0xce, 0xd8, 0xd9, 0x9c, 0xaa, 0x61, 0xef, 0x1c, 0x3a, 0x39, 0x8f,
	0xca, 0x3b, 0x8d, 0xc6, 0x98, 0x4b, 0xad, 0x75, 0x96, 0xb4, 0x9c, 0x49, 0x03, 0x4a, 0x83, 0x74,
	0xd3, 0x30, 0xe5, 0xd3, 0xa6, 0x1c, 0xdf, 0x0f, 0x91, 0x2e, 0xe8, 0xc2, 0xc4, 0x29, 0x3a, 0x21,
	0x56, 0xe6, 0x66, 0xf0, 0xf7, 0x0a, 0xec, 0x97, 0x2d, 0xee, 0x6d, 0xd5, 0xfe, 0xe7, 0xb0, 0xb5,
	0xe0, 0x52, 0x4e, 0xf6, 0xcb, 0xb3, 0xd8, 0x4d, 0xc1, 0x7a, 0xb7, 0xf7, 0x60, 0x27, 0x09, 0x8b,
	0x13, 0xd4, 0x5e, 0x33, 0xc1, 0x76, 0x06, 0x57, 0x53, 0x0c, 0xfe, 0xdc, 0x34, 0xdb, 0x44, 0x9e,
	0x03, 0x95, 0x75, 0x39, 0xb0, 0xa2, 0x48, 0x73, 0xdd, 0xa5, 0x56, 0xe8, 0x2e, 0xc7, 0x70, 0x73,
	0xb1, 0xf2, 0x5c, 0x29, 0xab, 0x52, 0xbd, 0x91, 0x3a, 0xef, 0x1b, 0x25, 0x9d, 0xaf, 0xaa, 0x7a,
	0xb1, 0xaa, 0x3e, 0x87, 0x76, 0x2c, 0xdc, 0x29, 0x1d, 0xeb, 0xc6, 0xd2, 0x28, 0xa1, 0xff, 0x99,
	0x04, 0xe8, 0xbe, 0xd2, 0x8a, 0xb3, 0x81, 0x2c, 0xeb, 0xc0, 0xfd, 0x2d, 0xe3, 0xe3, 0x0b, 0xca,
	0x63, 0x9f, 0x85, 0x69, 0x59, 0xa3, 0xf1, 0x57, 0xca, 0xb6, 0xb2, 0x25, 0x36, 0xaf, 0xd7, 0x12,
	0xad, 0xab, 0x5a, 0x22, 0xac, 0xdb, 0x12, 0x4d, 0x31, 0x42, 0xb9, 0x68, 0xe5, 0xc5, 0x08, 0x35,
	0xe3, 0x36, 0x2c, 0x88, 0x33, 0x56, 0xaa, 0xd7, 0x56, 0x7d, 0x33, 0xb5, 0x9e, 0x95, 0xab, 0x5f,
	0xa7, 0x44, 0xfd, 0x0e, 0xc1, 0x5a, 0xf4, 0x60, 0xbb, 0xab, 0xce, 0x34, 0x6d, 0xbf, 0xc5, 0xf6,
	0xba, 0x75, 0x55, 0x7b, 0xdd, 0x5e, 0x6a, 0xaf, 0x7d, 0x68, 0x63, 0x7b, 0x65, 0x91, 0x42, 0xec,
	0x28, 0x84, 0xb4, 0x3d, 0x8a, 0x56, 0x36, 0x60, 0xb2, 0x66, 0x03, 0xbe, 0xb1, 0x5e, 0x03, 0xde,
	0x2d, 0x6b, 0xc0, 0x99, 0xf0, 0xba, 0xc2, 0xbe, 0x69, 0x0a, 0xef, 0x3d, 0x91, 0x57, 0xe5, 0xbd,
	0x82, 0x2a, 0x1f, 0x82, 0xe5, 0x87, 0x31, 0xe5, 0x42, 0x46, 0xee, 0x2b, 0xa7, 0x32, 0xa8, 0x48,
	0xed, 0x7c, 0x3e, 0xb7, 0x6d, 0xd3, 0x79, 0x32, 0x97, 0x72, 0xc5, 0x93, 0x50, 0x75, 0x99, 0x03,
	0x25, 0x57, 0x3c, 0x09, 0xb1, 0xc1, 0x14, 0xa5, 0xbe, 0x77, 0x1d, 0xa9, 0x1f, 0xc2, 0x0d, 0x5d,
	0x98, 0xb9, 0xca, 0x3b, 0xc4, 0xaf, 0xd8, 0x51, 0x2e, 0xa3, 0xee, 0x06, 0xff, 0xad, 0xc1, 0xde,
	0x97, 0x9c, 0xba, 0x82, 0x66, 0x52, 0xa2, 0xfb, 0xfb, 0x1b, 0x2a, 0xc6, 0x6b, 0x2f, 0x9e, 0xf9,
	0x32, 0xaf, 0x95, 0x94, 0x79, 0x6e, 0xeb, 0x1b, 0xd7, 0xd9, 0x7a, 0x51, 0x23, 0xea, 0x6f, 0xa5,
	0x11, 0x8d, 0x12, 0x8d, 0x78, 0xcd, 0xf5, 0xf3, 0x00, 0x9a, 0x93, 0x99, 0xeb, 0x07, 0xf2, 0xac,
	0x95, 0x64, 0x6c, 0xe2, 0xf8, 0x64, 0xbe, 0x5c, 0x7c, 0x56, 0x49, 0xf1, 0xe1, 0xb9, 0xe1, 0xa5,
	0x26, 0x27, 0x27, 0x90, 0x9e, 0x9b, 0x74, 0x99, 0x82, 0xf2, 0xcd, 0x12, 0x1e, 0x13, 0xd6, 0x2a,
	0x4f, 0x98, 0x04, 0x60, 0xc2, 0xf2, 0x33, 0x61, 0x03, 0xfc, 0x4f, 0x15, 0x76, 0x97, 0x18, 0x20,
	0xbb, 0xdf, 0x8a, 0x87, 0x45, 0xfe, 0x08, 0xab, 0x57, 0x29, 0x75, 0xed, 0xad, 0x4e, 0x61, 0xa3,
	0xe4, 0x14, 0xee, 0xcb, 0x76, 0x8e, 0xeb, 0xa7, 0xf2, 0x90, 0x65, 0x4b, 0xfc, 0xd8, 0x90, 0xd3,
	0xb2, 0xbd, 0xa4, 0x39, 0x70, 0xb2, 0xc8, 0xde, 0x1f, 0x2a, 0xb0, 0xa9, 0xcd, 0x2b, 0xc5, 0xbf,
	0x72, 0x3d, 0xf1, 0xaf, 0x96, 0x8b, 0xbf, 0x49, 0x9b, 0x5a, 0x8e, 0x36, 0x83, 0xbf, 0x56, 0xe1,
	0xa0, 0xb0, 0xe0, 0xef, 0xe8, 0x65, 0x5a, 0x81, 0x9f, 0x42, 0x56, 0x57, 0xeb, 0x17, 0xe0, 0x00,
	0x72, 0xd4, 0xd2, 0xab, 0xca, 0xd3, 0xed, 0x33, 0x30, 0x4b, 0xa7, 0xf4, 0x90, 0x56, 0xd6, 0x59,
	0x0f, 0x16, 0xf5, 0x9c, 0x5e, 0xbe, 0x17, 0xf5, 0x6d, 0x43, 0xba, 0x35, 0xdd, 0xc3, 0x8d, 0xf7,
	0x19, 0x28, 0xee, 0xc9, 0x94, 0xe8, 0xea, 0x32, 0x2c, 0xe4, 0xa7, 0xa9, 0x1f, 0x17, 0xb4, 0x79,
	0xc5, 0x82, 0x0c, 0xec, 0xe0, 0x8f, 0x15, 0xd8, 0x2f, 0xcb, 0xa1, 0xe4, 0xf0, 0x17, 0x50, 0xc7,
	0x6b, 0xda, 0xb5, 0xef, 0x70, 0x2a, 0x8c, 0x7c, 0x02, 0x1b, 0x33, 0x3f, 0x16, 0xfa, 0xea, 0x66,
	0x97, 0xdd, 0xbc, 0x4e, 0xc3, 0x73, 0xe6, 0x20, 0x6a, 0xf0, 0x7b, 0x38, 0xf8, 0x25, 0xb6, 0x86,
	0xb2, 0xc3, 0xfc, 0x10, 0x3a, 0xae, 0xe7, 0x3d, 0x65, 0x8e, 0xee, 0xcc, 0xb8, 0xa4, 0xa6, 0x93,
	0x37, 0xca, 0x34, 0x5c, 0xa6, 0xc1, 0xf1, 0x95, 0x5f, 0x6b, 0x60, 0x07, 0xbf, 0x86, 0xfd, 0xb2,
	0x2f, 0x7f, 0x07, 0x59, 0x18, 0xfc, 0xa5, 0x0a, 0xf6, 0x93, 0x84, 0xf2, 0xf9, 0xff, 0x97, 0xa4,
	0x26, 0xd1, 0x8a, 0x77, 0xcc, 0x3e, 0xb4, 0x02, 0xd7, 0x0f, 0xa5, 0x6e, 0x64, 0x3a, 0x61, 0x9a,
	0xc8, 0x1d, 0xd8, 0x76, 0xe3, 0x98, 0x4d, 0x7c, 0x57, 0xd0, 0x14, 0xa6, 0x38, 0xb9, 0x64, 0x97,
	0xd8, 0xf4, 0xc2, 0xf4, 0x4c, 0xbf, 0x23, 0x35, 0x45, 0x97, 0xec, 0xf2, 0x1c, 0x73, 0x97, 0x2b,
	0xe4, 0x6a, 0xbd, 0x70, 0xe3, 0x1a, 0xfc, 0xa3, 0x02, 0x7b, 0x25, 0x29, 0x7b, 0x17, 0x9c, 0xfc,
	0x05, 0x74, 0xb3, 0xbb, 0xfe, 0xb7, 0xeb, 0xb0, 0xb3, 0x80, 0x27, 0x3f, 0x83, 0x76, 0x2e, 0xbe,
	0x76, 0x45, 0x7c, 0x0e, 0x3d, 0xf8, 0x77, 0x03, 0x3a, 0x39, 0x3f, 0xb9, 0xa5, 0xde, 0xe3, 0x68,
	0x48, 0x5f, 0x66, 0x0b, 0x03, 0xf9, 0xf1, 0xe2, 0xee, 0xab, 0x7e, 0xbd, 0x7b, 0xdf, 0xf8, 0x9e,
	0x8b, 0xe3, 0x61, 0xf6, 0x93, 0x62, 0xe1, 0x02, 0x9c, 0x23, 0x56, 0xed, 0x4d, 0x89, 0xb5, 0x71,
	0xb5, 0xfa, 0xd5, 0xdf, 0x54, 0xfd, 0x1a, 0xcb, 0xa4, 0x8c, 0x32, 0xdd, 0xd7, 0xcf, 0x0c, 0xd3,
	0x54, 0x50, 0xc1, 0xe6, 0x92, 0x0a, 0x96, 0x11, 0xd1, 0x5a, 0x97, 0x88, 0x50, 0x42, 0x44, 0xf2,
	0x69, 0xf6, 0x18, 0x3b, 0x33, 0x7f, 0x4b, 0xd3, 0x3f, 0x59, 0x95, 0x3b, 0x8b, 0xe5, 0xd5, 0x5e,
	0xaf, 0xbc, 0x3a, 0x2b, 0xca, 0xcb, 0xe8, 0x0a, 0xdd, 0x7c, 0x57, 0xb8, 0x05, 0x96, 0xfc, 0x78,
	0xe2, 0x8a, 0xc9, 0x0b, 0x7c, 0x54, 0xd4, 0x9d, 0xcc, 0x40, 0x76, 0xa1, 0xee, 0x63, 0xd4, 0xb6,
	0xba, 0x80, 0xe0, 0x40, 0xce, 0xe6, 0xeb, 0x88, 0x1d, 0x8c, 0x48, 0x87, 0x64, 0x0f, 0x1a, 0x0c,
	0x1f, 0x1b, 0xf8, 0x6c, 0xb0, 0x1c, 0x3d, 0x92, 0x67, 0xc6, 0x12, 0xa1, 0x42, 0xd4, 0x43, 0x61,
	0x31, 0x26, 0x04, 0x36, 0x92, 0xd0, 0x57, 0x2f, 0x03, 0xcb, 0xc1, 0xcf, 0xf2, 0x94, 0xd4, 0x45,
	0x9d, 0x7a, 0xf7, 0xd2, 0x17, 0x81, 0x61, 0x31, 0xfd, 0x27, 0xe9, 0xa3, 0xc0, 0xb0, 0xc8, 0x5d,
	0xa9, 0x27, 0x82, 0x0c, 0x57, 0xcf, 0x82, 0xcc, 0x60, 0x78, 0x4f, 0xd2, 0x77, 0x41, 0x66, 0x90,
	0xeb, 0x09, 0x99, 0xa0, 0xfa, 0x51, 0x80, 0x9f, 0x4f, 0x7e, 0xf2, 0x9b, 0xbb, 0x53, 0x5f, 0xcc,
	0xdc, 0xe7, 0xc3, 0x97, 0x34, 0xf4, 0xdc, 0xe1, 0x84, 0x05, 0x43, 0x71, 0x39, 0xc2, 0x81, 0xfe,
	0xaf, 0x02, 0xfe, 0x4e, 0xaf, 0x7e, 0xb4, 0x9f, 0xb2, 0x99, 0x1b, 0x4e, 0x47, 0x01, 0x8d, 0x9f,
	0x37, 0xd0, 0xf2, 0xa3, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x1f, 0x90, 0x7f, 0xaf, 0xad, 0x18,
	0x00, 0x00,
}
