// Code generated by protoc-gen-go. DO NOT EDIT.
// source: equipment_material_operating.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	code "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code"
	error1 "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/mes/code/error"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//機台掛載材料操作請求
type EquipmentMaterialOperatingRequest struct {
	// 操作類別
	ActionType code.FunctionModel `protobuf:"varint,1,opt,name=action_type,json=actionType,proto3,enum=proto.mes.code.FunctionModel" json:"action_type,omitempty"`
	// 工位ID
	ActionOrder int32 `protobuf:"varint,2,opt,name=action_order,json=actionOrder,proto3" json:"action_order,omitempty"`
	// 工單號 -- 用來計算可投料次數用
	LotId string `protobuf:"bytes,3,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	//途程名稱 --不給也沒差, 預設抓取可投料工單, 一台設備不可能同時跑兩個投料途程
	ProcessName string `protobuf:"bytes,4,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	// 設備ID
	EquipmentId string `protobuf:"bytes,5,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
	// 材料條碼
	MaterialLotId        string   `protobuf:"bytes,6,opt,name=material_lot_id,json=materialLotId,proto3" json:"material_lot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipmentMaterialOperatingRequest) Reset()         { *m = EquipmentMaterialOperatingRequest{} }
func (m *EquipmentMaterialOperatingRequest) String() string { return proto.CompactTextString(m) }
func (*EquipmentMaterialOperatingRequest) ProtoMessage()    {}
func (*EquipmentMaterialOperatingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e79673f8b832970f, []int{0}
}

func (m *EquipmentMaterialOperatingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentMaterialOperatingRequest.Unmarshal(m, b)
}
func (m *EquipmentMaterialOperatingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentMaterialOperatingRequest.Marshal(b, m, deterministic)
}
func (m *EquipmentMaterialOperatingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentMaterialOperatingRequest.Merge(m, src)
}
func (m *EquipmentMaterialOperatingRequest) XXX_Size() int {
	return xxx_messageInfo_EquipmentMaterialOperatingRequest.Size(m)
}
func (m *EquipmentMaterialOperatingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentMaterialOperatingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentMaterialOperatingRequest proto.InternalMessageInfo

func (m *EquipmentMaterialOperatingRequest) GetActionType() code.FunctionModel {
	if m != nil {
		return m.ActionType
	}
	return code.FunctionModel_FUNCTION_MODEL_UNSPECIFIED
}

func (m *EquipmentMaterialOperatingRequest) GetActionOrder() int32 {
	if m != nil {
		return m.ActionOrder
	}
	return 0
}

func (m *EquipmentMaterialOperatingRequest) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *EquipmentMaterialOperatingRequest) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *EquipmentMaterialOperatingRequest) GetEquipmentId() string {
	if m != nil {
		return m.EquipmentId
	}
	return ""
}

func (m *EquipmentMaterialOperatingRequest) GetMaterialLotId() string {
	if m != nil {
		return m.MaterialLotId
	}
	return ""
}

//機台掛載材料操作回應
type EquipmentMaterialOperatingReply struct {
	// 錯誤代碼
	Err error1.EquipmentMaterialOperating `protobuf:"varint,1,opt,name=err,proto3,enum=proto.mes.code.error.EquipmentMaterialOperating" json:"err,omitempty"`
	// 掛載材料可投料次數 (base on process now running)
	MoveInCounter []*EquipmentMaterialOperatingReply_MoveInCounter `protobuf:"bytes,2,rep,name=move_in_counter,json=moveInCounter,proto3" json:"move_in_counter,omitempty"`
	// 掛載材料明細
	Materials            []*EquipmentMaterialOperatingReply_Material `protobuf:"bytes,3,rep,name=materials,proto3" json:"materials,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *EquipmentMaterialOperatingReply) Reset()         { *m = EquipmentMaterialOperatingReply{} }
func (m *EquipmentMaterialOperatingReply) String() string { return proto.CompactTextString(m) }
func (*EquipmentMaterialOperatingReply) ProtoMessage()    {}
func (*EquipmentMaterialOperatingReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_e79673f8b832970f, []int{1}
}

func (m *EquipmentMaterialOperatingReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentMaterialOperatingReply.Unmarshal(m, b)
}
func (m *EquipmentMaterialOperatingReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentMaterialOperatingReply.Marshal(b, m, deterministic)
}
func (m *EquipmentMaterialOperatingReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentMaterialOperatingReply.Merge(m, src)
}
func (m *EquipmentMaterialOperatingReply) XXX_Size() int {
	return xxx_messageInfo_EquipmentMaterialOperatingReply.Size(m)
}
func (m *EquipmentMaterialOperatingReply) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentMaterialOperatingReply.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentMaterialOperatingReply proto.InternalMessageInfo

func (m *EquipmentMaterialOperatingReply) GetErr() error1.EquipmentMaterialOperating {
	if m != nil {
		return m.Err
	}
	return error1.EquipmentMaterialOperating_EQUIPMENT_MATERIAL_OPERATING_SUCCESS
}

func (m *EquipmentMaterialOperatingReply) GetMoveInCounter() []*EquipmentMaterialOperatingReply_MoveInCounter {
	if m != nil {
		return m.MoveInCounter
	}
	return nil
}

func (m *EquipmentMaterialOperatingReply) GetMaterials() []*EquipmentMaterialOperatingReply_Material {
	if m != nil {
		return m.Materials
	}
	return nil
}

// 可投料次數計數
type EquipmentMaterialOperatingReply_MoveInCounter struct {
	// 桶槽描述
	ContainerDescription string `protobuf:"bytes,1,opt,name=container_description,json=containerDescription,proto3" json:"container_description,omitempty"`
	// 可投次數
	Qty float32 `protobuf:"fixed32,2,opt,name=qty,proto3" json:"qty,omitempty"`
	// TODO: remove this in future, 可有可無
	// 計量單位 -- 密煉-首, 成型-條
	Unit                 string   `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipmentMaterialOperatingReply_MoveInCounter) Reset() {
	*m = EquipmentMaterialOperatingReply_MoveInCounter{}
}
func (m *EquipmentMaterialOperatingReply_MoveInCounter) String() string {
	return proto.CompactTextString(m)
}
func (*EquipmentMaterialOperatingReply_MoveInCounter) ProtoMessage() {}
func (*EquipmentMaterialOperatingReply_MoveInCounter) Descriptor() ([]byte, []int) {
	return fileDescriptor_e79673f8b832970f, []int{1, 0}
}

func (m *EquipmentMaterialOperatingReply_MoveInCounter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentMaterialOperatingReply_MoveInCounter.Unmarshal(m, b)
}
func (m *EquipmentMaterialOperatingReply_MoveInCounter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentMaterialOperatingReply_MoveInCounter.Marshal(b, m, deterministic)
}
func (m *EquipmentMaterialOperatingReply_MoveInCounter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentMaterialOperatingReply_MoveInCounter.Merge(m, src)
}
func (m *EquipmentMaterialOperatingReply_MoveInCounter) XXX_Size() int {
	return xxx_messageInfo_EquipmentMaterialOperatingReply_MoveInCounter.Size(m)
}
func (m *EquipmentMaterialOperatingReply_MoveInCounter) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentMaterialOperatingReply_MoveInCounter.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentMaterialOperatingReply_MoveInCounter proto.InternalMessageInfo

func (m *EquipmentMaterialOperatingReply_MoveInCounter) GetContainerDescription() string {
	if m != nil {
		return m.ContainerDescription
	}
	return ""
}

func (m *EquipmentMaterialOperatingReply_MoveInCounter) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func (m *EquipmentMaterialOperatingReply_MoveInCounter) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

// 材料
type EquipmentMaterialOperatingReply_Material struct {
	// 標示卡條碼
	LotId string `protobuf:"bytes,1,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	// 材料ID
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// 材料等級
	Level string `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`
	// 剩餘量
	Qty                  float32  `protobuf:"fixed32,4,opt,name=qty,proto3" json:"qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EquipmentMaterialOperatingReply_Material) Reset() {
	*m = EquipmentMaterialOperatingReply_Material{}
}
func (m *EquipmentMaterialOperatingReply_Material) String() string { return proto.CompactTextString(m) }
func (*EquipmentMaterialOperatingReply_Material) ProtoMessage()    {}
func (*EquipmentMaterialOperatingReply_Material) Descriptor() ([]byte, []int) {
	return fileDescriptor_e79673f8b832970f, []int{1, 1}
}

func (m *EquipmentMaterialOperatingReply_Material) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EquipmentMaterialOperatingReply_Material.Unmarshal(m, b)
}
func (m *EquipmentMaterialOperatingReply_Material) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EquipmentMaterialOperatingReply_Material.Marshal(b, m, deterministic)
}
func (m *EquipmentMaterialOperatingReply_Material) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EquipmentMaterialOperatingReply_Material.Merge(m, src)
}
func (m *EquipmentMaterialOperatingReply_Material) XXX_Size() int {
	return xxx_messageInfo_EquipmentMaterialOperatingReply_Material.Size(m)
}
func (m *EquipmentMaterialOperatingReply_Material) XXX_DiscardUnknown() {
	xxx_messageInfo_EquipmentMaterialOperatingReply_Material.DiscardUnknown(m)
}

var xxx_messageInfo_EquipmentMaterialOperatingReply_Material proto.InternalMessageInfo

func (m *EquipmentMaterialOperatingReply_Material) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

func (m *EquipmentMaterialOperatingReply_Material) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *EquipmentMaterialOperatingReply_Material) GetLevel() string {
	if m != nil {
		return m.Level
	}
	return ""
}

func (m *EquipmentMaterialOperatingReply_Material) GetQty() float32 {
	if m != nil {
		return m.Qty
	}
	return 0
}

func init() {
	proto.RegisterType((*EquipmentMaterialOperatingRequest)(nil), "proto.mes.EquipmentMaterialOperatingRequest")
	proto.RegisterType((*EquipmentMaterialOperatingReply)(nil), "proto.mes.EquipmentMaterialOperatingReply")
	proto.RegisterType((*EquipmentMaterialOperatingReply_MoveInCounter)(nil), "proto.mes.EquipmentMaterialOperatingReply.MoveInCounter")
	proto.RegisterType((*EquipmentMaterialOperatingReply_Material)(nil), "proto.mes.EquipmentMaterialOperatingReply.Material")
}

func init() {
	proto.RegisterFile("equipment_material_operating.proto", fileDescriptor_e79673f8b832970f)
}

var fileDescriptor_e79673f8b832970f = []byte{
	// 486 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x53, 0x4d, 0x8f, 0xd3, 0x30,
	0x10, 0x55, 0x9a, 0xb6, 0x22, 0x2e, 0x65, 0x91, 0xb5, 0x2b, 0x45, 0x91, 0x56, 0x74, 0x7b, 0x40,
	0x3d, 0x39, 0xa8, 0x15, 0x82, 0x13, 0x87, 0xe5, 0x43, 0xaa, 0x44, 0x59, 0x11, 0x71, 0xe2, 0x12,
	0xbc, 0xf1, 0xa8, 0x18, 0x62, 0x4f, 0xea, 0x38, 0x45, 0xfd, 0x0d, 0xfc, 0x59, 0x7e, 0x02, 0x8a,
	0xf3, 0xd1, 0xb2, 0x87, 0x45, 0x7b, 0x8a, 0xfd, 0xde, 0xcc, 0x7b, 0xce, 0xf3, 0x98, 0xcc, 0x61,
	0x57, 0xc9, 0x42, 0x81, 0xb6, 0xa9, 0xe2, 0x16, 0x8c, 0xe4, 0x79, 0x8a, 0x05, 0x18, 0x6e, 0xa5,
	0xde, 0xb2, 0xc2, 0xa0, 0x45, 0x1a, 0xb8, 0x0f, 0x53, 0x50, 0x46, 0x33, 0xb7, 0x8c, 0x15, 0x94,
	0x71, 0x86, 0x02, 0x62, 0x30, 0x06, 0x4d, 0x0c, 0xba, 0x52, 0x65, 0x53, 0x1c, 0x45, 0x77, 0x2b,
	0x8e, 0xdc, 0xfc, 0xf7, 0x80, 0x5c, 0xbd, 0xef, 0xfc, 0x36, 0xad, 0xdd, 0x4d, 0xe7, 0x96, 0xc0,
	0xae, 0x82, 0xd2, 0xd2, 0x37, 0x64, 0xc2, 0x33, 0x2b, 0x51, 0xa7, 0xf6, 0x50, 0x40, 0xe8, 0xcd,
	0xbc, 0xc5, 0x93, 0xe5, 0x25, 0xeb, 0x0f, 0xc1, 0x6a, 0x5d, 0xf6, 0xa1, 0xd2, 0xae, 0x68, 0x83,
	0x02, 0xf2, 0x84, 0x34, 0x1d, 0x5f, 0x0e, 0x05, 0xd0, 0x2b, 0xf2, 0xb8, 0xed, 0x47, 0x23, 0xc0,
	0x84, 0x83, 0x99, 0xb7, 0x18, 0x25, 0xad, 0xe6, 0x4d, 0x0d, 0xd1, 0x0b, 0x32, 0xce, 0xd1, 0xa6,
	0x52, 0x84, 0xfe, 0xcc, 0x5b, 0x04, 0xc9, 0x28, 0x47, 0xbb, 0x16, 0x75, 0x67, 0x61, 0x30, 0x83,
	0xb2, 0x4c, 0x35, 0x57, 0x10, 0x0e, 0x1d, 0x39, 0x69, 0xb1, 0x4f, 0x5c, 0x39, 0xf1, 0x63, 0x62,
	0x52, 0x84, 0xa3, 0xa6, 0xa4, 0xc7, 0xd6, 0x82, 0x3e, 0x27, 0x67, 0x7d, 0x94, 0xad, 0xcb, 0xd8,
	0x55, 0x4d, 0x3b, 0xf8, 0x63, 0xed, 0x36, 0xff, 0xe3, 0x93, 0x67, 0xf7, 0xa5, 0x51, 0xe4, 0x07,
	0x7a, 0x4d, 0x7c, 0x30, 0xa6, 0xcd, 0xe0, 0xc5, 0xdd, 0x0c, 0x5c, 0xfa, 0xec, 0x1e, 0x8d, 0xba,
	0x99, 0x7e, 0x23, 0x67, 0x0a, 0xf7, 0x90, 0x4a, 0x9d, 0x66, 0x58, 0x69, 0xeb, 0x22, 0xf1, 0x17,
	0x93, 0xe5, 0xeb, 0x13, 0xbd, 0xff, 0x1c, 0x84, 0x6d, 0x70, 0x0f, 0x6b, 0xfd, 0xb6, 0xe9, 0x4f,
	0xa6, 0xea, 0x74, 0x4b, 0x3f, 0x93, 0xa0, 0xfb, 0xb5, 0x32, 0xf4, 0x9d, 0xf6, 0xea, 0x21, 0xda,
	0x2d, 0x9c, 0x1c, 0x55, 0xa2, 0x1f, 0x64, 0xfa, 0x8f, 0x25, 0x5d, 0x91, 0x8b, 0x0c, 0xb5, 0xe5,
	0x52, 0x83, 0x49, 0x05, 0x94, 0x99, 0x91, 0x45, 0x7d, 0xa1, 0x2e, 0x9b, 0x20, 0x39, 0xef, 0xc9,
	0x77, 0x47, 0x8e, 0x3e, 0x25, 0xfe, 0xce, 0x1e, 0xdc, 0x04, 0x0c, 0x92, 0x7a, 0x49, 0x29, 0x19,
	0x56, 0x5a, 0xda, 0xf6, 0xde, 0xdd, 0x3a, 0xfa, 0x4e, 0x1e, 0x75, 0x47, 0x38, 0x99, 0x0c, 0xef,
	0x74, 0x32, 0x2e, 0x09, 0x29, 0x0c, 0x8a, 0x2a, 0x73, 0xd4, 0xc0, 0x51, 0x41, 0x8b, 0xac, 0x05,
	0x3d, 0x27, 0xa3, 0x1c, 0xf6, 0x90, 0xf7, 0xe3, 0x54, 0x6f, 0x3a, 0xf7, 0x61, 0xef, 0x7e, 0xfd,
	0xea, 0xeb, 0xcb, 0xad, 0xb4, 0x39, 0xbf, 0x65, 0x3f, 0x41, 0x0b, 0xce, 0x32, 0x54, 0xcc, 0xfe,
	0x8a, 0xdd, 0x26, 0xce, 0x50, 0x29, 0xd4, 0x65, 0xbc, 0x5f, 0xc6, 0xcd, 0x1b, 0xda, 0x62, 0xce,
	0xf5, 0xb6, 0x7e, 0x4a, 0xb7, 0x63, 0x87, 0xac, 0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xb2, 0x96,
	0xc0, 0x22, 0xaf, 0x03, 0x00, 0x00,
}
