// Code generated by protoc-gen-go. DO NOT EDIT.
// source: list_measurement_params.proto

package mes

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	rs "gitlab.kenda.com.tw/kenda/commons/v2/proto/golang/dm/rs"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListMeasurementParametersRequest struct {
	FactoryId   rs.FactoryID   `protobuf:"varint,1,opt,name=factory_id,json=factoryId,proto3,enum=proto.dm.rs.FactoryID" json:"factory_id,omitempty"`
	ProductId   string         `protobuf:"bytes,2,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	StageStatus rs.StageStatus `protobuf:"varint,3,opt,name=stage_status,json=stageStatus,proto3,enum=proto.dm.rs.StageStatus" json:"stage_status,omitempty"`
	Major       string         `protobuf:"bytes,4,opt,name=major,proto3" json:"major,omitempty"`
	Minor       string         `protobuf:"bytes,5,opt,name=minor,proto3" json:"minor,omitempty"`
	Equipment   string         `protobuf:"bytes,6,opt,name=equipment,proto3" json:"equipment,omitempty"`
	// 途程名稱
	ProcessName          string   `protobuf:"bytes,7,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	LotId                string   `protobuf:"bytes,8,opt,name=lot_id,json=lotId,proto3" json:"lot_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMeasurementParametersRequest) Reset()         { *m = ListMeasurementParametersRequest{} }
func (m *ListMeasurementParametersRequest) String() string { return proto.CompactTextString(m) }
func (*ListMeasurementParametersRequest) ProtoMessage()    {}
func (*ListMeasurementParametersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_93242b001dd3c437, []int{0}
}

func (m *ListMeasurementParametersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMeasurementParametersRequest.Unmarshal(m, b)
}
func (m *ListMeasurementParametersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMeasurementParametersRequest.Marshal(b, m, deterministic)
}
func (m *ListMeasurementParametersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMeasurementParametersRequest.Merge(m, src)
}
func (m *ListMeasurementParametersRequest) XXX_Size() int {
	return xxx_messageInfo_ListMeasurementParametersRequest.Size(m)
}
func (m *ListMeasurementParametersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMeasurementParametersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMeasurementParametersRequest proto.InternalMessageInfo

func (m *ListMeasurementParametersRequest) GetFactoryId() rs.FactoryID {
	if m != nil {
		return m.FactoryId
	}
	return rs.FactoryID_FACTORY_UNSPECIFIED
}

func (m *ListMeasurementParametersRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

func (m *ListMeasurementParametersRequest) GetStageStatus() rs.StageStatus {
	if m != nil {
		return m.StageStatus
	}
	return rs.StageStatus_STAGE_STATUS_UNSPECIFIED
}

func (m *ListMeasurementParametersRequest) GetMajor() string {
	if m != nil {
		return m.Major
	}
	return ""
}

func (m *ListMeasurementParametersRequest) GetMinor() string {
	if m != nil {
		return m.Minor
	}
	return ""
}

func (m *ListMeasurementParametersRequest) GetEquipment() string {
	if m != nil {
		return m.Equipment
	}
	return ""
}

func (m *ListMeasurementParametersRequest) GetProcessName() string {
	if m != nil {
		return m.ProcessName
	}
	return ""
}

func (m *ListMeasurementParametersRequest) GetLotId() string {
	if m != nil {
		return m.LotId
	}
	return ""
}

type ListMeasurementParametersReply struct {
	Parameters           []*ListMeasurementParametersReply_Parameter `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                    `json:"-"`
	XXX_unrecognized     []byte                                      `json:"-"`
	XXX_sizecache        int32                                       `json:"-"`
}

func (m *ListMeasurementParametersReply) Reset()         { *m = ListMeasurementParametersReply{} }
func (m *ListMeasurementParametersReply) String() string { return proto.CompactTextString(m) }
func (*ListMeasurementParametersReply) ProtoMessage()    {}
func (*ListMeasurementParametersReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_93242b001dd3c437, []int{1}
}

func (m *ListMeasurementParametersReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMeasurementParametersReply.Unmarshal(m, b)
}
func (m *ListMeasurementParametersReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMeasurementParametersReply.Marshal(b, m, deterministic)
}
func (m *ListMeasurementParametersReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMeasurementParametersReply.Merge(m, src)
}
func (m *ListMeasurementParametersReply) XXX_Size() int {
	return xxx_messageInfo_ListMeasurementParametersReply.Size(m)
}
func (m *ListMeasurementParametersReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMeasurementParametersReply.DiscardUnknown(m)
}

var xxx_messageInfo_ListMeasurementParametersReply proto.InternalMessageInfo

func (m *ListMeasurementParametersReply) GetParameters() []*ListMeasurementParametersReply_Parameter {
	if m != nil {
		return m.Parameters
	}
	return nil
}

type ListMeasurementParametersReply_Parameter struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Unit                 string   `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`
	Central              float32  `protobuf:"fixed32,4,opt,name=central,proto3" json:"central,omitempty"`
	Min                  float32  `protobuf:"fixed32,5,opt,name=min,proto3" json:"min,omitempty"`
	Max                  float32  `protobuf:"fixed32,6,opt,name=max,proto3" json:"max,omitempty"`
	ErrorMargin          float32  `protobuf:"fixed32,7,opt,name=error_margin,json=errorMargin,proto3" json:"error_margin,omitempty"`
	Enum                 int32    `protobuf:"varint,8,opt,name=enum,proto3" json:"enum,omitempty"`
	Description          string   `protobuf:"bytes,9,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMeasurementParametersReply_Parameter) Reset() {
	*m = ListMeasurementParametersReply_Parameter{}
}
func (m *ListMeasurementParametersReply_Parameter) String() string { return proto.CompactTextString(m) }
func (*ListMeasurementParametersReply_Parameter) ProtoMessage()    {}
func (*ListMeasurementParametersReply_Parameter) Descriptor() ([]byte, []int) {
	return fileDescriptor_93242b001dd3c437, []int{1, 0}
}

func (m *ListMeasurementParametersReply_Parameter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMeasurementParametersReply_Parameter.Unmarshal(m, b)
}
func (m *ListMeasurementParametersReply_Parameter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMeasurementParametersReply_Parameter.Marshal(b, m, deterministic)
}
func (m *ListMeasurementParametersReply_Parameter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMeasurementParametersReply_Parameter.Merge(m, src)
}
func (m *ListMeasurementParametersReply_Parameter) XXX_Size() int {
	return xxx_messageInfo_ListMeasurementParametersReply_Parameter.Size(m)
}
func (m *ListMeasurementParametersReply_Parameter) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMeasurementParametersReply_Parameter.DiscardUnknown(m)
}

var xxx_messageInfo_ListMeasurementParametersReply_Parameter proto.InternalMessageInfo

func (m *ListMeasurementParametersReply_Parameter) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ListMeasurementParametersReply_Parameter) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ListMeasurementParametersReply_Parameter) GetUnit() string {
	if m != nil {
		return m.Unit
	}
	return ""
}

func (m *ListMeasurementParametersReply_Parameter) GetCentral() float32 {
	if m != nil {
		return m.Central
	}
	return 0
}

func (m *ListMeasurementParametersReply_Parameter) GetMin() float32 {
	if m != nil {
		return m.Min
	}
	return 0
}

func (m *ListMeasurementParametersReply_Parameter) GetMax() float32 {
	if m != nil {
		return m.Max
	}
	return 0
}

func (m *ListMeasurementParametersReply_Parameter) GetErrorMargin() float32 {
	if m != nil {
		return m.ErrorMargin
	}
	return 0
}

func (m *ListMeasurementParametersReply_Parameter) GetEnum() int32 {
	if m != nil {
		return m.Enum
	}
	return 0
}

func (m *ListMeasurementParametersReply_Parameter) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*ListMeasurementParametersRequest)(nil), "proto.mes.ListMeasurementParametersRequest")
	proto.RegisterType((*ListMeasurementParametersReply)(nil), "proto.mes.ListMeasurementParametersReply")
	proto.RegisterType((*ListMeasurementParametersReply_Parameter)(nil), "proto.mes.ListMeasurementParametersReply.Parameter")
}

func init() { proto.RegisterFile("list_measurement_params.proto", fileDescriptor_93242b001dd3c437) }

var fileDescriptor_93242b001dd3c437 = []byte{
	// 462 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcd, 0x6e, 0xd4, 0x30,
	0x14, 0x85, 0x95, 0x4c, 0x67, 0x4a, 0x9c, 0x0a, 0x21, 0x8b, 0x1f, 0xab, 0xa2, 0x28, 0x74, 0x35,
	0x2b, 0x47, 0x9a, 0xaa, 0x62, 0xc1, 0x0e, 0x21, 0xa4, 0x91, 0x28, 0x42, 0x9e, 0x1d, 0x9b, 0xc8,
	0x4d, 0x2e, 0x91, 0x21, 0xb6, 0x53, 0xdb, 0x81, 0xce, 0xa3, 0xf1, 0x22, 0x2c, 0x79, 0x16, 0xe4,
	0x9b, 0x34, 0x6d, 0x37, 0xb3, 0x9a, 0x73, 0x3e, 0x5f, 0x9f, 0xb1, 0x4f, 0x4c, 0xce, 0x3a, 0xe5,
	0x43, 0xa5, 0x41, 0xfa, 0xc1, 0x81, 0x06, 0x13, 0xaa, 0x5e, 0x3a, 0xa9, 0x3d, 0xef, 0x9d, 0x0d,
	0x96, 0x66, 0xf8, 0xc3, 0x35, 0xf8, 0xd3, 0x57, 0x28, 0xcb, 0x46, 0x97, 0xce, 0x97, 0x60, 0x86,
	0xbb, 0x99, 0xf3, 0x3f, 0x29, 0x29, 0x3e, 0x2b, 0x1f, 0xae, 0xee, 0x43, 0xbe, 0xc6, 0x0c, 0x08,
	0xe0, 0xbc, 0x80, 0x9b, 0x01, 0x7c, 0xa0, 0x97, 0x84, 0x7c, 0x97, 0x75, 0xb0, 0x6e, 0x5f, 0xa9,
	0x86, 0x25, 0x45, 0xb2, 0x7e, 0xba, 0x79, 0x39, 0x06, 0xf0, 0x46, 0x73, 0xe7, 0xf9, 0xa7, 0x71,
	0x79, 0xfb, 0x51, 0x64, 0xd3, 0xe4, 0xb6, 0xa1, 0x67, 0x84, 0xf4, 0xce, 0x36, 0x43, 0x1d, 0xe2,
	0xb6, 0xb4, 0x48, 0xd6, 0x99, 0xc8, 0x26, 0xb2, 0x6d, 0xe8, 0x7b, 0x72, 0xe2, 0x83, 0x6c, 0xa1,
	0xf2, 0x41, 0x86, 0xc1, 0xb3, 0x05, 0xe6, 0xb2, 0x47, 0xb9, 0xbb, 0x38, 0xb0, 0xc3, 0x75, 0x91,
	0xfb, 0x7b, 0x43, 0x9f, 0x93, 0xa5, 0x96, 0x3f, 0xac, 0x63, 0x47, 0x18, 0x3b, 0x1a, 0xa4, 0xca,
	0x58, 0xc7, 0x96, 0x13, 0x8d, 0x86, 0xbe, 0x26, 0x19, 0xdc, 0x0c, 0xaa, 0x8f, 0x97, 0x63, 0xab,
	0xf1, 0x18, 0x33, 0xa0, 0x6f, 0xc9, 0x49, 0xef, 0x6c, 0x0d, 0xde, 0x57, 0x46, 0x6a, 0x60, 0xc7,
	0x38, 0x90, 0x4f, 0xec, 0x8b, 0xd4, 0x40, 0x5f, 0x90, 0x55, 0x67, 0xf1, 0x12, 0x4f, 0xc6, 0xdc,
	0xce, 0x86, 0x6d, 0x73, 0xfe, 0x37, 0x25, 0x6f, 0x0e, 0x74, 0xd7, 0x77, 0x7b, 0xba, 0x23, 0xa4,
	0x9f, 0x11, 0x4b, 0x8a, 0xc5, 0x3a, 0xdf, 0x5c, 0xf0, 0xf9, 0xbb, 0xf0, 0xc3, 0xdb, 0xf9, 0xec,
	0xc5, 0x83, 0x98, 0xd3, 0x7f, 0x09, 0xc9, 0xe6, 0x15, 0x4a, 0xc9, 0x11, 0x9e, 0x3b, 0xc1, 0xa3,
	0xa1, 0x8e, 0x2c, 0xec, 0x7b, 0x98, 0x3a, 0x47, 0x1d, 0xd9, 0x60, 0x54, 0xc0, 0x9a, 0x33, 0x81,
	0x9a, 0x32, 0x72, 0x5c, 0x83, 0x09, 0x4e, 0x76, 0xd8, 0x63, 0x2a, 0xee, 0x2c, 0x7d, 0x46, 0x16,
	0x5a, 0x19, 0xec, 0x31, 0x15, 0x51, 0x22, 0x91, 0xb7, 0xd8, 0x5f, 0x24, 0xf2, 0x36, 0x36, 0x07,
	0xce, 0x59, 0x57, 0x69, 0xe9, 0x5a, 0x65, 0xb0, 0xb9, 0x54, 0xe4, 0xc8, 0xae, 0x10, 0xc5, 0x3f,
	0x8d, 0xaf, 0x0d, 0x7b, 0x5b, 0x0a, 0xd4, 0xb4, 0x20, 0x79, 0x03, 0xbe, 0x76, 0xaa, 0x0f, 0xca,
	0x1a, 0x96, 0x8d, 0x7d, 0x3f, 0x40, 0x1f, 0xde, 0x7d, 0xbb, 0x6c, 0x55, 0xe8, 0xe4, 0x35, 0xff,
	0x09, 0xa6, 0x91, 0xbc, 0xb6, 0x9a, 0x87, 0xdf, 0x25, 0x9a, 0xb2, 0xb6, 0x5a, 0x5b, 0xe3, 0xcb,
	0x5f, 0x9b, 0x72, 0x7c, 0xd4, 0xad, 0xed, 0xa4, 0x69, 0x4b, 0x0d, 0xfe, 0x7a, 0x85, 0xe4, 0xe2,
	0x7f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xce, 0x26, 0x7c, 0x7d, 0x19, 0x03, 0x00, 0x00,
}
